{"version":3,"file":"mod.js","sources":["../node_modules/@stdlib/utils-define-property/lib/define_property.js","../node_modules/@stdlib/utils-define-property/lib/builtin.js","../node_modules/@stdlib/utils-define-property/lib/index.js","../node_modules/@stdlib/utils-define-property/lib/polyfill.js","../node_modules/@stdlib/utils-define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils-define-nonenumerable-read-only-property/lib/main.js","../node_modules/readable-stream/lib/ours/primordials.js","../node_modules/readable-stream/lib/ours/util.js","../node_modules/event-target-shim/dist/event-target-shim.mjs","../node_modules/abort-controller/dist/abort-controller.mjs","../node_modules/readable-stream/lib/ours/errors.js","../node_modules/readable-stream/lib/internal/validators.js","../node_modules/readable-stream/lib/internal/streams/utils.js","../node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/readable-stream/lib/internal/streams/legacy.js","../node_modules/readable-stream/lib/internal/streams/add-abort-signal.js","../node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/readable-stream/lib/internal/streams/from.js","../node_modules/readable-stream/lib/internal/streams/readable.js","../node_modules/readable-stream/lib/internal/streams/writable.js","../node_modules/readable-stream/lib/internal/streams/duplexify.js","../node_modules/readable-stream/lib/internal/streams/duplex.js","../node_modules/readable-stream/lib/internal/streams/transform.js","../node_modules/readable-stream/lib/internal/streams/passthrough.js","../node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/readable-stream/lib/internal/streams/compose.js","../node_modules/readable-stream/lib/stream/promises.js","../node_modules/readable-stream/lib/ours/index.js","../node_modules/readable-stream/lib/stream.js","../node_modules/readable-stream/lib/internal/streams/operators.js","../node_modules/@stdlib/assert-is-number/lib/primitive.js","../node_modules/@stdlib/assert-has-tostringtag-support/lib/main.js","../node_modules/@stdlib/assert-has-symbol-support/lib/main.js","../node_modules/@stdlib/utils-native-class/lib/tostring.js","../node_modules/@stdlib/assert-has-own-property/lib/main.js","../node_modules/@stdlib/utils-native-class/lib/tostringtag.js","../node_modules/@stdlib/utils-native-class/lib/index.js","../node_modules/@stdlib/utils-native-class/lib/polyfill.js","../node_modules/@stdlib/utils-native-class/lib/native_class.js","../node_modules/@stdlib/number-ctor/lib/number.js","../node_modules/@stdlib/assert-is-number/lib/tostring.js","../node_modules/@stdlib/assert-is-number/lib/object.js","../node_modules/@stdlib/assert-is-number/lib/try2serialize.js","../node_modules/@stdlib/assert-is-number/lib/main.js","../node_modules/@stdlib/assert-is-positive-number/lib/primitive.js","../node_modules/@stdlib/assert-is-positive-number/lib/object.js","../node_modules/@stdlib/assert-is-positive-number/lib/main.js","../node_modules/@stdlib/math-base-assert-is-nan/lib/main.js","../node_modules/@stdlib/assert-is-number/lib/index.js","../node_modules/@stdlib/assert-is-positive-number/lib/index.js","../node_modules/@stdlib/utils-type-of/lib/fixtures/re.js","../node_modules/@stdlib/assert-is-boolean/lib/primitive.js","../node_modules/@stdlib/assert-is-boolean/lib/tostring.js","../node_modules/@stdlib/assert-is-boolean/lib/object.js","../node_modules/@stdlib/assert-is-boolean/lib/try2serialize.js","../node_modules/@stdlib/assert-is-boolean/lib/main.js","../node_modules/@stdlib/utils-global/lib/codegen.js","../node_modules/@stdlib/assert-is-boolean/lib/index.js","../node_modules/@stdlib/utils-global/lib/self.js","../node_modules/@stdlib/utils-global/lib/window.js","../node_modules/@stdlib/utils-global/lib/global.js","../node_modules/@stdlib/utils-type-of/lib/fixtures/nodelist.js","../node_modules/@stdlib/utils-global/lib/main.js","../node_modules/@stdlib/utils-type-of/lib/fixtures/typedarray.js","../node_modules/@stdlib/regexp-function-name/lib/main.js","../node_modules/@stdlib/regexp-function-name/lib/regexp.js","../node_modules/@stdlib/regexp-function-name/lib/index.js","../node_modules/@stdlib/assert-is-array/lib/main.js","../node_modules/@stdlib/assert-is-object-like/lib/main.js","../node_modules/@stdlib/assert-is-buffer/lib/main.js","../node_modules/@stdlib/utils-constructor-name/lib/main.js","../node_modules/@stdlib/assert-is-object-like/lib/index.js","../node_modules/@stdlib/assert-tools-array-function/lib/arrayfcn.js","../node_modules/@stdlib/utils-type-of/lib/index.js","../node_modules/@stdlib/utils-type-of/lib/check.js","../node_modules/@stdlib/utils-type-of/lib/polyfill.js","../node_modules/@stdlib/utils-type-of/lib/typeof.js","../node_modules/@stdlib/assert-is-function/lib/main.js","../node_modules/@stdlib/utils-get-prototype-of/lib/native.js","../node_modules/@stdlib/utils-get-prototype-of/lib/detect.js","../node_modules/@stdlib/utils-get-prototype-of/lib/polyfill.js","../node_modules/@stdlib/utils-get-prototype-of/lib/proto.js","../node_modules/@stdlib/utils-get-prototype-of/lib/get_prototype_of.js","../node_modules/@stdlib/assert-is-error/lib/main.js","../node_modules/@stdlib/constants-float64-pinf/lib/index.js","../node_modules/@stdlib/constants-float64-ninf/lib/index.js","../node_modules/@stdlib/math-base-special-floor/lib/main.js","../node_modules/@stdlib/math-base-assert-is-integer/lib/is_integer.js","../node_modules/@stdlib/assert-is-integer/lib/integer.js","../node_modules/@stdlib/assert-is-integer/lib/primitive.js","../node_modules/@stdlib/assert-is-integer/lib/object.js","../node_modules/@stdlib/assert-is-integer/lib/main.js","../node_modules/@stdlib/assert-is-nonnegative-integer/lib/primitive.js","../node_modules/@stdlib/assert-is-nonnegative-integer/lib/object.js","../node_modules/@stdlib/assert-is-nonnegative-integer/lib/main.js","../node_modules/@stdlib/assert-is-string/lib/primitive.js","../node_modules/@stdlib/assert-is-integer/lib/index.js","../node_modules/@stdlib/assert-is-nonnegative-integer/lib/index.js","../node_modules/@stdlib/assert-is-string/lib/valueof.js","../node_modules/@stdlib/assert-is-string/lib/object.js","../node_modules/@stdlib/assert-is-string/lib/try2valueof.js","../node_modules/@stdlib/assert-is-string/lib/main.js","../node_modules/@stdlib/regexp-regexp/lib/main.js","../node_modules/@stdlib/string-base-format-interpolate/lib/is_number.js","../node_modules/@stdlib/string-base-format-interpolate/lib/zero_pad.js","../node_modules/@stdlib/assert-is-string/lib/index.js","../node_modules/@stdlib/regexp-regexp/lib/index.js","../node_modules/@stdlib/string-base-format-interpolate/lib/format_integer.js","../node_modules/@stdlib/string-base-format-interpolate/lib/is_string.js","../node_modules/@stdlib/string-base-format-interpolate/lib/format_double.js","../node_modules/@stdlib/string-base-format-interpolate/lib/space_pad.js","../node_modules/@stdlib/string-base-format-interpolate/lib/main.js","../node_modules/@stdlib/string-base-format-tokenize/lib/main.js","../node_modules/@stdlib/string-format/lib/is_string.js","../node_modules/@stdlib/string-format/lib/main.js","../node_modules/@stdlib/assert-is-nan/lib/primitive.js","../node_modules/@stdlib/assert-is-nan/lib/object.js","../node_modules/@stdlib/assert-is-nan/lib/main.js","../node_modules/@stdlib/assert-is-nan/lib/index.js","../node_modules/@stdlib/assert-is-collection/lib/main.js","../node_modules/@stdlib/constants-array-max-typed-array-length/lib/index.js","../node_modules/@stdlib/utils-index-of/lib/index_of.js","../node_modules/@stdlib/utils-keys/lib/builtin.js","../node_modules/@stdlib/utils-keys/lib/has_builtin.js","../node_modules/@stdlib/assert-is-arguments/lib/main.js","../node_modules/@stdlib/assert-is-arguments/lib/detect.js","../node_modules/@stdlib/assert-is-enumerable-property/lib/native.js","../node_modules/@stdlib/assert-is-enumerable-property/lib/has_string_enumerability_bug.js","../node_modules/@stdlib/assert-is-enumerable-property/lib/main.js","../node_modules/@stdlib/assert-is-arguments/lib/index.js","../node_modules/@stdlib/assert-is-arguments/lib/polyfill.js","../node_modules/@stdlib/constants-uint32-max/lib/index.js","../node_modules/@stdlib/utils-keys/lib/builtin_wrapper.js","../node_modules/@stdlib/utils-noop/lib/noop.js","../node_modules/@stdlib/utils-keys/lib/has_enumerable_prototype_bug.js","../node_modules/@stdlib/utils-keys/lib/has_non_enumerable_properties_bug.js","../node_modules/@stdlib/utils-keys/lib/is_constructor_prototype.js","../node_modules/@stdlib/utils-keys/lib/window.js","../node_modules/@stdlib/utils-keys/lib/has_automation_equality_bug.js","../node_modules/@stdlib/utils-keys/lib/has_window.js","../node_modules/@stdlib/utils-keys/lib/main.js","../node_modules/@stdlib/utils-keys/lib/has_arguments_bug.js","../node_modules/@stdlib/utils-keys/lib/polyfill.js","../node_modules/@stdlib/utils-keys/lib/is_constructor_prototype_wrapper.js","../node_modules/@stdlib/utils-property-names/lib/has_builtin.js","../node_modules/@stdlib/utils-property-names/lib/builtin.js","../node_modules/@stdlib/utils-property-names/lib/index.js","../node_modules/@stdlib/utils-property-names/lib/polyfill.js","../node_modules/@stdlib/utils-property-descriptor/lib/has_builtin.js","../node_modules/@stdlib/utils-property-descriptor/lib/builtin.js","../node_modules/@stdlib/utils-property-descriptor/lib/index.js","../node_modules/@stdlib/utils-property-descriptor/lib/polyfill.js","../node_modules/@stdlib/assert-has-node-buffer-support/lib/buffer.js","../node_modules/@stdlib/buffer-ctor/lib/buffer.js","../node_modules/@stdlib/buffer-ctor/lib/index.js","../node_modules/@stdlib/assert-has-node-buffer-support/lib/main.js","../node_modules/@stdlib/buffer-ctor/lib/polyfill.js","../node_modules/@stdlib/buffer-from-buffer/lib/index.js","../node_modules/@stdlib/buffer-from-buffer/lib/has_from.js","../node_modules/@stdlib/buffer-from-buffer/lib/main.js","../node_modules/@stdlib/buffer-from-buffer/lib/polyfill.js","../node_modules/@stdlib/assert-is-int8array/lib/main.js","../node_modules/@stdlib/constants-int8-max/lib/index.js","../node_modules/@stdlib/assert-has-int8array-support/lib/int8array.js","../node_modules/@stdlib/array-int8/lib/int8array.js","../node_modules/@stdlib/array-int8/lib/index.js","../node_modules/@stdlib/assert-has-int8array-support/lib/main.js","../node_modules/@stdlib/constants-int8-min/lib/index.js","../node_modules/@stdlib/array-int8/lib/polyfill.js","../node_modules/@stdlib/assert-is-uint8array/lib/main.js","../node_modules/@stdlib/constants-uint8-max/lib/index.js","../node_modules/@stdlib/assert-has-uint8array-support/lib/uint8array.js","../node_modules/@stdlib/array-uint8/lib/uint8array.js","../node_modules/@stdlib/array-uint8/lib/index.js","../node_modules/@stdlib/assert-has-uint8array-support/lib/main.js","../node_modules/@stdlib/array-uint8/lib/polyfill.js","../node_modules/@stdlib/assert-is-uint8clampedarray/lib/main.js","../node_modules/@stdlib/assert-has-uint8clampedarray-support/lib/uint8clampedarray.js","../node_modules/@stdlib/array-uint8c/lib/uint8clampedarray.js","../node_modules/@stdlib/array-uint8c/lib/index.js","../node_modules/@stdlib/assert-has-uint8clampedarray-support/lib/main.js","../node_modules/@stdlib/array-uint8c/lib/polyfill.js","../node_modules/@stdlib/assert-is-int16array/lib/main.js","../node_modules/@stdlib/constants-int16-max/lib/index.js","../node_modules/@stdlib/assert-has-int16array-support/lib/int16array.js","../node_modules/@stdlib/array-int16/lib/int16array.js","../node_modules/@stdlib/array-int16/lib/index.js","../node_modules/@stdlib/assert-has-int16array-support/lib/main.js","../node_modules/@stdlib/constants-int16-min/lib/index.js","../node_modules/@stdlib/array-int16/lib/polyfill.js","../node_modules/@stdlib/assert-is-uint16array/lib/main.js","../node_modules/@stdlib/constants-uint16-max/lib/index.js","../node_modules/@stdlib/assert-has-uint16array-support/lib/uint16array.js","../node_modules/@stdlib/array-uint16/lib/uint16array.js","../node_modules/@stdlib/array-uint16/lib/index.js","../node_modules/@stdlib/assert-has-uint16array-support/lib/main.js","../node_modules/@stdlib/array-uint16/lib/polyfill.js","../node_modules/@stdlib/assert-is-int32array/lib/main.js","../node_modules/@stdlib/constants-int32-max/lib/index.js","../node_modules/@stdlib/assert-has-int32array-support/lib/int32array.js","../node_modules/@stdlib/array-int32/lib/int32array.js","../node_modules/@stdlib/array-int32/lib/index.js","../node_modules/@stdlib/assert-has-int32array-support/lib/main.js","../node_modules/@stdlib/constants-int32-min/lib/index.js","../node_modules/@stdlib/array-int32/lib/polyfill.js","../node_modules/@stdlib/assert-is-uint32array/lib/main.js","../node_modules/@stdlib/assert-has-uint32array-support/lib/uint32array.js","../node_modules/@stdlib/array-uint32/lib/uint32array.js","../node_modules/@stdlib/array-uint32/lib/index.js","../node_modules/@stdlib/assert-has-uint32array-support/lib/main.js","../node_modules/@stdlib/array-uint32/lib/polyfill.js","../node_modules/@stdlib/assert-is-float32array/lib/main.js","../node_modules/@stdlib/assert-has-float32array-support/lib/float32array.js","../node_modules/@stdlib/array-float32/lib/float32array.js","../node_modules/@stdlib/array-float32/lib/index.js","../node_modules/@stdlib/assert-has-float32array-support/lib/main.js","../node_modules/@stdlib/array-float32/lib/polyfill.js","../node_modules/@stdlib/assert-is-float64array/lib/main.js","../node_modules/@stdlib/assert-has-float64array-support/lib/float64array.js","../node_modules/@stdlib/assert-has-float64array-support/lib/main.js","../node_modules/@stdlib/array-float64/lib/float64array.js","../node_modules/@stdlib/array-float64/lib/index.js","../node_modules/@stdlib/array-float64/lib/polyfill.js","../node_modules/@stdlib/utils-copy/lib/typed_arrays.js","../node_modules/@stdlib/utils-copy/lib/deep_copy.js","../node_modules/@stdlib/utils-regexp-from-string/lib/from_string.js","../node_modules/@stdlib/utils-copy/lib/copy.js","../node_modules/@stdlib/utils-inherit/lib/validate.js","../node_modules/@stdlib/utils-inherit/lib/native.js","../node_modules/@stdlib/utils-inherit/lib/polyfill.js","../node_modules/@stdlib/utils-inherit/lib/detect.js","../node_modules/@stdlib/utils-define-nonenumerable-property/lib/main.js","../node_modules/@stdlib/utils-define-read-only-accessor/lib/main.js","../node_modules/@stdlib/utils-define-nonenumerable-read-only-accessor/lib/main.js","../node_modules/@stdlib/utils-define-nonenumerable-read-write-accessor/lib/main.js","../node_modules/@stdlib/assert-is-object/lib/main.js","../node_modules/@stdlib/assert-is-plain-object/lib/main.js","../node_modules/@stdlib/utils-constant-function/lib/constant_function.js","../node_modules/@stdlib/assert-is-positive-integer/lib/primitive.js","../node_modules/@stdlib/assert-is-positive-integer/lib/object.js","../node_modules/@stdlib/assert-is-positive-integer/lib/main.js","../node_modules/@stdlib/assert-is-positive-integer/lib/index.js","../node_modules/@stdlib/math-base-assert-is-positive-zero/lib/main.js","../node_modules/@stdlib/math-base-ops-umul/lib/main.js","../node_modules/@stdlib/array-base-arraylike2object/lib/getter.js","../node_modules/@stdlib/array-base-arraylike2object/lib/getter.accessor.js","../node_modules/@stdlib/array-base-arraylike2object/lib/setter.js","../node_modules/@stdlib/array-base-arraylike2object/lib/setter.accessor.js","../node_modules/@stdlib/array-base-arraylike2object/lib/main.js","../node_modules/@stdlib/blas-base-gcopy/lib/accessors.js","../node_modules/@stdlib/blas-base-gcopy/lib/main.js","../node_modules/@stdlib/assert-has-function-name-support/lib/foo.js","../node_modules/@stdlib/blas-base-gcopy/lib/index.js","../node_modules/@stdlib/blas-base-gcopy/lib/ndarray.js","../node_modules/@stdlib/utils-function-name/lib/function_name.js","../node_modules/@stdlib/assert-has-function-name-support/lib/main.js","../node_modules/@stdlib/assert-is-typed-array/lib/ctors.js","../node_modules/@stdlib/assert-is-typed-array/lib/main.js","../node_modules/@stdlib/assert-is-array-like-object/lib/main.js","../node_modules/@stdlib/constants-array-max-array-length/lib/index.js","../node_modules/@stdlib/assert-is-arraybuffer/lib/main.js","../node_modules/@stdlib/complex-float64/lib/main.js","../node_modules/@stdlib/complex-float64/lib/tostring.js","../node_modules/@stdlib/complex-float64/lib/tojson.js","../node_modules/@stdlib/number-float64-base-to-float32/lib/main.js","../node_modules/@stdlib/number-float64-base-to-float32/lib/polyfill.js","../node_modules/@stdlib/number-float64-base-to-float32/lib/index.js","../node_modules/@stdlib/complex-float32/lib/main.js","../node_modules/@stdlib/assert-is-complex-like/lib/main.js","../node_modules/@stdlib/math-base-assert-is-even/lib/is_even.js","../node_modules/@stdlib/assert-has-iterator-symbol-support/lib/main.js","../node_modules/@stdlib/complex-float32/lib/tostring.js","../node_modules/@stdlib/complex-float32/lib/tojson.js","../node_modules/@stdlib/symbol-iterator/lib/main.js","../node_modules/@stdlib/complex-realf/lib/main.js","../node_modules/@stdlib/complex-imagf/lib/main.js","../node_modules/@stdlib/strided-base-reinterpret-complex64/lib/main.js","../node_modules/@stdlib/strided-base-reinterpret-complex128/lib/main.js","../node_modules/@stdlib/array-complex64/lib/from_iterator.js","../node_modules/@stdlib/array-complex64/lib/from_iterator_map.js","../node_modules/@stdlib/array-complex64/lib/from_array.js","../node_modules/@stdlib/array-complex64/lib/main.js","../node_modules/@stdlib/complex-real/lib/main.js","../node_modules/@stdlib/complex-imag/lib/main.js","../node_modules/@stdlib/array-complex128/lib/from_iterator.js","../node_modules/@stdlib/array-complex128/lib/from_iterator_map.js","../node_modules/@stdlib/array-complex128/lib/from_array.js","../node_modules/@stdlib/array-complex128/lib/main.js","../node_modules/@stdlib/assert-is-complex-typed-array/lib/ctors.js","../node_modules/@stdlib/assert-instance-of/lib/main.js","../node_modules/@stdlib/array-to-json/lib/ctors.js","../node_modules/@stdlib/array-to-json/lib/type.js","../node_modules/@stdlib/array-to-json/lib/main.js","../node_modules/@stdlib/assert-is-complex-typed-array/lib/main.js","../node_modules/@stdlib/random-base-mt19937/lib/rand_uint32.js","../node_modules/@stdlib/random-base-mt19937/lib/factory.js","../node_modules/@stdlib/math-base-special-max/lib/max.js","../node_modules/@stdlib/random-base-cosine/lib/validate.js","../node_modules/@stdlib/math-base-assert-is-infinite/lib/main.js","../node_modules/@stdlib/random-base-mt19937/lib/index.js","../node_modules/@stdlib/random-base-mt19937/lib/main.js","../node_modules/@stdlib/assert-is-little-endian/lib/ctors.js","../node_modules/@stdlib/assert-is-little-endian/lib/main.js","../node_modules/@stdlib/number-float64-base-get-high-word/lib/high.js","../node_modules/@stdlib/number-float64-base-get-high-word/lib/main.js","../node_modules/@stdlib/math-base-special-kernel-cos/lib/kernel_cos.js","../node_modules/@stdlib/math-base-special-kernel-cos/lib/polyval_c13.js","../node_modules/@stdlib/math-base-special-kernel-cos/lib/polyval_c46.js","../node_modules/@stdlib/math-base-special-kernel-sin/lib/kernel_sin.js","../node_modules/@stdlib/number-float64-base-get-low-word/lib/low.js","../node_modules/@stdlib/number-float64-base-from-words/lib/indices.js","../node_modules/@stdlib/number-float64-base-get-low-word/lib/main.js","../node_modules/@stdlib/number-float64-base-from-words/lib/main.js","../node_modules/@stdlib/constants-float64-exponent-bias/lib/index.js","../node_modules/@stdlib/number-float64-base-to-words/lib/indices.js","../node_modules/@stdlib/number-float64-base-to-words/lib/to_words.js","../node_modules/@stdlib/number-float64-base-to-words/lib/main.js","../node_modules/@stdlib/math-base-special-copysign/lib/main.js","../node_modules/@stdlib/math-base-special-abs/lib/main.js","../node_modules/@stdlib/number-float64-base-normalize/lib/assign.js","../node_modules/@stdlib/constants-float64-smallest-normal/lib/index.js","../node_modules/@stdlib/number-float64-base-normalize/lib/index.js","../node_modules/@stdlib/number-float64-base-normalize/lib/main.js","../node_modules/@stdlib/math-base-special-ldexp/lib/main.js","../node_modules/@stdlib/number-float64-base-exponent/lib/main.js","../node_modules/@stdlib/constants-float64-high-word-exponent-mask/lib/index.js","../node_modules/@stdlib/constants-float64-min-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/constants-float64-max-base2-exponent/lib/index.js","../node_modules/@stdlib/constants-float64-max-base2-exponent-subnormal/lib/index.js","../node_modules/@stdlib/array-base-zeros/lib/main.js","../node_modules/@stdlib/array-base-filled/lib/main.js","../node_modules/@stdlib/math-base-special-rempio2/lib/kernel_rempio2.js","../node_modules/@stdlib/math-base-special-round/lib/round.js","../node_modules/@stdlib/math-base-special-rempio2/lib/rempio2_medium.js","../node_modules/@stdlib/math-base-special-rempio2/lib/rempio2.js","../node_modules/@stdlib/math-base-special-cos/lib/cos.js","../node_modules/@stdlib/math-base-special-sin/lib/sin.js","../node_modules/@stdlib/constants-float64-pi/lib/index.js","../node_modules/@stdlib/math-base-special-sinpi/lib/sinpi.js","../node_modules/@stdlib/stats-base-dists-cosine-cdf/lib/cdf.js","../node_modules/@stdlib/stats-base-dists-degenerate-cdf/lib/factory.js","../node_modules/@stdlib/stats-base-dists-degenerate-cdf/lib/index.js","../node_modules/@stdlib/stats-base-dists-degenerate-cdf/lib/cdf.js","../node_modules/@stdlib/stats-base-dists-cosine-cdf/lib/index.js","../node_modules/@stdlib/stats-base-dists-cosine-cdf/lib/factory.js","../node_modules/@stdlib/stats-base-dists-cosine-quantile/lib/bisect.js","../node_modules/@stdlib/buffer-from-string/lib/index.js","../node_modules/@stdlib/stats-base-dists-cosine-quantile/lib/quantile.js","../node_modules/@stdlib/stats-base-dists-degenerate-quantile/lib/factory.js","../node_modules/@stdlib/random-base-cosine/lib/cosine.js","../node_modules/@stdlib/random-base-cosine/lib/factory.js","../node_modules/@stdlib/stats-base-dists-degenerate-quantile/lib/index.js","../node_modules/@stdlib/stats-base-dists-degenerate-quantile/lib/quantile.js","../node_modules/@stdlib/stats-base-dists-cosine-quantile/lib/index.js","../node_modules/@stdlib/stats-base-dists-cosine-quantile/lib/factory.js","../node_modules/@stdlib/random-base-cosine/lib/index.js","../node_modules/@stdlib/random-base-cosine/lib/main.js","../node_modules/@stdlib/buffer-from-string/lib/has_from.js","../node_modules/@stdlib/buffer-from-string/lib/main.js","../node_modules/@stdlib/buffer-from-string/lib/polyfill.js","../node_modules/@stdlib/utils-next-tick/lib/main.js","../node_modules/@stdlib/error-tools-fmtprodmsg/lib/main.js","../node_modules/@stdlib/assert-is-nonnegative-number/lib/primitive.js","../node_modules/@stdlib/assert-is-nonnegative-number/lib/object.js","../node_modules/@stdlib/assert-is-nonnegative-number/lib/main.js","../lib/validate.js","../node_modules/@stdlib/assert-is-nonnegative-number/lib/index.js","../lib/debug.js","../lib/main.js","../lib/object_mode.js","../lib/factory.js","../node_modules/@stdlib/utils-inherit/lib/inherit.js","../node_modules/@stdlib/utils-define-read-write-accessor/lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils-define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils-define-property' ;\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js' ;\nimport builtin from './builtin.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an object. Value: `' + obj + '`.' );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( 'invalid argument. Property descriptor must be an object. Value: `' + descriptor + '`.' );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property' ;\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnly;\n","'use strict'\n/*\n  This file is a reduced and adapted version of the main lib/internal/per_context/primordials.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/per_context/primordials.js\n\n  Don't try to replace with the original file and keep it up to date with the upstream file.\n*/\n\nmodule.exports = {\n  ArrayIsArray(self) {\n    return Array.isArray(self)\n  },\n\n  ArrayPrototypeIncludes(self, el) {\n    return self.includes(el)\n  },\n\n  ArrayPrototypeIndexOf(self, el) {\n    return self.indexOf(el)\n  },\n\n  ArrayPrototypeJoin(self, sep) {\n    return self.join(sep)\n  },\n\n  ArrayPrototypeMap(self, fn) {\n    return self.map(fn)\n  },\n\n  ArrayPrototypePop(self, el) {\n    return self.pop(el)\n  },\n\n  ArrayPrototypePush(self, el) {\n    return self.push(el)\n  },\n\n  ArrayPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n\n  Error,\n\n  FunctionPrototypeCall(fn, thisArgs, ...args) {\n    return fn.call(thisArgs, ...args)\n  },\n\n  FunctionPrototypeSymbolHasInstance(self, instance) {\n    return Function.prototype[Symbol.hasInstance].call(self, instance)\n  },\n\n  MathFloor: Math.floor,\n  Number,\n  NumberIsInteger: Number.isInteger,\n  NumberIsNaN: Number.isNaN,\n  NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,\n  NumberParseInt: Number.parseInt,\n\n  ObjectDefineProperties(self, props) {\n    return Object.defineProperties(self, props)\n  },\n\n  ObjectDefineProperty(self, name, prop) {\n    return Object.defineProperty(self, name, prop)\n  },\n\n  ObjectGetOwnPropertyDescriptor(self, name) {\n    return Object.getOwnPropertyDescriptor(self, name)\n  },\n\n  ObjectKeys(obj) {\n    return Object.keys(obj)\n  },\n\n  ObjectSetPrototypeOf(target, proto) {\n    return Object.setPrototypeOf(target, proto)\n  },\n\n  Promise,\n\n  PromisePrototypeCatch(self, fn) {\n    return self.catch(fn)\n  },\n\n  PromisePrototypeThen(self, thenFn, catchFn) {\n    return self.then(thenFn, catchFn)\n  },\n\n  PromiseReject(err) {\n    return Promise.reject(err)\n  },\n\n  ReflectApply: Reflect.apply,\n\n  RegExpPrototypeTest(self, value) {\n    return self.test(value)\n  },\n\n  SafeSet: Set,\n  String,\n\n  StringPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n\n  StringPrototypeToLowerCase(self) {\n    return self.toLowerCase()\n  },\n\n  StringPrototypeToUpperCase(self) {\n    return self.toUpperCase()\n  },\n\n  StringPrototypeTrim(self) {\n    return self.trim()\n  },\n\n  Symbol,\n  SymbolAsyncIterator: Symbol.asyncIterator,\n  SymbolHasInstance: Symbol.hasInstance,\n  SymbolIterator: Symbol.iterator,\n\n  TypedArrayPrototypeSet(self, buf, len) {\n    return self.set(buf, len)\n  },\n\n  Uint8Array\n}\n","'use strict'\n\nconst bufferModule = require('buffer')\n\nconst AsyncFunction = Object.getPrototypeOf(async function () {}).constructor\nconst Blob = globalThis.Blob || bufferModule.Blob\n/* eslint-disable indent */\n\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        // eslint-disable-next-line indent\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\n/* eslint-enable indent */\n// This is a simplified version of AggregateError\n\nclass AggregateError extends Error {\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`)\n    }\n\n    let message = ''\n\n    for (let i = 0; i < errors.length; i++) {\n      message += `    ${errors[i].stack}\\n`\n    }\n\n    super(message)\n    this.name = 'AggregateError'\n    this.errors = errors\n  }\n}\n\nmodule.exports = {\n  AggregateError,\n  kEmptyObject: Object.freeze({}),\n\n  once(callback) {\n    let called = false\n    return function (...args) {\n      if (called) {\n        return\n      }\n\n      called = true\n      callback.apply(this, args)\n    }\n  },\n\n  createDeferredPromise: function () {\n    let resolve\n    let reject // eslint-disable-next-line promise/param-names\n\n    const promise = new Promise((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n    return {\n      promise,\n      resolve,\n      reject\n    }\n  },\n\n  promisify(fn) {\n    return new Promise((resolve, reject) => {\n      fn((err, ...args) => {\n        if (err) {\n          return reject(err)\n        }\n\n        return resolve(...args)\n      })\n    })\n  },\n\n  debuglog() {\n    return function () {}\n  },\n\n  format(format, ...args) {\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function (...[_unused, type]) {\n      const replacement = args.shift()\n\n      if (type === 'f') {\n        return replacement.toFixed(6)\n      } else if (type === 'j') {\n        return JSON.stringify(replacement)\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : ''\n        return `${ctor} {}`.trim()\n      } else {\n        return replacement.toString()\n      }\n    })\n  },\n\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``\n          }\n        }\n\n        return `'${value}'`\n\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN'\n        } else if (Object.is(value, -0)) {\n          return String(value)\n        }\n\n        return value\n\n      case 'bigint':\n        return `${String(value)}n`\n\n      case 'boolean':\n      case 'undefined':\n        return String(value)\n\n      case 'object':\n        return '{}'\n    }\n  },\n\n  types: {\n    isAsyncFunction(fn) {\n      return fn instanceof AsyncFunction\n    },\n\n    isArrayBufferView(arr) {\n      return ArrayBuffer.isView(arr)\n    }\n  },\n  isBlob\n}\nmodule.exports.promisify.custom = Symbol.for('nodejs.util.promisify.custom')\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\nexport default EventTarget;\nexport { defineEventAttribute, EventTarget };\n//# sourceMappingURL=event-target-shim.mjs.map\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\nimport { EventTarget, defineEventAttribute } from 'event-target-shim';\n\n/**\n * The signal class.\n * @see https://dom.spec.whatwg.org/#abortsignal\n */\nclass AbortSignal extends EventTarget {\n    /**\n     * AbortSignal cannot be constructed directly.\n     */\n    constructor() {\n        super();\n        throw new TypeError(\"AbortSignal cannot be constructed directly\");\n    }\n    /**\n     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n     */\n    get aborted() {\n        const aborted = abortedFlags.get(this);\n        if (typeof aborted !== \"boolean\") {\n            throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? \"null\" : typeof this}`);\n        }\n        return aborted;\n    }\n}\ndefineEventAttribute(AbortSignal.prototype, \"abort\");\n/**\n * Create an AbortSignal object.\n */\nfunction createAbortSignal() {\n    const signal = Object.create(AbortSignal.prototype);\n    EventTarget.call(signal);\n    abortedFlags.set(signal, false);\n    return signal;\n}\n/**\n * Abort a given signal.\n */\nfunction abortSignal(signal) {\n    if (abortedFlags.get(signal) !== false) {\n        return;\n    }\n    abortedFlags.set(signal, true);\n    signal.dispatchEvent({ type: \"abort\" });\n}\n/**\n * Aborted flag for each instances.\n */\nconst abortedFlags = new WeakMap();\n// Properties should be enumerable.\nObject.defineProperties(AbortSignal.prototype, {\n    aborted: { enumerable: true },\n});\n// `toString()` should return `\"[object AbortSignal]\"`\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortSignal\",\n    });\n}\n\n/**\n * The AbortController.\n * @see https://dom.spec.whatwg.org/#abortcontroller\n */\nclass AbortController {\n    /**\n     * Initialize this controller.\n     */\n    constructor() {\n        signals.set(this, createAbortSignal());\n    }\n    /**\n     * Returns the `AbortSignal` object associated with this object.\n     */\n    get signal() {\n        return getSignal(this);\n    }\n    /**\n     * Abort and signal to any observers that the associated activity is to be aborted.\n     */\n    abort() {\n        abortSignal(getSignal(this));\n    }\n}\n/**\n * Associated signals.\n */\nconst signals = new WeakMap();\n/**\n * Get the associated signal of a given controller.\n */\nfunction getSignal(controller) {\n    const signal = signals.get(controller);\n    if (signal == null) {\n        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? \"null\" : typeof controller}`);\n    }\n    return signal;\n}\n// Properties should be enumerable.\nObject.defineProperties(AbortController.prototype, {\n    signal: { enumerable: true },\n    abort: { enumerable: true },\n});\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortController\",\n    });\n}\n\nexport default AbortController;\nexport { AbortController, AbortSignal };\n//# sourceMappingURL=abort-controller.mjs.map\n","'use strict'\n\nconst { format, inspect, AggregateError: CustomAggregateError } = require('./util')\n/*\n  This file is a reduced and adapted version of the main lib/internal/errors.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/errors.js\n\n  Don't try to replace with the original file and keep it up to date (starting from E(...) definitions)\n  with the upstream file.\n*/\n\nconst AggregateError = globalThis.AggregateError || CustomAggregateError\nconst kIsNodeError = Symbol('kIsNodeError')\nconst kTypes = [\n  'string',\n  'function',\n  'number',\n  'object', // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function',\n  'Object',\n  'boolean',\n  'bigint',\n  'symbol'\n]\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/\nconst nodeInternalPrefix = '__node_internal_'\nconst codes = {}\n\nfunction assert(value, message) {\n  if (!value) {\n    throw new codes.ERR_INTERNAL_ASSERTION(message)\n  }\n} // Only use this for integers! Decimal numbers do not work with this function.\n\nfunction addNumericalSeparator(val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n\n  return `${val.slice(0, i)}${res}`\n}\n\nfunction getMessage(key, msg, args) {\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length, // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${msg.length}).`\n    )\n    return msg(...args)\n  }\n\n  const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length\n  assert(\n    expectedLength === args.length,\n    `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`\n  )\n\n  if (args.length === 0) {\n    return msg\n  }\n\n  return format(msg, ...args)\n}\n\nfunction E(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n\n  class NodeError extends Base {\n    constructor(...args) {\n      super(getMessage(code, message, args))\n    }\n\n    toString() {\n      return `${this.name} [${code}]: ${this.message}`\n    }\n  }\n\n  Object.defineProperties(NodeError.prototype, {\n    name: {\n      value: Base.name,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    },\n    toString: {\n      value() {\n        return `${this.name} [${code}]: ${this.message}`\n      },\n\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  })\n  NodeError.prototype.code = code\n  NodeError.prototype[kIsNodeError] = true\n  codes[code] = NodeError\n}\n\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name\n  Object.defineProperty(fn, 'name', {\n    value: hidden\n  })\n  return fn\n}\n\nfunction aggregateTwoErrors(innerError, outerError) {\n  if (innerError && outerError && innerError !== outerError) {\n    if (Array.isArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      outerError.errors.push(innerError)\n      return outerError\n    }\n\n    const err = new AggregateError([outerError, innerError], outerError.message)\n    err.code = outerError.code\n    return err\n  }\n\n  return innerError || outerError\n}\n\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted', options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options', 'Object', options)\n    }\n\n    super(message, options)\n    this.code = 'ABORT_ERR'\n    this.name = 'AbortError'\n  }\n}\n\nE('ERR_ASSERTION', '%s', Error)\nE(\n  'ERR_INVALID_ARG_TYPE',\n  (name, expected, actual) => {\n    assert(typeof name === 'string', \"'name' must be a string\")\n\n    if (!Array.isArray(expected)) {\n      expected = [expected]\n    }\n\n    let msg = 'The '\n\n    if (name.endsWith(' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `\n    } else {\n      msg += `\"${name}\" ${name.includes('.') ? 'property' : 'argument'} `\n    }\n\n    msg += 'must be '\n    const types = []\n    const instances = []\n    const other = []\n\n    for (const value of expected) {\n      assert(typeof value === 'string', 'All expected entries have to be of type string')\n\n      if (kTypes.includes(value)) {\n        types.push(value.toLowerCase())\n      } else if (classRegExp.test(value)) {\n        instances.push(value)\n      } else {\n        assert(value !== 'object', 'The value \"object\" should be written as \"Object\"')\n        other.push(value)\n      }\n    } // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n\n    if (instances.length > 0) {\n      const pos = types.indexOf('object')\n\n      if (pos !== -1) {\n        types.splice(types, pos, 1)\n        instances.push('Object')\n      }\n    }\n\n    if (types.length > 0) {\n      switch (types.length) {\n        case 1:\n          msg += `of type ${types[0]}`\n          break\n\n        case 2:\n          msg += `one of type ${types[0]} or ${types[1]}`\n          break\n\n        default: {\n          const last = types.pop()\n          msg += `one of type ${types.join(', ')}, or ${last}`\n        }\n      }\n\n      if (instances.length > 0 || other.length > 0) {\n        msg += ' or '\n      }\n    }\n\n    if (instances.length > 0) {\n      switch (instances.length) {\n        case 1:\n          msg += `an instance of ${instances[0]}`\n          break\n\n        case 2:\n          msg += `an instance of ${instances[0]} or ${instances[1]}`\n          break\n\n        default: {\n          const last = instances.pop()\n          msg += `an instance of ${instances.join(', ')}, or ${last}`\n        }\n      }\n\n      if (other.length > 0) {\n        msg += ' or '\n      }\n    }\n\n    switch (other.length) {\n      case 0:\n        break\n\n      case 1:\n        if (other[0].toLowerCase() !== other[0]) {\n          msg += 'an '\n        }\n\n        msg += `${other[0]}`\n        break\n\n      case 2:\n        msg += `one of ${other[0]} or ${other[1]}`\n        break\n\n      default: {\n        const last = other.pop()\n        msg += `one of ${other.join(', ')}, or ${last}`\n      }\n    }\n\n    if (actual == null) {\n      msg += `. Received ${actual}`\n    } else if (typeof actual === 'function' && actual.name) {\n      msg += `. Received function ${actual.name}`\n    } else if (typeof actual === 'object') {\n      var _actual$constructor\n\n      if (\n        (_actual$constructor = actual.constructor) !== null &&\n        _actual$constructor !== undefined &&\n        _actual$constructor.name\n      ) {\n        msg += `. Received an instance of ${actual.constructor.name}`\n      } else {\n        const inspected = inspect(actual, {\n          depth: -1\n        })\n        msg += `. Received ${inspected}`\n      }\n    } else {\n      let inspected = inspect(actual, {\n        colors: false\n      })\n\n      if (inspected.length > 25) {\n        inspected = `${inspected.slice(0, 25)}...`\n      }\n\n      msg += `. Received type ${typeof actual} (${inspected})`\n    }\n\n    return msg\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_ARG_VALUE',\n  (name, value, reason = 'is invalid') => {\n    let inspected = inspect(value)\n\n    if (inspected.length > 128) {\n      inspected = inspected.slice(0, 128) + '...'\n    }\n\n    const type = name.includes('.') ? 'property' : 'argument'\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_RETURN_VALUE',\n  (input, name, value) => {\n    var _value$constructor\n\n    const type =\n      value !== null &&\n      value !== undefined &&\n      (_value$constructor = value.constructor) !== null &&\n      _value$constructor !== undefined &&\n      _value$constructor.name\n        ? `instance of ${value.constructor.name}`\n        : `type ${typeof value}`\n    return `Expected ${input} to be returned from the \"${name}\"` + ` function but got ${type}.`\n  },\n  TypeError\n)\nE(\n  'ERR_MISSING_ARGS',\n  (...args) => {\n    assert(args.length > 0, 'At least one arg needs to be specified')\n    let msg\n    const len = args.length\n    args = (Array.isArray(args) ? args : [args]).map((a) => `\"${a}\"`).join(' or ')\n\n    switch (len) {\n      case 1:\n        msg += `The ${args[0]} argument`\n        break\n\n      case 2:\n        msg += `The ${args[0]} and ${args[1]} arguments`\n        break\n\n      default:\n        {\n          const last = args.pop()\n          msg += `The ${args.join(', ')}, and ${last} arguments`\n        }\n        break\n    }\n\n    return `${msg} must be specified`\n  },\n  TypeError\n)\nE(\n  'ERR_OUT_OF_RANGE',\n  (str, range, input) => {\n    assert(range, 'Missing \"range\" argument')\n    let received\n\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received)\n      }\n\n      received += 'n'\n    } else {\n      received = inspect(input)\n    }\n\n    return `The value of \"${str}\" is out of range. It must be ${range}. Received ${received}`\n  },\n  RangeError\n)\nE('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error)\nE('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error)\nE('ERR_STREAM_ALREADY_FINISHED', 'Cannot call %s after a stream was finished', Error)\nE('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error)\nE('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error)\nE('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError)\nE('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error)\nE('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error)\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event', Error)\nE('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error)\nE('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError)\nmodule.exports = {\n  AbortError,\n  aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),\n  hideStackFrames,\n  codes\n}\n","'use strict'\n\nconst {\n  ArrayIsArray,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypeMap,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberMAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER,\n  NumberParseInt,\n  ObjectPrototypeHasOwnProperty,\n  RegExpPrototypeExec,\n  String,\n  StringPrototypeToUpperCase,\n  StringPrototypeTrim\n} = require('../ours/primordials')\n\nconst {\n  hideStackFrames,\n  codes: { ERR_SOCKET_BAD_PORT, ERR_INVALID_ARG_TYPE, ERR_INVALID_ARG_VALUE, ERR_OUT_OF_RANGE, ERR_UNKNOWN_SIGNAL }\n} = require('../ours/errors')\n\nconst { normalizeEncoding } = require('../ours/util')\n\nconst { isAsyncFunction, isArrayBufferView } = require('../ours/util').types\n\nconst signals = {}\n/**\n * @param {*} value\n * @returns {boolean}\n */\n\nfunction isInt32(value) {\n  return value === (value | 0)\n}\n/**\n * @param {*} value\n * @returns {boolean}\n */\n\nfunction isUint32(value) {\n  return value === value >>> 0\n}\n\nconst octalReg = /^[0-7]+$/\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string'\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land, but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified, will be returned for invalid values\n * @returns {number}\n */\n\nfunction parseFileMode(value, name, def) {\n  if (typeof value === 'undefined') {\n    value = def\n  }\n\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg, value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc)\n    }\n\n    value = NumberParseInt(value, 8)\n  }\n\n  validateUint32(value, name)\n  return value\n}\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\n\nconst validateInteger = hideStackFrames((value, name, min = NumberMIN_SAFE_INTEGER, max = NumberMAX_SAFE_INTEGER) => {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (!NumberIsInteger(value)) throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  if (value < min || value > max) throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n})\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\n\nconst validateInt32 = hideStackFrames((value, name, min = -2147483648, max = 2147483647) => {\n  // The defaults for min and max correspond to the limits of 32-bit integers.\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {number|boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\n\nconst validateUint32 = hideStackFrames((value, name, positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n\n  const min = positive ? 1 : 0 // 2 ** 32 === 4294967296\n\n  const max = 4_294_967_295\n\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\n\nfunction validateString(value, name) {\n  if (typeof value !== 'string') throw new ERR_INVALID_ARG_TYPE(name, 'string', value)\n}\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\n\nfunction validateNumber(value, name, min = undefined, max) {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n\n  if (\n    (min != null && value < min) ||\n    (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))\n  ) {\n    throw new ERR_OUT_OF_RANGE(\n      name,\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`,\n      value\n    )\n  }\n}\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\n\nconst validateOneOf = hideStackFrames((value, name, oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf, value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf, (v) => (typeof v === 'string' ? `'${v}'` : String(v))),\n      ', '\n    )\n    const reason = 'must be one of: ' + allowed\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\n\nfunction validateBoolean(value, name) {\n  if (typeof value !== 'boolean') throw new ERR_INVALID_ARG_TYPE(name, 'boolean', value)\n}\n\nfunction getOwnPropertyValueOrDefault(options, key, defaultValue) {\n  return options == null || !ObjectPrototypeHasOwnProperty(options, key) ? defaultValue : options[key]\n}\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean,\n *   allowFunction?: boolean,\n *   nullable?: boolean\n * }} [options]\n */\n\n/** @type {validateObject} */\n\nconst validateObject = hideStackFrames((value, name, options = null) => {\n  const allowArray = getOwnPropertyValueOrDefault(options, 'allowArray', false)\n  const allowFunction = getOwnPropertyValueOrDefault(options, 'allowFunction', false)\n  const nullable = getOwnPropertyValueOrDefault(options, 'nullable', false)\n\n  if (\n    (!nullable && value === null) ||\n    (!allowArray && ArrayIsArray(value)) ||\n    (typeof value !== 'object' && (!allowFunction || typeof value !== 'function'))\n  ) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Object', value)\n  }\n})\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\n\nconst validateArray = hideStackFrames((value, name, minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Array', value)\n  }\n\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n}) // eslint-disable-next-line jsdoc/require-returns-check\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\n\nfunction validateSignalName(signal, name = 'signal') {\n  validateString(signal, name)\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal + ' (signals must use all capital letters)')\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal)\n  }\n}\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\n\nconst validateBuffer = hideStackFrames((buffer, name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name, ['Buffer', 'TypedArray', 'DataView'], buffer)\n  }\n})\n/**\n * @param {string} data\n * @param {string} encoding\n */\n\nfunction validateEncoding(data, encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding)\n  const length = data.length\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding', encoding, `is invalid for data of length ${length}`)\n  }\n}\n/**\n * Check that the port number is not NaN when coerced to a number,\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\n\nfunction validatePort(port, name = 'Port', allowZero = true) {\n  if (\n    (typeof port !== 'number' && typeof port !== 'string') ||\n    (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n    +port !== +port >>> 0 ||\n    port > 0xffff ||\n    (port === 0 && !allowZero)\n  ) {\n    throw new ERR_SOCKET_BAD_PORT(name, port, allowZero)\n  }\n\n  return port | 0\n}\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\n\nconst validateAbortSignal = hideStackFrames((signal, name) => {\n  if (signal !== undefined && (signal === null || typeof signal !== 'object' || !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n})\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\n\nconst validateFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function') throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\n\nconst validatePlainFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value)) throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\n\nconst validateUndefined = hideStackFrames((value, name) => {\n  if (value !== undefined) throw new ERR_INVALID_ARG_TYPE(name, 'undefined', value)\n})\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\n\nfunction validateUnion(value, name, union) {\n  if (!ArrayPrototypeIncludes(union, value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, `('${ArrayPrototypeJoin(union, '|')}')`, value)\n  }\n}\n\nmodule.exports = {\n  isInt32,\n  isUint32,\n  parseFileMode,\n  validateArray,\n  validateBoolean,\n  validateBuffer,\n  validateEncoding,\n  validateFunction,\n  validateInt32,\n  validateInteger,\n  validateNumber,\n  validateObject,\n  validateOneOf,\n  validatePlainFunction,\n  validatePort,\n  validateSignalName,\n  validateString,\n  validateUint32,\n  validateUndefined,\n  validateUnion,\n  validateAbortSignal\n}\n","'use strict'\n\nconst { Symbol, SymbolAsyncIterator, SymbolIterator } = require('../../ours/primordials')\n\nconst kDestroyed = Symbol('kDestroyed')\nconst kIsErrored = Symbol('kIsErrored')\nconst kIsReadable = Symbol('kIsReadable')\nconst kIsDisturbed = Symbol('kIsDisturbed')\n\nfunction isReadableNodeStream(obj, strict = false) {\n  var _obj$_readableState\n\n  return !!(\n    (\n      obj &&\n      typeof obj.pipe === 'function' &&\n      typeof obj.on === 'function' &&\n      (!strict || (typeof obj.pause === 'function' && typeof obj.resume === 'function')) &&\n      (!obj._writableState ||\n        ((_obj$_readableState = obj._readableState) === null || _obj$_readableState === undefined\n          ? undefined\n          : _obj$_readableState.readable) !== false) && // Duplex\n      (!obj._writableState || obj._readableState)\n    ) // Writable has .pipe.\n  )\n}\n\nfunction isWritableNodeStream(obj) {\n  var _obj$_writableState\n\n  return !!(\n    (\n      obj &&\n      typeof obj.write === 'function' &&\n      typeof obj.on === 'function' &&\n      (!obj._readableState ||\n        ((_obj$_writableState = obj._writableState) === null || _obj$_writableState === undefined\n          ? undefined\n          : _obj$_writableState.writable) !== false)\n    ) // Duplex\n  )\n}\n\nfunction isDuplexNodeStream(obj) {\n  return !!(\n    obj &&\n    typeof obj.pipe === 'function' &&\n    obj._readableState &&\n    typeof obj.on === 'function' &&\n    typeof obj.write === 'function'\n  )\n}\n\nfunction isNodeStream(obj) {\n  return (\n    obj &&\n    (obj._readableState ||\n      obj._writableState ||\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function'))\n  )\n}\n\nfunction isIterable(obj, isAsync) {\n  if (obj == null) return false\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function'\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function'\n  return typeof obj[SymbolAsyncIterator] === 'function' || typeof obj[SymbolIterator] === 'function'\n}\n\nfunction isDestroyed(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return !!(stream.destroyed || stream[kDestroyed] || (state !== null && state !== undefined && state.destroyed))\n} // Have been end():d.\n\nfunction isWritableEnded(stream) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableEnded === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.ended) !== 'boolean') return null\n  return wState.ended\n} // Have emitted 'finish'.\n\nfunction isWritableFinished(stream, strict) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableFinished === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.finished) !== 'boolean') return null\n  return !!(wState.finished || (strict === false && wState.ended === true && wState.length === 0))\n} // Have been push(null):d.\n\nfunction isReadableEnded(stream) {\n  if (!isReadableNodeStream(stream)) return null\n  if (stream.readableEnded === true) return true\n  const rState = stream._readableState\n  if (!rState || rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.ended) !== 'boolean') return null\n  return rState.ended\n} // Have emitted 'end'.\n\nfunction isReadableFinished(stream, strict) {\n  if (!isReadableNodeStream(stream)) return null\n  const rState = stream._readableState\n  if (rState !== null && rState !== undefined && rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.endEmitted) !== 'boolean') return null\n  return !!(rState.endEmitted || (strict === false && rState.ended === true && rState.length === 0))\n}\n\nfunction isReadable(stream) {\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable]\n  if (typeof (stream === null || stream === undefined ? undefined : stream.readable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isReadableNodeStream(stream) && stream.readable && !isReadableFinished(stream)\n}\n\nfunction isWritable(stream) {\n  if (typeof (stream === null || stream === undefined ? undefined : stream.writable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isWritableNodeStream(stream) && stream.writable && !isWritableEnded(stream)\n}\n\nfunction isFinished(stream, opts) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n\n  if (isDestroyed(stream)) {\n    return true\n  }\n\n  if ((opts === null || opts === undefined ? undefined : opts.readable) !== false && isReadable(stream)) {\n    return false\n  }\n\n  if ((opts === null || opts === undefined ? undefined : opts.writable) !== false && isWritable(stream)) {\n    return false\n  }\n\n  return true\n}\n\nfunction isWritableErrored(stream) {\n  var _stream$_writableStat, _stream$_writableStat2\n\n  if (!isNodeStream(stream)) {\n    return null\n  }\n\n  if (stream.writableErrored) {\n    return stream.writableErrored\n  }\n\n  return (_stream$_writableStat =\n    (_stream$_writableStat2 = stream._writableState) === null || _stream$_writableStat2 === undefined\n      ? undefined\n      : _stream$_writableStat2.errored) !== null && _stream$_writableStat !== undefined\n    ? _stream$_writableStat\n    : null\n}\n\nfunction isReadableErrored(stream) {\n  var _stream$_readableStat, _stream$_readableStat2\n\n  if (!isNodeStream(stream)) {\n    return null\n  }\n\n  if (stream.readableErrored) {\n    return stream.readableErrored\n  }\n\n  return (_stream$_readableStat =\n    (_stream$_readableStat2 = stream._readableState) === null || _stream$_readableStat2 === undefined\n      ? undefined\n      : _stream$_readableStat2.errored) !== null && _stream$_readableStat !== undefined\n    ? _stream$_readableStat\n    : null\n}\n\nfunction isClosed(stream) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n\n  if (typeof stream.closed === 'boolean') {\n    return stream.closed\n  }\n\n  const wState = stream._writableState\n  const rState = stream._readableState\n\n  if (\n    typeof (wState === null || wState === undefined ? undefined : wState.closed) === 'boolean' ||\n    typeof (rState === null || rState === undefined ? undefined : rState.closed) === 'boolean'\n  ) {\n    return (\n      (wState === null || wState === undefined ? undefined : wState.closed) ||\n      (rState === null || rState === undefined ? undefined : rState.closed)\n    )\n  }\n\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\n    return stream._closed\n  }\n\n  return null\n}\n\nfunction isOutgoingMessage(stream) {\n  return (\n    typeof stream._closed === 'boolean' &&\n    typeof stream._defaultKeepAlive === 'boolean' &&\n    typeof stream._removedConnection === 'boolean' &&\n    typeof stream._removedContLen === 'boolean'\n  )\n}\n\nfunction isServerResponse(stream) {\n  return typeof stream._sent100 === 'boolean' && isOutgoingMessage(stream)\n}\n\nfunction isServerRequest(stream) {\n  var _stream$req\n\n  return (\n    typeof stream._consuming === 'boolean' &&\n    typeof stream._dumped === 'boolean' &&\n    ((_stream$req = stream.req) === null || _stream$req === undefined ? undefined : _stream$req.upgradeOrConnect) ===\n      undefined\n  )\n}\n\nfunction willEmitClose(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return (\n    (!state && isServerResponse(stream)) || !!(state && state.autoDestroy && state.emitClose && state.closed === false)\n  )\n}\n\nfunction isDisturbed(stream) {\n  var _stream$kIsDisturbed\n\n  return !!(\n    stream &&\n    ((_stream$kIsDisturbed = stream[kIsDisturbed]) !== null && _stream$kIsDisturbed !== undefined\n      ? _stream$kIsDisturbed\n      : stream.readableDidRead || stream.readableAborted)\n  )\n}\n\nfunction isErrored(stream) {\n  var _ref,\n    _ref2,\n    _ref3,\n    _ref4,\n    _ref5,\n    _stream$kIsErrored,\n    _stream$_readableStat3,\n    _stream$_writableStat3,\n    _stream$_readableStat4,\n    _stream$_writableStat4\n\n  return !!(\n    stream &&\n    ((_ref =\n      (_ref2 =\n        (_ref3 =\n          (_ref4 =\n            (_ref5 =\n              (_stream$kIsErrored = stream[kIsErrored]) !== null && _stream$kIsErrored !== undefined\n                ? _stream$kIsErrored\n                : stream.readableErrored) !== null && _ref5 !== undefined\n              ? _ref5\n              : stream.writableErrored) !== null && _ref4 !== undefined\n            ? _ref4\n            : (_stream$_readableStat3 = stream._readableState) === null || _stream$_readableStat3 === undefined\n            ? undefined\n            : _stream$_readableStat3.errorEmitted) !== null && _ref3 !== undefined\n          ? _ref3\n          : (_stream$_writableStat3 = stream._writableState) === null || _stream$_writableStat3 === undefined\n          ? undefined\n          : _stream$_writableStat3.errorEmitted) !== null && _ref2 !== undefined\n        ? _ref2\n        : (_stream$_readableStat4 = stream._readableState) === null || _stream$_readableStat4 === undefined\n        ? undefined\n        : _stream$_readableStat4.errored) !== null && _ref !== undefined\n      ? _ref\n      : (_stream$_writableStat4 = stream._writableState) === null || _stream$_writableStat4 === undefined\n      ? undefined\n      : _stream$_writableStat4.errored)\n  )\n}\n\nmodule.exports = {\n  kDestroyed,\n  isDisturbed,\n  kIsDisturbed,\n  isErrored,\n  kIsErrored,\n  isReadable,\n  kIsReadable,\n  isClosed,\n  isDestroyed,\n  isDuplexNodeStream,\n  isFinished,\n  isIterable,\n  isReadableNodeStream,\n  isReadableEnded,\n  isReadableFinished,\n  isReadableErrored,\n  isNodeStream,\n  isWritable,\n  isWritableNodeStream,\n  isWritableEnded,\n  isWritableFinished,\n  isWritableErrored,\n  isServerRequest,\n  isServerResponse,\n  willEmitClose\n}\n","/* replacement start */\nconst process = require('process')\n/* replacement end */\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\n\nconst { AbortError, codes } = require('../../ours/errors')\n\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_PREMATURE_CLOSE } = codes\n\nconst { kEmptyObject, once } = require('../../ours/util')\n\nconst { validateAbortSignal, validateFunction, validateObject } = require('../validators')\n\nconst { Promise } = require('../../ours/primordials')\n\nconst {\n  isClosed,\n  isReadable,\n  isReadableNodeStream,\n  isReadableFinished,\n  isReadableErrored,\n  isWritable,\n  isWritableNodeStream,\n  isWritableFinished,\n  isWritableErrored,\n  isNodeStream,\n  willEmitClose: _willEmitClose\n} = require('./utils')\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function'\n}\n\nconst nop = () => {}\n\nfunction eos(stream, options, callback) {\n  var _options$readable, _options$writable\n\n  if (arguments.length === 2) {\n    callback = options\n    options = kEmptyObject\n  } else if (options == null) {\n    options = kEmptyObject\n  } else {\n    validateObject(options, 'options')\n  }\n\n  validateFunction(callback, 'callback')\n  validateAbortSignal(options.signal, 'options.signal')\n  callback = once(callback)\n  const readable =\n    (_options$readable = options.readable) !== null && _options$readable !== undefined\n      ? _options$readable\n      : isReadableNodeStream(stream)\n  const writable =\n    (_options$writable = options.writable) !== null && _options$writable !== undefined\n      ? _options$writable\n      : isWritableNodeStream(stream)\n\n  if (!isNodeStream(stream)) {\n    // TODO: Webstreams.\n    throw new ERR_INVALID_ARG_TYPE('stream', 'Stream', stream)\n  }\n\n  const wState = stream._writableState\n  const rState = stream._readableState\n\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish()\n    }\n  } // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n\n  let willEmitClose =\n    _willEmitClose(stream) && isReadableNodeStream(stream) === readable && isWritableNodeStream(stream) === writable\n  let writableFinished = isWritableFinished(stream, false)\n\n  const onfinish = () => {\n    writableFinished = true // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n\n    if (willEmitClose && (!stream.readable || readable)) {\n      return\n    }\n\n    if (!readable || readableFinished) {\n      callback.call(stream)\n    }\n  }\n\n  let readableFinished = isReadableFinished(stream, false)\n\n  const onend = () => {\n    readableFinished = true // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n\n    if (willEmitClose && (!stream.writable || writable)) {\n      return\n    }\n\n    if (!writable || writableFinished) {\n      callback.call(stream)\n    }\n  }\n\n  const onerror = (err) => {\n    callback.call(stream, err)\n  }\n\n  let closed = isClosed(stream)\n\n  const onclose = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n\n    if (readable && !readableFinished && isReadableNodeStream(stream, true)) {\n      if (!isReadableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n\n    callback.call(stream)\n  }\n\n  const onrequest = () => {\n    stream.req.on('finish', onfinish)\n  }\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish)\n\n    if (!willEmitClose) {\n      stream.on('abort', onclose)\n    }\n\n    if (stream.req) {\n      onrequest()\n    } else {\n      stream.on('request', onrequest)\n    }\n  } else if (writable && !wState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish)\n    stream.on('close', onlegacyfinish)\n  } // Not all streams will emit 'close' after 'aborted'.\n\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted', onclose)\n  }\n\n  stream.on('end', onend)\n  stream.on('finish', onfinish)\n\n  if (options.error !== false) {\n    stream.on('error', onerror)\n  }\n\n  stream.on('close', onclose)\n\n  if (closed) {\n    process.nextTick(onclose)\n  } else if (\n    (wState !== null && wState !== undefined && wState.errorEmitted) ||\n    (rState !== null && rState !== undefined && rState.errorEmitted)\n  ) {\n    if (!willEmitClose) {\n      process.nextTick(onclose)\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false)\n  ) {\n    process.nextTick(onclose)\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclose)\n  } else if (rState && stream.req && stream.aborted) {\n    process.nextTick(onclose)\n  }\n\n  const cleanup = () => {\n    callback = nop\n    stream.removeListener('aborted', onclose)\n    stream.removeListener('complete', onfinish)\n    stream.removeListener('abort', onclose)\n    stream.removeListener('request', onrequest)\n    if (stream.req) stream.req.removeListener('finish', onfinish)\n    stream.removeListener('end', onlegacyfinish)\n    stream.removeListener('close', onlegacyfinish)\n    stream.removeListener('finish', onfinish)\n    stream.removeListener('end', onend)\n    stream.removeListener('error', onerror)\n    stream.removeListener('close', onclose)\n  }\n\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback\n      cleanup()\n      endCallback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      const originalCallback = callback\n      callback = once((...args) => {\n        options.signal.removeEventListener('abort', abort)\n        originalCallback.apply(stream, args)\n      })\n      options.signal.addEventListener('abort', abort)\n    }\n  }\n\n  return cleanup\n}\n\nfunction finished(stream, opts) {\n  return new Promise((resolve, reject) => {\n    eos(stream, opts, (err) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\nmodule.exports = eos\nmodule.exports.finished = finished\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process')\n/* replacement end */\n\nconst {\n  aggregateTwoErrors,\n  codes: { ERR_MULTIPLE_CALLBACK },\n  AbortError\n} = require('../../ours/errors')\n\nconst { Symbol } = require('../../ours/primordials')\n\nconst { kDestroyed, isDestroyed, isFinished, isServerRequest } = require('./utils')\n\nconst kDestroy = Symbol('kDestroy')\nconst kConstruct = Symbol('kConstruct')\n\nfunction checkError(err, w, r) {\n  if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n\n    if (r && !r.errored) {\n      r.errored = err\n    }\n  }\n} // Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\n\nfunction destroy(err, cb) {\n  const r = this._readableState\n  const w = this._writableState // With duplex streams we use the writable side for state.\n\n  const s = w || r\n\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb()\n    }\n\n    return this\n  } // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  checkError(err, w, r)\n\n  if (w) {\n    w.destroyed = true\n  }\n\n  if (r) {\n    r.destroyed = true\n  } // If still constructing then defer calling _destroy.\n\n  if (!s.constructed) {\n    this.once(kDestroy, function (er) {\n      _destroy(this, aggregateTwoErrors(er, err), cb)\n    })\n  } else {\n    _destroy(this, err, cb)\n  }\n\n  return this\n}\n\nfunction _destroy(self, err, cb) {\n  let called = false\n\n  function onDestroy(err) {\n    if (called) {\n      return\n    }\n\n    called = true\n    const r = self._readableState\n    const w = self._writableState\n    checkError(err, w, r)\n\n    if (w) {\n      w.closed = true\n    }\n\n    if (r) {\n      r.closed = true\n    }\n\n    if (typeof cb === 'function') {\n      cb(err)\n    }\n\n    if (err) {\n      process.nextTick(emitErrorCloseNT, self, err)\n    } else {\n      process.nextTick(emitCloseNT, self)\n    }\n  }\n\n  try {\n    self._destroy(err || null, onDestroy)\n  } catch (err) {\n    onDestroy(err)\n  }\n}\n\nfunction emitErrorCloseNT(self, err) {\n  emitErrorNT(self, err)\n  emitCloseNT(self)\n}\n\nfunction emitCloseNT(self) {\n  const r = self._readableState\n  const w = self._writableState\n\n  if (w) {\n    w.closeEmitted = true\n  }\n\n  if (r) {\n    r.closeEmitted = true\n  }\n\n  if ((w && w.emitClose) || (r && r.emitClose)) {\n    self.emit('close')\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  const r = self._readableState\n  const w = self._writableState\n\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\n    return\n  }\n\n  if (w) {\n    w.errorEmitted = true\n  }\n\n  if (r) {\n    r.errorEmitted = true\n  }\n\n  self.emit('error', err)\n}\n\nfunction undestroy() {\n  const r = this._readableState\n  const w = this._writableState\n\n  if (r) {\n    r.constructed = true\n    r.closed = false\n    r.closeEmitted = false\n    r.destroyed = false\n    r.errored = null\n    r.errorEmitted = false\n    r.reading = false\n    r.ended = r.readable === false\n    r.endEmitted = r.readable === false\n  }\n\n  if (w) {\n    w.constructed = true\n    w.destroyed = false\n    w.closed = false\n    w.closeEmitted = false\n    w.errored = null\n    w.errorEmitted = false\n    w.finalCalled = false\n    w.prefinished = false\n    w.ended = w.writable === false\n    w.ending = w.writable === false\n    w.finished = w.writable === false\n  }\n}\n\nfunction errorOrDestroy(stream, err, sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  const r = stream._readableState\n  const w = stream._writableState\n\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    return this\n  }\n\n  if ((r && r.autoDestroy) || (w && w.autoDestroy)) stream.destroy(err)\n  else if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n\n    if (r && !r.errored) {\n      r.errored = err\n    }\n\n    if (sync) {\n      process.nextTick(emitErrorNT, stream, err)\n    } else {\n      emitErrorNT(stream, err)\n    }\n  }\n}\n\nfunction construct(stream, cb) {\n  if (typeof stream._construct !== 'function') {\n    return\n  }\n\n  const r = stream._readableState\n  const w = stream._writableState\n\n  if (r) {\n    r.constructed = false\n  }\n\n  if (w) {\n    w.constructed = false\n  }\n\n  stream.once(kConstruct, cb)\n\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return\n  }\n\n  process.nextTick(constructNT, stream)\n}\n\nfunction constructNT(stream) {\n  let called = false\n\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : new ERR_MULTIPLE_CALLBACK())\n      return\n    }\n\n    called = true\n    const r = stream._readableState\n    const w = stream._writableState\n    const s = w || r\n\n    if (r) {\n      r.constructed = true\n    }\n\n    if (w) {\n      w.constructed = true\n    }\n\n    if (s.destroyed) {\n      stream.emit(kDestroy, err)\n    } else if (err) {\n      errorOrDestroy(stream, err, true)\n    } else {\n      process.nextTick(emitConstructNT, stream)\n    }\n  }\n\n  try {\n    stream._construct(onConstruct)\n  } catch (err) {\n    onConstruct(err)\n  }\n}\n\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct)\n}\n\nfunction isRequest(stream) {\n  return stream && stream.setHeader && typeof stream.abort === 'function'\n}\n\nfunction emitCloseLegacy(stream) {\n  stream.emit('close')\n}\n\nfunction emitErrorCloseLegacy(stream, err) {\n  stream.emit('error', err)\n  process.nextTick(emitCloseLegacy, stream)\n} // Normalize destroy for legacy.\n\nfunction destroyer(stream, err) {\n  if (!stream || isDestroyed(stream)) {\n    return\n  }\n\n  if (!err && !isFinished(stream)) {\n    err = new AbortError()\n  } // TODO: Remove isRequest branches.\n\n  if (isServerRequest(stream)) {\n    stream.socket = null\n    stream.destroy(err)\n  } else if (isRequest(stream)) {\n    stream.abort()\n  } else if (isRequest(stream.req)) {\n    stream.req.abort()\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err)\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close()\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy, stream, err)\n  } else {\n    process.nextTick(emitCloseLegacy, stream)\n  }\n\n  if (!stream.destroyed) {\n    stream[kDestroyed] = true\n  }\n}\n\nmodule.exports = {\n  construct,\n  destroyer,\n  destroy,\n  undestroy,\n  errorOrDestroy\n}\n","'use strict'\n\nconst { ArrayIsArray, ObjectSetPrototypeOf } = require('../../ours/primordials')\n\nconst { EventEmitter: EE } = require('events')\n\nfunction Stream(opts) {\n  EE.call(this, opts)\n}\n\nObjectSetPrototypeOf(Stream.prototype, EE.prototype)\nObjectSetPrototypeOf(Stream, EE)\n\nStream.prototype.pipe = function (dest, options) {\n  const source = this\n\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause()\n    }\n  }\n\n  source.on('data', ondata)\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume()\n    }\n  }\n\n  dest.on('drain', ondrain) // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend)\n    source.on('close', onclose)\n  }\n\n  let didOnEnd = false\n\n  function onend() {\n    if (didOnEnd) return\n    didOnEnd = true\n    dest.end()\n  }\n\n  function onclose() {\n    if (didOnEnd) return\n    didOnEnd = true\n    if (typeof dest.destroy === 'function') dest.destroy()\n  } // Don't leave dangling pipes when there are errors.\n\n  function onerror(er) {\n    cleanup()\n\n    if (EE.listenerCount(this, 'error') === 0) {\n      this.emit('error', er)\n    }\n  }\n\n  prependListener(source, 'error', onerror)\n  prependListener(dest, 'error', onerror) // Remove all the event listeners that were added.\n\n  function cleanup() {\n    source.removeListener('data', ondata)\n    dest.removeListener('drain', ondrain)\n    source.removeListener('end', onend)\n    source.removeListener('close', onclose)\n    source.removeListener('error', onerror)\n    dest.removeListener('error', onerror)\n    source.removeListener('end', cleanup)\n    source.removeListener('close', cleanup)\n    dest.removeListener('close', cleanup)\n  }\n\n  source.on('end', cleanup)\n  source.on('close', cleanup)\n  dest.on('close', cleanup)\n  dest.emit('pipe', source) // Allow for unix-like usage: A.pipe(B).pipe(C)\n\n  return dest\n}\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn) // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn)\n  else if (ArrayIsArray(emitter._events[event])) emitter._events[event].unshift(fn)\n  else emitter._events[event] = [fn, emitter._events[event]]\n}\n\nmodule.exports = {\n  Stream,\n  prependListener\n}\n","'use strict'\n\nconst { AbortError, codes } = require('../../ours/errors')\n\nconst eos = require('./end-of-stream')\n\nconst { ERR_INVALID_ARG_TYPE } = codes // This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\n\nconst validateAbortSignal = (signal, name) => {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n}\n\nfunction isNodeStream(obj) {\n  return !!(obj && typeof obj.pipe === 'function')\n}\n\nmodule.exports.addAbortSignal = function addAbortSignal(signal, stream) {\n  validateAbortSignal(signal, 'signal')\n\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', 'stream.Stream', stream)\n  }\n\n  return module.exports.addAbortSignalNoValidate(signal, stream)\n}\n\nmodule.exports.addAbortSignalNoValidate = function (signal, stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream\n  }\n\n  const onAbort = () => {\n    stream.destroy(\n      new AbortError(undefined, {\n        cause: signal.reason\n      })\n    )\n  }\n\n  if (signal.aborted) {\n    onAbort()\n  } else {\n    signal.addEventListener('abort', onAbort)\n    eos(stream, () => signal.removeEventListener('abort', onAbort))\n  }\n\n  return stream\n}\n","'use strict'\n\nconst { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array } = require('../../ours/primordials')\n\nconst { Buffer } = require('buffer')\n\nconst { inspect } = require('../../ours/util')\n\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null\n    this.tail = null\n    this.length = 0\n  }\n\n  push(v) {\n    const entry = {\n      data: v,\n      next: null\n    }\n    if (this.length > 0) this.tail.next = entry\n    else this.head = entry\n    this.tail = entry\n    ++this.length\n  }\n\n  unshift(v) {\n    const entry = {\n      data: v,\n      next: this.head\n    }\n    if (this.length === 0) this.tail = entry\n    this.head = entry\n    ++this.length\n  }\n\n  shift() {\n    if (this.length === 0) return\n    const ret = this.head.data\n    if (this.length === 1) this.head = this.tail = null\n    else this.head = this.head.next\n    --this.length\n    return ret\n  }\n\n  clear() {\n    this.head = this.tail = null\n    this.length = 0\n  }\n\n  join(s) {\n    if (this.length === 0) return ''\n    let p = this.head\n    let ret = '' + p.data\n\n    while ((p = p.next) !== null) ret += s + p.data\n\n    return ret\n  }\n\n  concat(n) {\n    if (this.length === 0) return Buffer.alloc(0)\n    const ret = Buffer.allocUnsafe(n >>> 0)\n    let p = this.head\n    let i = 0\n\n    while (p) {\n      TypedArrayPrototypeSet(ret, p.data, i)\n      i += p.data.length\n      p = p.next\n    }\n\n    return ret\n  } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  consume(n, hasStrings) {\n    const data = this.head.data\n\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0, n)\n      this.head.data = data.slice(n)\n      return slice\n    }\n\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift()\n    } // Result spans more than one buffer.\n\n    return hasStrings ? this._getString(n) : this._getBuffer(n)\n  }\n\n  first() {\n    return this.head.data\n  }\n\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data\n    }\n  } // Consumes a specified amount of characters from the buffered data.\n\n  _getString(n) {\n    let ret = ''\n    let p = this.head\n    let c = 0\n\n    do {\n      const str = p.data\n\n      if (n > str.length) {\n        ret += str\n        n -= str.length\n      } else {\n        if (n === str.length) {\n          ret += str\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          ret += StringPrototypeSlice(str, 0, n)\n          this.head = p\n          p.data = StringPrototypeSlice(str, n)\n        }\n\n        break\n      }\n\n      ++c\n    } while ((p = p.next) !== null)\n\n    this.length -= c\n    return ret\n  } // Consumes a specified amount of bytes from the buffered data.\n\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n)\n    const retLen = n\n    let p = this.head\n    let c = 0\n\n    do {\n      const buf = p.data\n\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret, buf, retLen - n)\n        n -= buf.length\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret, buf, retLen - n)\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          TypedArrayPrototypeSet(ret, new Uint8Array(buf.buffer, buf.byteOffset, n), retLen - n)\n          this.head = p\n          p.data = buf.slice(n)\n        }\n\n        break\n      }\n\n      ++c\n    } while ((p = p.next) !== null)\n\n    this.length -= c\n    return ret\n  } // Make sure the linked list only shows the minimal necessary information.\n\n  [Symbol.for('nodejs.util.inspect.custom')](_, options) {\n    return inspect(this, {\n      ...options,\n      // Only inspect one level.\n      depth: 0,\n      // It should not recurse.\n      customInspect: false\n    })\n  }\n}\n","'use strict'\n\nconst { MathFloor, NumberIsInteger } = require('../../ours/primordials')\n\nconst { ERR_INVALID_ARG_VALUE } = require('../../ours/errors').codes\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey)\n\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark'\n      throw new ERR_INVALID_ARG_VALUE(name, hwm)\n    }\n\n    return MathFloor(hwm)\n  } // Default value\n\n  return getDefaultHighWaterMark(state.objectMode)\n}\n\nmodule.exports = {\n  getHighWaterMark,\n  getDefaultHighWaterMark\n}\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process')\n/* replacement end */\n\nconst { PromisePrototypeThen, SymbolAsyncIterator, SymbolIterator } = require('../../ours/primordials')\n\nconst { Buffer } = require('buffer')\n\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_NULL_VALUES } = require('../../ours/errors').codes\n\nfunction from(Readable, iterable, opts) {\n  let iterator\n\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true,\n      ...opts,\n\n      read() {\n        this.push(iterable)\n        this.push(null)\n      }\n    })\n  }\n\n  let isAsync\n\n  if (iterable && iterable[SymbolAsyncIterator]) {\n    isAsync = true\n    iterator = iterable[SymbolAsyncIterator]()\n  } else if (iterable && iterable[SymbolIterator]) {\n    isAsync = false\n    iterator = iterable[SymbolIterator]()\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable)\n  }\n\n  const readable = new Readable({\n    objectMode: true,\n    highWaterMark: 1,\n    // TODO(ronag): What options should be allowed?\n    ...opts\n  }) // Flag to protect against _read\n  // being called before last iteration completion.\n\n  let reading = false\n\n  readable._read = function () {\n    if (!reading) {\n      reading = true\n      next()\n    }\n  }\n\n  readable._destroy = function (error, cb) {\n    PromisePrototypeThen(\n      close(error),\n      () => process.nextTick(cb, error), // nextTick is here in case cb throws\n      (e) => process.nextTick(cb, e || error)\n    )\n  }\n\n  async function close(error) {\n    const hadError = error !== undefined && error !== null\n    const hasThrow = typeof iterator.throw === 'function'\n\n    if (hadError && hasThrow) {\n      const { value, done } = await iterator.throw(error)\n      await value\n\n      if (done) {\n        return\n      }\n    }\n\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return()\n      await value\n    }\n  }\n\n  async function next() {\n    for (;;) {\n      try {\n        const { value, done } = isAsync ? await iterator.next() : iterator.next()\n\n        if (done) {\n          readable.push(null)\n        } else {\n          const res = value && typeof value.then === 'function' ? await value : value\n\n          if (res === null) {\n            reading = false\n            throw new ERR_STREAM_NULL_VALUES()\n          } else if (readable.push(res)) {\n            continue\n          } else {\n            reading = false\n          }\n        }\n      } catch (err) {\n        readable.destroy(err)\n      }\n\n      break\n    }\n  }\n\n  return readable\n}\n\nmodule.exports = from\n","/* replacement start */\nconst process = require('process')\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\n\nconst {\n  ArrayPrototypeIndexOf,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberParseInt,\n  ObjectDefineProperties,\n  ObjectKeys,\n  ObjectSetPrototypeOf,\n  Promise,\n  SafeSet,\n  SymbolAsyncIterator,\n  Symbol\n} = require('../../ours/primordials')\n\nmodule.exports = Readable\nReadable.ReadableState = ReadableState\n\nconst { EventEmitter: EE } = require('events')\n\nconst { Stream, prependListener } = require('./legacy')\n\nconst { Buffer } = require('buffer')\n\nconst { addAbortSignal } = require('./add-abort-signal')\n\nconst eos = require('./end-of-stream')\n\nlet debug = require('../../ours/util').debuglog('stream', (fn) => {\n  debug = fn\n})\n\nconst BufferList = require('./buffer_list')\n\nconst destroyImpl = require('./destroy')\n\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\n\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_OUT_OF_RANGE,\n    ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\n  }\n} = require('../../ours/errors')\n\nconst { validateObject } = require('../validators')\n\nconst kPaused = Symbol('kPaused')\n\nconst { StringDecoder } = require('string_decoder')\n\nconst from = require('./from')\n\nObjectSetPrototypeOf(Readable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Readable, Stream)\n\nconst nop = () => {}\n\nconst { errorOrDestroy } = destroyImpl\n\nfunction ReadableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex') // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.readableObjectMode) // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false) // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift().\n\n  this.buffer = new BufferList()\n  this.length = 0\n  this.pipes = []\n  this.flowing = null\n  this.ended = false\n  this.endEmitted = false\n  this.reading = false // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n\n  this.constructed = true // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true // Whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false\n  this.emittedReadable = false\n  this.readableListening = false\n  this.resumeScheduled = false\n  this[kPaused] = null // True if the error was already emitted and should not be thrown again.\n\n  this.errorEmitted = false // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = !options || options.emitClose !== false // Should .destroy() be called after 'end' (and potentially 'finish').\n\n  this.autoDestroy = !options || options.autoDestroy !== false // Has it been destroyed.\n\n  this.destroyed = false // Indicates whether the stream has errored. When true no further\n  // _read calls, 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n\n  this.errored = null // Indicates whether the stream has finished destroying.\n\n  this.closed = false // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n\n  this.closeEmitted = false // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8' // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n\n  this.awaitDrainWriters = null\n  this.multiAwaitDrain = false // If true, a maybeReadMore has been scheduled.\n\n  this.readingMore = false\n  this.dataEmitted = false\n  this.decoder = null\n  this.encoding = null\n\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding)\n    this.encoding = options.encoding\n  }\n}\n\nfunction Readable(options) {\n  if (!(this instanceof Readable)) return new Readable(options) // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5.\n\n  const isDuplex = this instanceof require('./duplex')\n\n  this._readableState = new ReadableState(options, this, isDuplex)\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal && !isDuplex) addAbortSignal(options.signal, this)\n  }\n\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    if (this._readableState.needReadable) {\n      maybeReadMore(this, this._readableState)\n    }\n  })\n}\n\nReadable.prototype.destroy = destroyImpl.destroy\nReadable.prototype._undestroy = destroyImpl.undestroy\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\n\nReadable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n} // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\nReadable.prototype.push = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, false)\n} // Unshift should *always* be something directly out of read().\n\nReadable.prototype.unshift = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, true)\n}\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront) {\n  debug('readableAddChunk', chunk)\n  const state = stream._readableState\n  let err\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding\n\n      if (state.encoding !== encoding) {\n        if (addToFront && state.encoding) {\n          // When unshifting, if state.encoding is set, we have to save\n          // the string in the BufferList with the state encoding.\n          chunk = Buffer.from(chunk, encoding).toString(state.encoding)\n        } else {\n          chunk = Buffer.from(chunk, encoding)\n          encoding = ''\n        }\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = ''\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = ''\n    } else if (chunk != null) {\n      err = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n\n  if (err) {\n    errorOrDestroy(stream, err)\n  } else if (chunk === null) {\n    state.reading = false\n    onEofChunk(stream, state)\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\n    if (addToFront) {\n      if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT())\n      else if (state.destroyed || state.errored) return false\n      else addChunk(stream, state, chunk, true)\n    } else if (state.ended) {\n      errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF())\n    } else if (state.destroyed || state.errored) {\n      return false\n    } else {\n      state.reading = false\n\n      if (state.decoder && !encoding) {\n        chunk = state.decoder.write(chunk)\n        if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false)\n        else maybeReadMore(stream, state)\n      } else {\n        addChunk(stream, state, chunk, false)\n      }\n    }\n  } else if (!addToFront) {\n    state.reading = false\n    maybeReadMore(stream, state)\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0)\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync && stream.listenerCount('data') > 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n\n    state.dataEmitted = true\n    stream.emit('data', chunk)\n  } else {\n    // Update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length\n    if (addToFront) state.buffer.unshift(chunk)\n    else state.buffer.push(chunk)\n    if (state.needReadable) emitReadable(stream)\n  }\n\n  maybeReadMore(stream, state)\n}\n\nReadable.prototype.isPaused = function () {\n  const state = this._readableState\n  return state[kPaused] === true || state.flowing === false\n} // Backwards compatibility.\n\nReadable.prototype.setEncoding = function (enc) {\n  const decoder = new StringDecoder(enc)\n  this._readableState.decoder = decoder // If setEncoding(null), decoder.encoding equals utf8.\n\n  this._readableState.encoding = this._readableState.decoder.encoding\n  const buffer = this._readableState.buffer // Iterate over current buffer to convert already stored Buffers:\n\n  let content = ''\n\n  for (const data of buffer) {\n    content += decoder.write(data)\n  }\n\n  buffer.clear()\n  if (content !== '') buffer.push(content)\n  this._readableState.length = content.length\n  return this\n} // Don't raise the hwm > 1GB.\n\nconst MAX_HWM = 0x40000000\n\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size', '<= 1GiB', n)\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--\n    n |= n >>> 1\n    n |= n >>> 2\n    n |= n >>> 4\n    n |= n >>> 8\n    n |= n >>> 16\n    n++\n  }\n\n  return n\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || (state.length === 0 && state.ended)) return 0\n  if (state.objectMode) return 1\n\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if (state.flowing && state.length) return state.buffer.first().length\n    return state.length\n  }\n\n  if (n <= state.length) return n\n  return state.ended ? state.length : 0\n} // You can override either this method, or the async _read(n) below.\n\nReadable.prototype.read = function (n) {\n  debug('read', n) // Same as parseInt(undefined, 10), however V8 7.3 performance regressed\n  // in this scenario, so we are doing it manually.\n\n  if (n === undefined) {\n    n = NaN\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n, 10)\n  }\n\n  const state = this._readableState\n  const nOrig = n // If we're asking for more than the current hwm, then raise the hwm.\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n)\n  if (n !== 0) state.emittedReadable = false // If we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (\n    n === 0 &&\n    state.needReadable &&\n    ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)\n  ) {\n    debug('read: emitReadable', state.length, state.ended)\n    if (state.length === 0 && state.ended) endReadable(this)\n    else emitReadable(this)\n    return null\n  }\n\n  n = howMuchToRead(n, state) // If we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this)\n    return null\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n  let doRead = state.needReadable\n  debug('need readable', doRead) // If we currently have less than the highWaterMark, then also read some.\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true\n    debug('length less than watermark', doRead)\n  } // However, if we've ended, then there's no point, if we're already\n  // reading, then it's unnecessary, if we're constructing we have to wait,\n  // and if we're destroyed or errored, then it's not allowed,\n\n  if (state.ended || state.reading || state.destroyed || state.errored || !state.constructed) {\n    doRead = false\n    debug('reading, ended or constructing', doRead)\n  } else if (doRead) {\n    debug('do read')\n    state.reading = true\n    state.sync = true // If the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true // Call internal read method\n\n    try {\n      this._read(state.highWaterMark)\n    } catch (err) {\n      errorOrDestroy(this, err)\n    }\n\n    state.sync = false // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state)\n  }\n\n  let ret\n  if (n > 0) ret = fromList(n, state)\n  else ret = null\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark\n    n = 0\n  } else {\n    state.length -= n\n\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this)\n  }\n\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\n    state.dataEmitted = true\n    this.emit('data', ret)\n  }\n\n  return ret\n}\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk')\n  if (state.ended) return\n\n  if (state.decoder) {\n    const chunk = state.decoder.end()\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk)\n      state.length += state.objectMode ? 1 : chunk.length\n    }\n  }\n\n  state.ended = true\n\n  if (state.sync) {\n    // If we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream)\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false\n    state.emittedReadable = true // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n\n    emitReadable_(stream)\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\nfunction emitReadable(stream) {\n  const state = stream._readableState\n  debug('emitReadable', state.needReadable, state.emittedReadable)\n  state.needReadable = false\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing)\n    state.emittedReadable = true\n    process.nextTick(emitReadable_, stream)\n  }\n}\n\nfunction emitReadable_(stream) {\n  const state = stream._readableState\n  debug('emitReadable_', state.destroyed, state.length, state.ended)\n\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n    stream.emit('readable')\n    state.emittedReadable = false\n  } // The stream needs another readable event if:\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark\n  flow(stream)\n} // At this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore && state.constructed) {\n    state.readingMore = true\n    process.nextTick(maybeReadMore_, stream, state)\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (\n    !state.reading &&\n    !state.ended &&\n    (state.length < state.highWaterMark || (state.flowing && state.length === 0))\n  ) {\n    const len = state.length\n    debug('maybeReadMore read 0')\n    stream.read(0)\n    if (len === state.length)\n      // Didn't get any data, stop spinning.\n      break\n  }\n\n  state.readingMore = false\n} // Abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\nReadable.prototype._read = function (n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()')\n}\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  const src = this\n  const state = this._readableState\n\n  if (state.pipes.length === 1) {\n    if (!state.multiAwaitDrain) {\n      state.multiAwaitDrain = true\n      state.awaitDrainWriters = new SafeSet(state.awaitDrainWriters ? [state.awaitDrainWriters] : [])\n    }\n  }\n\n  state.pipes.push(dest)\n  debug('pipe count=%d opts=%j', state.pipes.length, pipeOpts)\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr\n  const endFn = doEnd ? onend : unpipe\n  if (state.endEmitted) process.nextTick(endFn)\n  else src.once('end', endFn)\n  dest.on('unpipe', onunpipe)\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe')\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true\n        cleanup()\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend')\n    dest.end()\n  }\n\n  let ondrain\n  let cleanedUp = false\n\n  function cleanup() {\n    debug('cleanup') // Cleanup event handlers once the pipe is broken.\n\n    dest.removeListener('close', onclose)\n    dest.removeListener('finish', onfinish)\n\n    if (ondrain) {\n      dest.removeListener('drain', ondrain)\n    }\n\n    dest.removeListener('error', onerror)\n    dest.removeListener('unpipe', onunpipe)\n    src.removeListener('end', onend)\n    src.removeListener('end', unpipe)\n    src.removeListener('data', ondata)\n    cleanedUp = true // If the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (ondrain && state.awaitDrainWriters && (!dest._writableState || dest._writableState.needDrain)) ondrain()\n  }\n\n  function pause() {\n    // If the user unpiped during `dest.write()`, it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response, pause', 0)\n        state.awaitDrainWriters = dest\n        state.multiAwaitDrain = false\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response, pause', state.awaitDrainWriters.size)\n        state.awaitDrainWriters.add(dest)\n      }\n\n      src.pause()\n    }\n\n    if (!ondrain) {\n      // When the dest drains, it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow(), but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src, dest)\n      dest.on('drain', ondrain)\n    }\n  }\n\n  src.on('data', ondata)\n\n  function ondata(chunk) {\n    debug('ondata')\n    const ret = dest.write(chunk)\n    debug('dest.write', ret)\n\n    if (ret === false) {\n      pause()\n    }\n  } // If the dest has an error, then stop piping into it.\n  // However, don't suppress the throwing behavior for this.\n\n  function onerror(er) {\n    debug('onerror', er)\n    unpipe()\n    dest.removeListener('error', onerror)\n\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState\n\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest, er)\n      } else {\n        dest.emit('error', er)\n      }\n    }\n  } // Make sure our error handler is attached before userland ones.\n\n  prependListener(dest, 'error', onerror) // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish)\n    unpipe()\n  }\n\n  dest.once('close', onclose)\n\n  function onfinish() {\n    debug('onfinish')\n    dest.removeListener('close', onclose)\n    unpipe()\n  }\n\n  dest.once('finish', onfinish)\n\n  function unpipe() {\n    debug('unpipe')\n    src.unpipe(dest)\n  } // Tell the dest that it's being piped to.\n\n  dest.emit('pipe', src) // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    if (state.flowing) {\n      pause()\n    }\n  } else if (!state.flowing) {\n    debug('pipe resume')\n    src.resume()\n  }\n\n  return dest\n}\n\nfunction pipeOnDrain(src, dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState // `ondrain` will call directly,\n    // `this` maybe not a reference to dest,\n    // so we use the real dest here.\n\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain', 1)\n      state.awaitDrainWriters = null\n    } else if (state.multiAwaitDrain) {\n      debug('pipeOnDrain', state.awaitDrainWriters.size)\n      state.awaitDrainWriters.delete(dest)\n    }\n\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) && src.listenerCount('data')) {\n      src.resume()\n    }\n  }\n}\n\nReadable.prototype.unpipe = function (dest) {\n  const state = this._readableState\n  const unpipeInfo = {\n    hasUnpiped: false\n  } // If we're not piping anywhere, then do nothing.\n\n  if (state.pipes.length === 0) return this\n\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes\n    state.pipes = []\n    this.pause()\n\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      })\n\n    return this\n  } // Try to find the right one.\n\n  const index = ArrayPrototypeIndexOf(state.pipes, dest)\n  if (index === -1) return this\n  state.pipes.splice(index, 1)\n  if (state.pipes.length === 0) this.pause()\n  dest.emit('unpipe', this, unpipeInfo)\n  return this\n} // Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\n\nReadable.prototype.on = function (ev, fn) {\n  const res = Stream.prototype.on.call(this, ev, fn)\n  const state = this._readableState\n\n  if (ev === 'data') {\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0 // Try start flowing on next tick if stream isn't explicitly paused.\n\n    if (state.flowing !== false) this.resume()\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true\n      state.flowing = false\n      state.emittedReadable = false\n      debug('on readable', state.length, state.reading)\n\n      if (state.length) {\n        emitReadable(this)\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this)\n      }\n    }\n  }\n\n  return res\n}\n\nReadable.prototype.addListener = Readable.prototype.on\n\nReadable.prototype.removeListener = function (ev, fn) {\n  const res = Stream.prototype.removeListener.call(this, ev, fn)\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n\n  return res\n}\n\nReadable.prototype.off = Readable.prototype.removeListener\n\nReadable.prototype.removeAllListeners = function (ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this, arguments)\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n\n  return res\n}\n\nfunction updateReadableListening(self) {\n  const state = self._readableState\n  state.readableListening = self.listenerCount('readable') > 0\n\n  if (state.resumeScheduled && state[kPaused] === false) {\n    // Flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true // Crude way to check if we should resume.\n  } else if (self.listenerCount('data') > 0) {\n    self.resume()\n  } else if (!state.readableListening) {\n    state.flowing = null\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0')\n  self.read(0)\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\nReadable.prototype.resume = function () {\n  const state = this._readableState\n\n  if (!state.flowing) {\n    debug('resume') // We flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume().\n\n    state.flowing = !state.readableListening\n    resume(this, state)\n  }\n\n  state[kPaused] = false\n  return this\n}\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true\n    process.nextTick(resume_, stream, state)\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading)\n\n  if (!state.reading) {\n    stream.read(0)\n  }\n\n  state.resumeScheduled = false\n  stream.emit('resume')\n  flow(stream)\n  if (state.flowing && !state.reading) stream.read(0)\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing)\n\n  if (this._readableState.flowing !== false) {\n    debug('pause')\n    this._readableState.flowing = false\n    this.emit('pause')\n  }\n\n  this._readableState[kPaused] = true\n  return this\n}\n\nfunction flow(stream) {\n  const state = stream._readableState\n  debug('flow', state.flowing)\n\n  while (state.flowing && stream.read() !== null);\n} // Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\nReadable.prototype.wrap = function (stream) {\n  let paused = false // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method, e.g. Readable.wrap(stream).\n\n  stream.on('data', (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true\n      stream.pause()\n    }\n  })\n  stream.on('end', () => {\n    this.push(null)\n  })\n  stream.on('error', (err) => {\n    errorOrDestroy(this, err)\n  })\n  stream.on('close', () => {\n    this.destroy()\n  })\n  stream.on('destroy', () => {\n    this.destroy()\n  })\n\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false\n      stream.resume()\n    }\n  } // Proxy all the other methods. Important when wrapping filters and duplexes.\n\n  const streamKeys = ObjectKeys(stream)\n\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j]\n\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream)\n    }\n  }\n\n  return this\n}\n\nReadable.prototype[SymbolAsyncIterator] = function () {\n  return streamToAsyncIterator(this)\n}\n\nReadable.prototype.iterator = function (options) {\n  if (options !== undefined) {\n    validateObject(options, 'options')\n  }\n\n  return streamToAsyncIterator(this, options)\n}\n\nfunction streamToAsyncIterator(stream, options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream, {\n      objectMode: true\n    })\n  }\n\n  const iter = createAsyncIterator(stream, options)\n  iter.stream = stream\n  return iter\n}\n\nasync function* createAsyncIterator(stream, options) {\n  let callback = nop\n\n  function next(resolve) {\n    if (this === stream) {\n      callback()\n      callback = nop\n    } else {\n      callback = resolve\n    }\n  }\n\n  stream.on('readable', next)\n  let error\n  const cleanup = eos(\n    stream,\n    {\n      writable: false\n    },\n    (err) => {\n      error = err ? aggregateTwoErrors(error, err) : null\n      callback()\n      callback = nop\n    }\n  )\n\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read()\n\n      if (chunk !== null) {\n        yield chunk\n      } else if (error) {\n        throw error\n      } else if (error === null) {\n        return\n      } else {\n        await new Promise(next)\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error, err)\n    throw error\n  } finally {\n    if (\n      (error || (options === null || options === undefined ? undefined : options.destroyOnReturn) !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream, null)\n    } else {\n      stream.off('readable', next)\n      cleanup()\n    }\n  }\n} // Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\n\nObjectDefineProperties(Readable.prototype, {\n  readable: {\n    __proto__: null,\n\n    get() {\n      const r = this._readableState // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted && !r.endEmitted\n    },\n\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val\n      }\n    }\n  },\n  readableDidRead: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.dataEmitted\n    }\n  },\n  readableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      )\n    }\n  },\n  readableHighWaterMark: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.highWaterMark\n    }\n  },\n  readableBuffer: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState && this._readableState.buffer\n    }\n  },\n  readableFlowing: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.flowing\n    },\n    set: function (state) {\n      if (this._readableState) {\n        this._readableState.flowing = state\n      }\n    }\n  },\n  readableLength: {\n    __proto__: null,\n    enumerable: false,\n\n    get() {\n      return this._readableState.length\n    }\n  },\n  readableObjectMode: {\n    __proto__: null,\n    enumerable: false,\n\n    get() {\n      return this._readableState ? this._readableState.objectMode : false\n    }\n  },\n  readableEncoding: {\n    __proto__: null,\n    enumerable: false,\n\n    get() {\n      return this._readableState ? this._readableState.encoding : null\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n\n    get() {\n      return this._readableState ? this._readableState.errored : null\n    }\n  },\n  closed: {\n    __proto__: null,\n\n    get() {\n      return this._readableState ? this._readableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    enumerable: false,\n\n    get() {\n      return this._readableState ? this._readableState.destroyed : false\n    },\n\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return\n      } // Backward compatibility, the user is explicitly\n      // managing destroyed.\n\n      this._readableState.destroyed = value\n    }\n  },\n  readableEnded: {\n    __proto__: null,\n    enumerable: false,\n\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false\n    }\n  }\n})\nObjectDefineProperties(ReadableState.prototype, {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null,\n\n    get() {\n      return this.pipes.length\n    }\n  },\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null,\n\n    get() {\n      return this[kPaused] !== false\n    },\n\n    set(value) {\n      this[kPaused] = !!value\n    }\n  }\n}) // Exposed for testing purposes only.\n\nReadable._fromList = fromList // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered.\n  if (state.length === 0) return null\n  let ret\n  if (state.objectMode) ret = state.buffer.shift()\n  else if (!n || n >= state.length) {\n    // Read it all, truncate the list.\n    if (state.decoder) ret = state.buffer.join('')\n    else if (state.buffer.length === 1) ret = state.buffer.first()\n    else ret = state.buffer.concat(state.length)\n    state.buffer.clear()\n  } else {\n    // read part of list.\n    ret = state.buffer.consume(n, state.decoder)\n  }\n  return ret\n}\n\nfunction endReadable(stream) {\n  const state = stream._readableState\n  debug('endReadable', state.endEmitted)\n\n  if (!state.endEmitted) {\n    state.ended = true\n    process.nextTick(endReadableNT, state, stream)\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length) // Check that we didn't get one last unshift.\n\n  if (!state.errored && !state.closeEmitted && !state.endEmitted && state.length === 0) {\n    state.endEmitted = true\n    stream.emit('end')\n\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT, stream)\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState\n      const autoDestroy =\n        !wState ||\n        (wState.autoDestroy && // We don't expect the writable to ever 'finish'\n          // if writable is explicitly set to false.\n          (wState.finished || wState.writable === false))\n\n      if (autoDestroy) {\n        stream.destroy()\n      }\n    }\n  }\n}\n\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded && !stream.destroyed\n\n  if (writable) {\n    stream.end()\n  }\n}\n\nReadable.from = function (iterable, opts) {\n  return from(Readable, iterable, opts)\n}\n\nlet webStreamsAdapters // Lazy to avoid circular references\n\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\n\nReadable.fromWeb = function (readableStream, options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(readableStream, options)\n}\n\nReadable.toWeb = function (streamReadable, options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(streamReadable, options)\n}\n\nReadable.wrap = function (src, options) {\n  var _ref, _src$readableObjectMo\n\n  return new Readable({\n    objectMode:\n      (_ref =\n        (_src$readableObjectMo = src.readableObjectMode) !== null && _src$readableObjectMo !== undefined\n          ? _src$readableObjectMo\n          : src.objectMode) !== null && _ref !== undefined\n        ? _ref\n        : true,\n    ...options,\n\n    destroy(err, callback) {\n      destroyImpl.destroyer(src, err)\n      callback(err)\n    }\n  }).wrap(src)\n}\n","/* replacement start */\nconst process = require('process')\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n;('use strict')\n\nconst {\n  ArrayPrototypeSlice,\n  Error,\n  FunctionPrototypeSymbolHasInstance,\n  ObjectDefineProperty,\n  ObjectDefineProperties,\n  ObjectSetPrototypeOf,\n  StringPrototypeToLowerCase,\n  Symbol,\n  SymbolHasInstance\n} = require('../../ours/primordials')\n\nmodule.exports = Writable\nWritable.WritableState = WritableState\n\nconst { EventEmitter: EE } = require('events')\n\nconst Stream = require('./legacy').Stream\n\nconst { Buffer } = require('buffer')\n\nconst destroyImpl = require('./destroy')\n\nconst { addAbortSignal } = require('./add-abort-signal')\n\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\n\nconst {\n  ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED,\n  ERR_STREAM_ALREADY_FINISHED,\n  ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING\n} = require('../../ours/errors').codes\n\nconst { errorOrDestroy } = destroyImpl\nObjectSetPrototypeOf(Writable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Writable, Stream)\n\nfunction nop() {}\n\nconst kOnFinished = Symbol('kOnFinished')\n\nfunction WritableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex') // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.writableObjectMode) // The point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false) // if _final has been called.\n\n  this.finalCalled = false // drain event flag.\n\n  this.needDrain = false // At the start of calling end()\n\n  this.ending = false // When end() has been called, and returned.\n\n  this.ended = false // When 'finish' is emitted.\n\n  this.finished = false // Has it been destroyed\n\n  this.destroyed = false // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  const noDecode = !!(options && options.decodeStrings === false)\n  this.decodeStrings = !noDecode // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8' // Not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0 // A flag to see when we're in the middle of a write.\n\n  this.writing = false // When true all writes will be buffered until .uncork() call.\n\n  this.corked = 0 // A flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true // A flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false // The callback that's passed to _write(chunk, cb).\n\n  this.onwrite = onwrite.bind(undefined, stream) // The callback that the user supplies to write(chunk, encoding, cb).\n\n  this.writecb = null // The amount that is being written when _write is called.\n\n  this.writelen = 0 // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n\n  this.afterWriteTickInfo = null\n  resetBuffer(this) // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n\n  this.pendingcb = 0 // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n\n  this.constructed = true // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n\n  this.prefinished = false // True if the error was already emitted and should not be thrown again.\n\n  this.errorEmitted = false // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = !options || options.emitClose !== false // Should .destroy() be called after 'finish' (and potentially 'end').\n\n  this.autoDestroy = !options || options.autoDestroy !== false // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n\n  this.errored = null // Indicates whether the stream has finished destroying.\n\n  this.closed = false // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n\n  this.closeEmitted = false\n  this[kOnFinished] = []\n}\n\nfunction resetBuffer(state) {\n  state.buffered = []\n  state.bufferedIndex = 0\n  state.allBuffers = true\n  state.allNoop = true\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  return ArrayPrototypeSlice(this.buffered, this.bufferedIndex)\n}\n\nObjectDefineProperty(WritableState.prototype, 'bufferedRequestCount', {\n  __proto__: null,\n\n  get() {\n    return this.buffered.length - this.bufferedIndex\n  }\n})\n\nfunction Writable(options) {\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable, this)) return new Writable(options)\n  this._writableState = new WritableState(options, this, isDuplex)\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write\n    if (typeof options.writev === 'function') this._writev = options.writev\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.final === 'function') this._final = options.final\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal) addAbortSignal(options.signal, this)\n  }\n\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    const state = this._writableState\n\n    if (!state.writing) {\n      clearBuffer(this, state)\n    }\n\n    finishMaybe(this, state)\n  })\n}\n\nObjectDefineProperty(Writable, SymbolHasInstance, {\n  __proto__: null,\n  value: function (object) {\n    if (FunctionPrototypeSymbolHasInstance(this, object)) return true\n    if (this !== Writable) return false\n    return object && object._writableState instanceof WritableState\n  }\n}) // Otherwise people can pipe Writable streams, which is just wrong.\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE())\n}\n\nfunction _write(stream, chunk, encoding, cb) {\n  const state = stream._writableState\n\n  if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = state.defaultEncoding\n  } else {\n    if (!encoding) encoding = state.defaultEncoding\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n    if (typeof cb !== 'function') cb = nop\n  }\n\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES()\n  } else if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      if (state.decodeStrings !== false) {\n        chunk = Buffer.from(chunk, encoding)\n        encoding = 'buffer'\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer'\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = 'buffer'\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n\n  let err\n\n  if (state.ending) {\n    err = new ERR_STREAM_WRITE_AFTER_END()\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write')\n  }\n\n  if (err) {\n    process.nextTick(cb, err)\n    errorOrDestroy(stream, err, true)\n    return err\n  }\n\n  state.pendingcb++\n  return writeOrBuffer(stream, state, chunk, encoding, cb)\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  return _write(this, chunk, encoding, cb) === true\n}\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++\n}\n\nWritable.prototype.uncork = function () {\n  const state = this._writableState\n\n  if (state.corked) {\n    state.corked--\n    if (!state.writing) clearBuffer(this, state)\n  }\n}\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = StringPrototypeToLowerCase(encoding)\n  if (!Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n  this._writableState.defaultEncoding = encoding\n  return this\n} // If we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, chunk, encoding, callback) {\n  const len = state.objectMode ? 1 : chunk.length\n  state.length += len // stream._write resets state.length\n\n  const ret = state.length < state.highWaterMark // We must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true\n\n  if (state.writing || state.corked || state.errored || !state.constructed) {\n    state.buffered.push({\n      chunk,\n      encoding,\n      callback\n    })\n\n    if (state.allBuffers && encoding !== 'buffer') {\n      state.allBuffers = false\n    }\n\n    if (state.allNoop && callback !== nop) {\n      state.allNoop = false\n    }\n  } else {\n    state.writelen = len\n    state.writecb = callback\n    state.writing = true\n    state.sync = true\n\n    stream._write(chunk, encoding, state.onwrite)\n\n    state.sync = false\n  } // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n\n  return ret && !state.errored && !state.destroyed\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len\n  state.writecb = cb\n  state.writing = true\n  state.sync = true\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'))\n  else if (writev) stream._writev(chunk, state.onwrite)\n  else stream._write(chunk, encoding, state.onwrite)\n  state.sync = false\n}\n\nfunction onwriteError(stream, state, er, cb) {\n  --state.pendingcb\n  cb(er) // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write, not to the buffered\n  // writes.\n\n  errorBuffer(state) // This can emit error, but error must always follow cb.\n\n  errorOrDestroy(stream, er)\n}\n\nfunction onwrite(stream, er) {\n  const state = stream._writableState\n  const sync = state.sync\n  const cb = state.writecb\n\n  if (typeof cb !== 'function') {\n    errorOrDestroy(stream, new ERR_MULTIPLE_CALLBACK())\n    return\n  }\n\n  state.writing = false\n  state.writecb = null\n  state.length -= state.writelen\n  state.writelen = 0\n\n  if (er) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack // eslint-disable-line no-unused-expressions\n\n    if (!state.errored) {\n      state.errored = er\n    } // In case of duplex streams we need to notify the readable side of the\n    // error.\n\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er\n    }\n\n    if (sync) {\n      process.nextTick(onwriteError, stream, state, er, cb)\n    } else {\n      onwriteError(stream, state, er, cb)\n    }\n  } else {\n    if (state.buffered.length > state.bufferedIndex) {\n      clearBuffer(stream, state)\n    }\n\n    if (sync) {\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case, we do not schedule a new nextTick(), but\n      // rather just increase a counter, to improve performance and avoid\n      // memory allocations.\n      if (state.afterWriteTickInfo !== null && state.afterWriteTickInfo.cb === cb) {\n        state.afterWriteTickInfo.count++\n      } else {\n        state.afterWriteTickInfo = {\n          count: 1,\n          cb,\n          stream,\n          state\n        }\n        process.nextTick(afterWriteTick, state.afterWriteTickInfo)\n      }\n    } else {\n      afterWrite(stream, state, 1, cb)\n    }\n  }\n}\n\nfunction afterWriteTick({ stream, state, count, cb }) {\n  state.afterWriteTickInfo = null\n  return afterWrite(stream, state, count, cb)\n}\n\nfunction afterWrite(stream, state, count, cb) {\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 && state.needDrain\n\n  if (needDrain) {\n    state.needDrain = false\n    stream.emit('drain')\n  }\n\n  while (count-- > 0) {\n    state.pendingcb--\n    cb()\n  }\n\n  if (state.destroyed) {\n    errorBuffer(state)\n  }\n\n  finishMaybe(stream, state)\n} // If there's something in the buffer waiting, then invoke callbacks.\n\nfunction errorBuffer(state) {\n  if (state.writing) {\n    return\n  }\n\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n    var _state$errored\n\n    const { chunk, callback } = state.buffered[n]\n    const len = state.objectMode ? 1 : chunk.length\n    state.length -= len\n    callback(\n      (_state$errored = state.errored) !== null && _state$errored !== undefined\n        ? _state$errored\n        : new ERR_STREAM_DESTROYED('write')\n    )\n  }\n\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    var _state$errored2\n\n    onfinishCallbacks[i](\n      (_state$errored2 = state.errored) !== null && _state$errored2 !== undefined\n        ? _state$errored2\n        : new ERR_STREAM_DESTROYED('end')\n    )\n  }\n\n  resetBuffer(state)\n} // If there's something in the buffer waiting, then process it.\n\nfunction clearBuffer(stream, state) {\n  if (state.corked || state.bufferProcessing || state.destroyed || !state.constructed) {\n    return\n  }\n\n  const { buffered, bufferedIndex, objectMode } = state\n  const bufferedLength = buffered.length - bufferedIndex\n\n  if (!bufferedLength) {\n    return\n  }\n\n  let i = bufferedIndex\n  state.bufferProcessing = true\n\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1\n    const callback = state.allNoop\n      ? nop\n      : (err) => {\n          for (let n = i; n < buffered.length; ++n) {\n            buffered[n].callback(err)\n          }\n        } // Make a copy of `buffered` if it's going to be used by `callback` above,\n    // since `doWrite` will mutate the array.\n\n    const chunks = state.allNoop && i === 0 ? buffered : ArrayPrototypeSlice(buffered, i)\n    chunks.allBuffers = state.allBuffers\n    doWrite(stream, state, true, state.length, chunks, '', callback)\n    resetBuffer(state)\n  } else {\n    do {\n      const { chunk, encoding, callback } = buffered[i]\n      buffered[i++] = null\n      const len = objectMode ? 1 : chunk.length\n      doWrite(stream, state, false, len, chunk, encoding, callback)\n    } while (i < buffered.length && !state.writing)\n\n    if (i === buffered.length) {\n      resetBuffer(state)\n    } else if (i > 256) {\n      buffered.splice(0, i)\n      state.bufferedIndex = 0\n    } else {\n      state.bufferedIndex = i\n    }\n  }\n\n  state.bufferProcessing = false\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  if (this._writev) {\n    this._writev(\n      [\n        {\n          chunk,\n          encoding\n        }\n      ],\n      cb\n    )\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()')\n  }\n}\n\nWritable.prototype._writev = null\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  const state = this._writableState\n\n  if (typeof chunk === 'function') {\n    cb = chunk\n    chunk = null\n    encoding = null\n  } else if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = null\n  }\n\n  let err\n\n  if (chunk !== null && chunk !== undefined) {\n    const ret = _write(this, chunk, encoding)\n\n    if (ret instanceof Error) {\n      err = ret\n    }\n  } // .end() fully uncorks.\n\n  if (state.corked) {\n    state.corked = 1\n    this.uncork()\n  }\n\n  if (err) {\n    // Do nothing...\n  } else if (!state.errored && !state.ending) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However, usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n    state.ending = true\n    finishMaybe(this, state, true)\n    state.ended = true\n  } else if (state.finished) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end')\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('end')\n  }\n\n  if (typeof cb === 'function') {\n    if (err || state.finished) {\n      process.nextTick(cb, err)\n    } else {\n      state[kOnFinished].push(cb)\n    }\n  }\n\n  return this\n}\n\nfunction needFinish(state) {\n  return (\n    state.ending &&\n    !state.destroyed &&\n    state.constructed &&\n    state.length === 0 &&\n    !state.errored &&\n    state.buffered.length === 0 &&\n    !state.finished &&\n    !state.writing &&\n    !state.errorEmitted &&\n    !state.closeEmitted\n  )\n}\n\nfunction callFinal(stream, state) {\n  let called = false\n\n  function onFinish(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : ERR_MULTIPLE_CALLBACK())\n      return\n    }\n\n    called = true\n    state.pendingcb--\n\n    if (err) {\n      const onfinishCallbacks = state[kOnFinished].splice(0)\n\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i](err)\n      }\n\n      errorOrDestroy(stream, err, state.sync)\n    } else if (needFinish(state)) {\n      state.prefinished = true\n      stream.emit('prefinish') // Backwards compat. Don't check state.sync here.\n      // Some streams assume 'finish' will be emitted\n      // asynchronously relative to _final callback.\n\n      state.pendingcb++\n      process.nextTick(finish, stream, state)\n    }\n  }\n\n  state.sync = true\n  state.pendingcb++\n\n  try {\n    stream._final(onFinish)\n  } catch (err) {\n    onFinish(err)\n  }\n\n  state.sync = false\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.finalCalled = true\n      callFinal(stream, state)\n    } else {\n      state.prefinished = true\n      stream.emit('prefinish')\n    }\n  }\n}\n\nfunction finishMaybe(stream, state, sync) {\n  if (needFinish(state)) {\n    prefinish(stream, state)\n\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++\n        process.nextTick(\n          (stream, state) => {\n            if (needFinish(state)) {\n              finish(stream, state)\n            } else {\n              state.pendingcb--\n            }\n          },\n          stream,\n          state\n        )\n      } else if (needFinish(state)) {\n        state.pendingcb++\n        finish(stream, state)\n      }\n    }\n  }\n}\n\nfunction finish(stream, state) {\n  state.pendingcb--\n  state.finished = true\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i]()\n  }\n\n  stream.emit('finish')\n\n  if (state.autoDestroy) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState\n    const autoDestroy =\n      !rState ||\n      (rState.autoDestroy && // We don't expect the readable to ever 'end'\n        // if readable is explicitly set to false.\n        (rState.endEmitted || rState.readable === false))\n\n    if (autoDestroy) {\n      stream.destroy()\n    }\n  }\n}\n\nObjectDefineProperties(Writable.prototype, {\n  closed: {\n    __proto__: null,\n\n    get() {\n      return this._writableState ? this._writableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n\n    get() {\n      return this._writableState ? this._writableState.destroyed : false\n    },\n\n    set(value) {\n      // Backward compatibility, the user is explicitly managing destroyed.\n      if (this._writableState) {\n        this._writableState.destroyed = value\n      }\n    }\n  },\n  writable: {\n    __proto__: null,\n\n    get() {\n      const w = this._writableState // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n\n      return !!w && w.writable !== false && !w.destroyed && !w.errored && !w.ending && !w.ended\n    },\n\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val\n      }\n    }\n  },\n  writableFinished: {\n    __proto__: null,\n\n    get() {\n      return this._writableState ? this._writableState.finished : false\n    }\n  },\n  writableObjectMode: {\n    __proto__: null,\n\n    get() {\n      return this._writableState ? this._writableState.objectMode : false\n    }\n  },\n  writableBuffer: {\n    __proto__: null,\n\n    get() {\n      return this._writableState && this._writableState.getBuffer()\n    }\n  },\n  writableEnded: {\n    __proto__: null,\n\n    get() {\n      return this._writableState ? this._writableState.ending : false\n    }\n  },\n  writableNeedDrain: {\n    __proto__: null,\n\n    get() {\n      const wState = this._writableState\n      if (!wState) return false\n      return !wState.destroyed && !wState.ending && wState.needDrain\n    }\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n\n    get() {\n      return this._writableState && this._writableState.highWaterMark\n    }\n  },\n  writableCorked: {\n    __proto__: null,\n\n    get() {\n      return this._writableState ? this._writableState.corked : 0\n    }\n  },\n  writableLength: {\n    __proto__: null,\n\n    get() {\n      return this._writableState && this._writableState.length\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n\n    get() {\n      return this._writableState ? this._writableState.errored : null\n    }\n  },\n  writableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._writableState.writable !== false &&\n        (this._writableState.destroyed || this._writableState.errored) &&\n        !this._writableState.finished\n      )\n    }\n  }\n})\nconst destroy = destroyImpl.destroy\n\nWritable.prototype.destroy = function (err, cb) {\n  const state = this._writableState // Invoke pending callbacks.\n\n  if (!state.destroyed && (state.bufferedIndex < state.buffered.length || state[kOnFinished].length)) {\n    process.nextTick(errorBuffer, state)\n  }\n\n  destroy.call(this, err, cb)\n  return this\n}\n\nWritable.prototype._undestroy = destroyImpl.undestroy\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\n\nWritable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\n\nlet webStreamsAdapters // Lazy to avoid circular references\n\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\n\nWritable.fromWeb = function (writableStream, options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(writableStream, options)\n}\n\nWritable.toWeb = function (streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable)\n}\n","/* replacement start */\nconst process = require('process')\n/* replacement end */\n\n;('use strict')\n\nconst bufferModule = require('buffer')\n\nconst {\n  isReadable,\n  isWritable,\n  isIterable,\n  isNodeStream,\n  isReadableNodeStream,\n  isWritableNodeStream,\n  isDuplexNodeStream\n} = require('./utils')\n\nconst eos = require('./end-of-stream')\n\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_TYPE, ERR_INVALID_RETURN_VALUE }\n} = require('../../ours/errors')\n\nconst { destroyer } = require('./destroy')\n\nconst Duplex = require('./duplex')\n\nconst Readable = require('./readable')\n\nconst { createDeferredPromise } = require('../../ours/util')\n\nconst from = require('./from')\n\nconst Blob = globalThis.Blob || bufferModule.Blob\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\n\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\n\nconst { FunctionPrototypeCall } = require('../../ours/primordials') // This is needed for pre node 17.\n\nclass Duplexify extends Duplex {\n  constructor(options) {\n    super(options) // https://github.com/nodejs/node/pull/34385\n\n    if ((options === null || options === undefined ? undefined : options.readable) === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n\n    if ((options === null || options === undefined ? undefined : options.writable) === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  }\n}\n\nmodule.exports = function duplexify(body, name) {\n  if (isDuplexNodeStream(body)) {\n    return body\n  }\n\n  if (isReadableNodeStream(body)) {\n    return _duplexify({\n      readable: body\n    })\n  }\n\n  if (isWritableNodeStream(body)) {\n    return _duplexify({\n      writable: body\n    })\n  }\n\n  if (isNodeStream(body)) {\n    return _duplexify({\n      writable: false,\n      readable: false\n    })\n  } // TODO: Webstreams\n  // if (isReadableStream(body)) {\n  //   return _duplexify({ readable: Readable.fromWeb(body) });\n  // }\n  // TODO: Webstreams\n  // if (isWritableStream(body)) {\n  //   return _duplexify({ writable: Writable.fromWeb(body) });\n  // }\n\n  if (typeof body === 'function') {\n    const { value, write, final, destroy } = fromAsyncGen(body)\n\n    if (isIterable(value)) {\n      return from(Duplexify, value, {\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        write,\n        final,\n        destroy\n      })\n    }\n\n    const then = value === null || value === undefined ? undefined : value.then\n\n    if (typeof then === 'function') {\n      let d\n      const promise = FunctionPrototypeCall(\n        then,\n        value,\n        (val) => {\n          if (val != null) {\n            throw new ERR_INVALID_RETURN_VALUE('nully', 'body', val)\n          }\n        },\n        (err) => {\n          destroyer(d, err)\n        }\n      )\n      return (d = new Duplexify({\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        readable: false,\n        write,\n\n        final(cb) {\n          final(async () => {\n            try {\n              await promise\n              process.nextTick(cb, null)\n            } catch (err) {\n              process.nextTick(cb, err)\n            }\n          })\n        },\n\n        destroy\n      }))\n    }\n\n    throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or AsyncFunction', name, value)\n  }\n\n  if (isBlob(body)) {\n    return duplexify(body.arrayBuffer())\n  }\n\n  if (isIterable(body)) {\n    return from(Duplexify, body, {\n      // TODO (ronag): highWaterMark?\n      objectMode: true,\n      writable: false\n    })\n  } // TODO: Webstreams.\n  // if (\n  //   isReadableStream(body?.readable) &&\n  //   isWritableStream(body?.writable)\n  // ) {\n  //   return Duplexify.fromWeb(body);\n  // }\n\n  if (\n    typeof (body === null || body === undefined ? undefined : body.writable) === 'object' ||\n    typeof (body === null || body === undefined ? undefined : body.readable) === 'object'\n  ) {\n    const readable =\n      body !== null && body !== undefined && body.readable\n        ? isReadableNodeStream(body === null || body === undefined ? undefined : body.readable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.readable\n          : duplexify(body.readable)\n        : undefined\n    const writable =\n      body !== null && body !== undefined && body.writable\n        ? isWritableNodeStream(body === null || body === undefined ? undefined : body.writable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.writable\n          : duplexify(body.writable)\n        : undefined\n    return _duplexify({\n      readable,\n      writable\n    })\n  }\n\n  const then = body === null || body === undefined ? undefined : body.then\n\n  if (typeof then === 'function') {\n    let d\n    FunctionPrototypeCall(\n      then,\n      body,\n      (val) => {\n        if (val != null) {\n          d.push(val)\n        }\n\n        d.push(null)\n      },\n      (err) => {\n        destroyer(d, err)\n      }\n    )\n    return (d = new Duplexify({\n      objectMode: true,\n      writable: false,\n\n      read() {}\n    }))\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    name,\n    [\n      'Blob',\n      'ReadableStream',\n      'WritableStream',\n      'Stream',\n      'Iterable',\n      'AsyncIterable',\n      'Function',\n      '{ readable, writable } pair',\n      'Promise'\n    ],\n    body\n  )\n}\n\nfunction fromAsyncGen(fn) {\n  let { promise, resolve } = createDeferredPromise()\n  const ac = new AbortController()\n  const signal = ac.signal\n  const value = fn(\n    (async function* () {\n      while (true) {\n        const _promise = promise\n        promise = null\n        const { chunk, done, cb } = await _promise\n        process.nextTick(cb)\n        if (done) return\n        if (signal.aborted)\n          throw new AbortError(undefined, {\n            cause: signal.reason\n          })\n        ;({ promise, resolve } = createDeferredPromise())\n        yield chunk\n      }\n    })(),\n    {\n      signal\n    }\n  )\n  return {\n    value,\n\n    write(chunk, encoding, cb) {\n      const _resolve = resolve\n      resolve = null\n\n      _resolve({\n        chunk,\n        done: false,\n        cb\n      })\n    },\n\n    final(cb) {\n      const _resolve = resolve\n      resolve = null\n\n      _resolve({\n        done: true,\n        cb\n      })\n    },\n\n    destroy(err, cb) {\n      ac.abort()\n      cb(err)\n    }\n  }\n}\n\nfunction _duplexify(pair) {\n  const r = pair.readable && typeof pair.readable.read !== 'function' ? Readable.wrap(pair.readable) : pair.readable\n  const w = pair.writable\n  let readable = !!isReadable(r)\n  let writable = !!isWritable(w)\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    } else if (!readable && !writable) {\n      d.destroy()\n    }\n  } // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n\n  d = new Duplexify({\n    // TODO (ronag): highWaterMark?\n    readableObjectMode: !!(r !== null && r !== undefined && r.readableObjectMode),\n    writableObjectMode: !!(w !== null && w !== undefined && w.writableObjectMode),\n    readable,\n    writable\n  })\n\n  if (writable) {\n    eos(w, (err) => {\n      writable = false\n\n      if (err) {\n        destroyer(r, err)\n      }\n\n      onfinished(err)\n    })\n\n    d._write = function (chunk, encoding, callback) {\n      if (w.write(chunk, encoding)) {\n        callback()\n      } else {\n        ondrain = callback\n      }\n    }\n\n    d._final = function (callback) {\n      w.end()\n      onfinish = callback\n    }\n\n    w.on('drain', function () {\n      if (ondrain) {\n        const cb = ondrain\n        ondrain = null\n        cb()\n      }\n    })\n    w.on('finish', function () {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n\n  if (readable) {\n    eos(r, (err) => {\n      readable = false\n\n      if (err) {\n        destroyer(r, err)\n      }\n\n      onfinished(err)\n    })\n    r.on('readable', function () {\n      if (onreadable) {\n        const cb = onreadable\n        onreadable = null\n        cb()\n      }\n    })\n    r.on('end', function () {\n      d.push(null)\n    })\n\n    d._read = function () {\n      while (true) {\n        const buf = r.read()\n\n        if (buf === null) {\n          onreadable = d._read\n          return\n        }\n\n        if (!d.push(buf)) {\n          return\n        }\n      }\n    }\n  }\n\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n\n    onreadable = null\n    ondrain = null\n    onfinish = null\n\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      destroyer(w, err)\n      destroyer(r, err)\n    }\n  }\n\n  return d\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance, this class\n// prototypically inherits from Readable, and then parasitically from\n// Writable.\n'use strict'\n\nconst {\n  ObjectDefineProperties,\n  ObjectGetOwnPropertyDescriptor,\n  ObjectKeys,\n  ObjectSetPrototypeOf\n} = require('../../ours/primordials')\n\nmodule.exports = Duplex\n\nconst Readable = require('./readable')\n\nconst Writable = require('./writable')\n\nObjectSetPrototypeOf(Duplex.prototype, Readable.prototype)\nObjectSetPrototypeOf(Duplex, Readable)\n{\n  const keys = ObjectKeys(Writable.prototype) // Allow the keys array to be GC'ed.\n\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i]\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method]\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options)\n  Readable.call(this, options)\n  Writable.call(this, options)\n\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false\n\n    if (options.readable === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n\n    if (options.writable === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  } else {\n    this.allowHalfOpen = true\n  }\n}\n\nObjectDefineProperties(Duplex.prototype, {\n  writable: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writable')\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableHighWaterMark')\n  },\n  writableObjectMode: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableObjectMode')\n  },\n  writableBuffer: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableBuffer')\n  },\n  writableLength: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableLength')\n  },\n  writableFinished: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableFinished')\n  },\n  writableCorked: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableCorked')\n  },\n  writableEnded: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableEnded')\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableNeedDrain')\n  },\n  destroyed: {\n    __proto__: null,\n\n    get() {\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return false\n      }\n\n      return this._readableState.destroyed && this._writableState.destroyed\n    },\n\n    set(value) {\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value\n        this._writableState.destroyed = value\n      }\n    }\n  }\n})\nlet webStreamsAdapters // Lazy to avoid circular references\n\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\n\nDuplex.fromWeb = function (pair, options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(pair, options)\n}\n\nDuplex.toWeb = function (duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex)\n}\n\nlet duplexify\n\nDuplex.from = function (body) {\n  if (!duplexify) {\n    duplexify = require('./duplexify')\n  }\n\n  return duplexify(body, 'body')\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict'\n\nconst { ObjectSetPrototypeOf, Symbol } = require('../../ours/primordials')\n\nmodule.exports = Transform\n\nconst { ERR_METHOD_NOT_IMPLEMENTED } = require('../../ours/errors').codes\n\nconst Duplex = require('./duplex')\n\nconst { getHighWaterMark } = require('./state')\n\nObjectSetPrototypeOf(Transform.prototype, Duplex.prototype)\nObjectSetPrototypeOf(Transform, Duplex)\nconst kCallback = Symbol('kCallback')\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options) // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n\n  const readableHighWaterMark = options ? getHighWaterMark(this, options, 'readableHighWaterMark', true) : null\n\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options,\n      highWaterMark: null,\n      readableHighWaterMark,\n      // TODO (ronag): 0 is not optimal since we have\n      // a \"bug\" where we check needDrain before calling _write and not after.\n      // Refs: https://github.com/nodejs/node/pull/32887\n      // Refs: https://github.com/nodejs/node/pull/35941\n      writableHighWaterMark: options.writableHighWaterMark || 0\n    }\n  }\n\n  Duplex.call(this, options) // We have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false\n  this[kCallback] = null\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform\n    if (typeof options.flush === 'function') this._flush = options.flush\n  } // When the writable side finishes, then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n\n  this.on('prefinish', prefinish)\n}\n\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er, data) => {\n      if (er) {\n        if (cb) {\n          cb(er)\n        } else {\n          this.destroy(er)\n        }\n\n        return\n      }\n\n      if (data != null) {\n        this.push(data)\n      }\n\n      this.push(null)\n\n      if (cb) {\n        cb()\n      }\n    })\n  } else {\n    this.push(null)\n\n    if (cb) {\n      cb()\n    }\n  }\n}\n\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this)\n  }\n}\n\nTransform.prototype._final = final\n\nTransform.prototype._transform = function (chunk, encoding, callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()')\n}\n\nTransform.prototype._write = function (chunk, encoding, callback) {\n  const rState = this._readableState\n  const wState = this._writableState\n  const length = rState.length\n\n  this._transform(chunk, encoding, (err, val) => {\n    if (err) {\n      callback(err)\n      return\n    }\n\n    if (val != null) {\n      this.push(val)\n    }\n\n    if (\n      wState.ended || // Backwards compat.\n      length === rState.length || // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback()\n    } else {\n      this[kCallback] = callback\n    }\n  })\n}\n\nTransform.prototype._read = function () {\n  if (this[kCallback]) {\n    const callback = this[kCallback]\n    this[kCallback] = null\n    callback()\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict'\n\nconst { ObjectSetPrototypeOf } = require('../../ours/primordials')\n\nmodule.exports = PassThrough\n\nconst Transform = require('./transform')\n\nObjectSetPrototypeOf(PassThrough.prototype, Transform.prototype)\nObjectSetPrototypeOf(PassThrough, Transform)\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options)\n  Transform.call(this, options)\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk)\n}\n","/* replacement start */\nconst process = require('process')\n/* replacement end */\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\n\nconst { ArrayIsArray, Promise, SymbolAsyncIterator } = require('../../ours/primordials')\n\nconst eos = require('./end-of-stream')\n\nconst { once } = require('../../ours/util')\n\nconst destroyImpl = require('./destroy')\n\nconst Duplex = require('./duplex')\n\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED,\n    ERR_STREAM_PREMATURE_CLOSE\n  },\n  AbortError\n} = require('../../ours/errors')\n\nconst { validateFunction, validateAbortSignal } = require('../validators')\n\nconst { isIterable, isReadable, isReadableNodeStream, isNodeStream } = require('./utils')\n\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\n\nlet PassThrough\nlet Readable\n\nfunction destroyer(stream, reading, writing) {\n  let finished = false\n  stream.on('close', () => {\n    finished = true\n  })\n  const cleanup = eos(\n    stream,\n    {\n      readable: reading,\n      writable: writing\n    },\n    (err) => {\n      finished = !err\n    }\n  )\n  return {\n    destroy: (err) => {\n      if (finished) return\n      finished = true\n      destroyImpl.destroyer(stream, err || new ERR_STREAM_DESTROYED('pipe'))\n    },\n    cleanup\n  }\n}\n\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1], 'streams[stream.length - 1]')\n  return streams.pop()\n}\n\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val)\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('val', ['Readable', 'Iterable', 'AsyncIterable'], val)\n}\n\nasync function* fromReadable(val) {\n  if (!Readable) {\n    Readable = require('./readable')\n  }\n\n  yield* Readable.prototype[SymbolAsyncIterator].call(val)\n}\n\nasync function pump(iterable, writable, finish, { end }) {\n  let error\n  let onresolve = null\n\n  const resume = (err) => {\n    if (err) {\n      error = err\n    }\n\n    if (onresolve) {\n      const callback = onresolve\n      onresolve = null\n      callback()\n    }\n  }\n\n  const wait = () =>\n    new Promise((resolve, reject) => {\n      if (error) {\n        reject(error)\n      } else {\n        onresolve = () => {\n          if (error) {\n            reject(error)\n          } else {\n            resolve()\n          }\n        }\n      }\n    })\n\n  writable.on('drain', resume)\n  const cleanup = eos(\n    writable,\n    {\n      readable: false\n    },\n    resume\n  )\n\n  try {\n    if (writable.writableNeedDrain) {\n      await wait()\n    }\n\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait()\n      }\n    }\n\n    if (end) {\n      writable.end()\n    }\n\n    await wait()\n    finish()\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error, err) : err)\n  } finally {\n    cleanup()\n    writable.off('drain', resume)\n  }\n}\n\nfunction pipeline(...streams) {\n  return pipelineImpl(streams, once(popCallback(streams)))\n}\n\nfunction pipelineImpl(streams, callback, opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0]\n  }\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n\n  const ac = new AbortController()\n  const signal = ac.signal\n  const outerSignal = opts === null || opts === undefined ? undefined : opts.signal // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n\n  const lastStreamCleanup = []\n  validateAbortSignal(outerSignal, 'options.signal')\n\n  function abort() {\n    finishImpl(new AbortError())\n  }\n\n  outerSignal === null || outerSignal === undefined ? undefined : outerSignal.addEventListener('abort', abort)\n  let error\n  let value\n  const destroys = []\n  let finishCount = 0\n\n  function finish(err) {\n    finishImpl(err, --finishCount === 0)\n  }\n\n  function finishImpl(err, final) {\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err\n    }\n\n    if (!error && !final) {\n      return\n    }\n\n    while (destroys.length) {\n      destroys.shift()(error)\n    }\n\n    outerSignal === null || outerSignal === undefined ? undefined : outerSignal.removeEventListener('abort', abort)\n    ac.abort()\n\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn())\n      }\n\n      process.nextTick(callback, error, value)\n    }\n  }\n\n  let ret\n\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i]\n    const reading = i < streams.length - 1\n    const writing = i > 0\n    const end = reading || (opts === null || opts === undefined ? undefined : opts.end) !== false\n    const isLastStream = i === streams.length - 1\n\n    if (isNodeStream(stream)) {\n      if (end) {\n        const { destroy, cleanup } = destroyer(stream, reading, writing)\n        destroys.push(destroy)\n\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      } // Catch stream errors that occur after pipe/pump has completed.\n\n      function onError(err) {\n        if (err && err.name !== 'AbortError' && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n          finish(err)\n        }\n      }\n\n      stream.on('error', onError)\n\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error', onError)\n        })\n      }\n    }\n\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({\n          signal\n        })\n\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or Stream', 'source', ret)\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream)) {\n        ret = stream\n      } else {\n        ret = Duplex.from(stream)\n      }\n    } else if (typeof stream === 'function') {\n      ret = makeAsyncIterable(ret)\n      ret = stream(ret, {\n        signal\n      })\n\n      if (reading) {\n        if (!isIterable(ret, true)) {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable', `transform[${i - 1}]`, ret)\n        }\n      } else {\n        var _ret\n\n        if (!PassThrough) {\n          PassThrough = require('./passthrough')\n        } // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\n        }) // Handle Promises/A+ spec, `then` could be a getter that throws on\n        // second use.\n\n        const then = (_ret = ret) === null || _ret === undefined ? undefined : _ret.then\n\n        if (typeof then === 'function') {\n          finishCount++\n          then.call(\n            ret,\n            (val) => {\n              value = val\n\n              if (val != null) {\n                pt.write(val)\n              }\n\n              if (end) {\n                pt.end()\n              }\n\n              process.nextTick(finish)\n            },\n            (err) => {\n              pt.destroy(err)\n              process.nextTick(finish, err)\n            }\n          )\n        } else if (isIterable(ret, true)) {\n          finishCount++\n          pump(ret, pt, finish, {\n            end\n          })\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable or Promise', 'destination', ret)\n        }\n\n        ret = pt\n        const { destroy, cleanup } = destroyer(ret, false, true)\n        destroys.push(destroy)\n\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2\n        const cleanup = pipe(ret, stream, finish, {\n          end\n        })\n\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      } else if (isIterable(ret)) {\n        finishCount++\n        pump(ret, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE('val', ['Readable', 'Iterable', 'AsyncIterable'], ret)\n      }\n\n      ret = stream\n    } else {\n      ret = Duplex.from(stream)\n    }\n  }\n\n  if (\n    (signal !== null && signal !== undefined && signal.aborted) ||\n    (outerSignal !== null && outerSignal !== undefined && outerSignal.aborted)\n  ) {\n    process.nextTick(abort)\n  }\n\n  return ret\n}\n\nfunction pipe(src, dst, finish, { end }) {\n  let ended = false\n  dst.on('close', () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finish(new ERR_STREAM_PREMATURE_CLOSE())\n    }\n  })\n  src.pipe(dst, {\n    end\n  })\n\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but \"secretly\" don't close the underlying fd.\n    src.once('end', () => {\n      ended = true\n      dst.end()\n    })\n  } else {\n    finish()\n  }\n\n  eos(\n    src,\n    {\n      readable: true,\n      writable: false\n    },\n    (err) => {\n      const rState = src._readableState\n\n      if (\n        err &&\n        err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n        rState &&\n        rState.ended &&\n        !rState.errored &&\n        !rState.errorEmitted\n      ) {\n        // Some readable streams will emit 'close' before 'end'. However, since\n        // this is on the readable side 'end' should still be emitted if the\n        // stream has been ended and no error emitted. This should be allowed in\n        // favor of backwards compatibility. Since the stream is piped to a\n        // destination this should not result in any observable difference.\n        // We don't need to check if this is a writable premature close since\n        // eos will only fail with premature close on the reading side for\n        // duplex streams.\n        src.once('end', finish).once('error', finish)\n      } else {\n        finish(err)\n      }\n    }\n  )\n  return eos(\n    dst,\n    {\n      readable: false,\n      writable: true\n    },\n    finish\n  )\n}\n\nmodule.exports = {\n  pipelineImpl,\n  pipeline\n}\n","'use strict'\n\nconst { pipeline } = require('./pipeline')\n\nconst Duplex = require('./duplex')\n\nconst { destroyer } = require('./destroy')\n\nconst { isNodeStream, isReadable, isWritable } = require('./utils')\n\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_VALUE, ERR_MISSING_ARGS }\n} = require('../../ours/errors')\n\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n\n  if (streams.length === 1) {\n    return Duplex.from(streams[0])\n  }\n\n  const orgStreams = [...streams]\n\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0])\n  }\n\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1\n    streams[idx] = Duplex.from(streams[idx])\n  }\n\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue\n    }\n\n    if (n < streams.length - 1 && !isReadable(streams[n])) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be readable')\n    }\n\n    if (n > 0 && !isWritable(streams[n])) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be writable')\n    }\n  }\n\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    } else if (!readable && !writable) {\n      d.destroy()\n    }\n  }\n\n  const head = streams[0]\n  const tail = pipeline(streams, onfinished)\n  const writable = !!isWritable(head)\n  const readable = !!isReadable(tail) // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!(head !== null && head !== undefined && head.writableObjectMode),\n    readableObjectMode: !!(tail !== null && tail !== undefined && tail.writableObjectMode),\n    writable,\n    readable\n  })\n\n  if (writable) {\n    d._write = function (chunk, encoding, callback) {\n      if (head.write(chunk, encoding)) {\n        callback()\n      } else {\n        ondrain = callback\n      }\n    }\n\n    d._final = function (callback) {\n      head.end()\n      onfinish = callback\n    }\n\n    head.on('drain', function () {\n      if (ondrain) {\n        const cb = ondrain\n        ondrain = null\n        cb()\n      }\n    })\n    tail.on('finish', function () {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n\n  if (readable) {\n    tail.on('readable', function () {\n      if (onreadable) {\n        const cb = onreadable\n        onreadable = null\n        cb()\n      }\n    })\n    tail.on('end', function () {\n      d.push(null)\n    })\n\n    d._read = function () {\n      while (true) {\n        const buf = tail.read()\n\n        if (buf === null) {\n          onreadable = d._read\n          return\n        }\n\n        if (!d.push(buf)) {\n          return\n        }\n      }\n    }\n  }\n\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n\n    onreadable = null\n    ondrain = null\n    onfinish = null\n\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      destroyer(tail, err)\n    }\n  }\n\n  return d\n}\n","'use strict'\n\nconst { ArrayPrototypePop, Promise } = require('../ours/primordials')\n\nconst { isIterable, isNodeStream } = require('../internal/streams/utils')\n\nconst { pipelineImpl: pl } = require('../internal/streams/pipeline')\n\nconst { finished } = require('../internal/streams/end-of-stream')\n\nfunction pipeline(...streams) {\n  return new Promise((resolve, reject) => {\n    let signal\n    let end\n    const lastArg = streams[streams.length - 1]\n\n    if (lastArg && typeof lastArg === 'object' && !isNodeStream(lastArg) && !isIterable(lastArg)) {\n      const options = ArrayPrototypePop(streams)\n      signal = options.signal\n      end = options.end\n    }\n\n    pl(\n      streams,\n      (err, value) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      },\n      {\n        signal,\n        end\n      }\n    )\n  })\n}\n\nmodule.exports = {\n  finished,\n  pipeline\n}\n","'use strict'\n\nconst Stream = require('stream')\n\nif (Stream && process.env.READABLE_STREAM === 'disable') {\n  const promises = Stream.promises // Explicit export naming is needed for ESM\n\n  module.exports._uint8ArrayToBuffer = Stream._uint8ArrayToBuffer\n  module.exports._isUint8Array = Stream._isUint8Array\n  module.exports.isDisturbed = Stream.isDisturbed\n  module.exports.isErrored = Stream.isErrored\n  module.exports.isReadable = Stream.isReadable\n  module.exports.Readable = Stream.Readable\n  module.exports.Writable = Stream.Writable\n  module.exports.Duplex = Stream.Duplex\n  module.exports.Transform = Stream.Transform\n  module.exports.PassThrough = Stream.PassThrough\n  module.exports.addAbortSignal = Stream.addAbortSignal\n  module.exports.finished = Stream.finished\n  module.exports.destroy = Stream.destroy\n  module.exports.pipeline = Stream.pipeline\n  module.exports.compose = Stream.compose\n  Object.defineProperty(Stream, 'promises', {\n    configurable: true,\n    enumerable: true,\n\n    get() {\n      return promises\n    }\n  })\n  module.exports.Stream = Stream.Stream\n} else {\n  const CustomStream = require('../stream')\n\n  const promises = require('../stream/promises')\n\n  const originalDestroy = CustomStream.Readable.destroy\n  module.exports = CustomStream.Readable // Explicit export naming is needed for ESM\n\n  module.exports._uint8ArrayToBuffer = CustomStream._uint8ArrayToBuffer\n  module.exports._isUint8Array = CustomStream._isUint8Array\n  module.exports.isDisturbed = CustomStream.isDisturbed\n  module.exports.isErrored = CustomStream.isErrored\n  module.exports.isReadable = CustomStream.isReadable\n  module.exports.Readable = CustomStream.Readable\n  module.exports.Writable = CustomStream.Writable\n  module.exports.Duplex = CustomStream.Duplex\n  module.exports.Transform = CustomStream.Transform\n  module.exports.PassThrough = CustomStream.PassThrough\n  module.exports.addAbortSignal = CustomStream.addAbortSignal\n  module.exports.finished = CustomStream.finished\n  module.exports.destroy = CustomStream.destroy\n  module.exports.destroy = originalDestroy\n  module.exports.pipeline = CustomStream.pipeline\n  module.exports.compose = CustomStream.compose\n  Object.defineProperty(CustomStream, 'promises', {\n    configurable: true,\n    enumerable: true,\n\n    get() {\n      return promises\n    }\n  })\n  module.exports.Stream = CustomStream.Stream\n} // Allow default importing\n\nmodule.exports.default = module.exports\n","/* replacement start */\nconst { Buffer } = require('buffer')\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\n\nconst { ObjectDefineProperty, ObjectKeys, ReflectApply } = require('./ours/primordials')\n\nconst {\n  promisify: { custom: customPromisify }\n} = require('./ours/util')\n\nconst { streamReturningOperators, promiseReturningOperators } = require('./internal/streams/operators')\n\nconst {\n  codes: { ERR_ILLEGAL_CONSTRUCTOR }\n} = require('./ours/errors')\n\nconst compose = require('./internal/streams/compose')\n\nconst { pipeline } = require('./internal/streams/pipeline')\n\nconst { destroyer } = require('./internal/streams/destroy')\n\nconst eos = require('./internal/streams/end-of-stream')\n\nconst internalBuffer = {}\n\nconst promises = require('./stream/promises')\n\nconst utils = require('./internal/streams/utils')\n\nconst Stream = (module.exports = require('./internal/streams/legacy').Stream)\n\nStream.isDisturbed = utils.isDisturbed\nStream.isErrored = utils.isErrored\nStream.isReadable = utils.isReadable\nStream.Readable = require('./internal/streams/readable')\n\nfor (const key of ObjectKeys(streamReturningOperators)) {\n  const op = streamReturningOperators[key]\n\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n\n    return Stream.Readable.from(ReflectApply(op, this, args))\n  }\n\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\n\nfor (const key of ObjectKeys(promiseReturningOperators)) {\n  const op = promiseReturningOperators[key]\n\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n\n    return ReflectApply(op, this, args)\n  }\n\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\n\nStream.Writable = require('./internal/streams/writable')\nStream.Duplex = require('./internal/streams/duplex')\nStream.Transform = require('./internal/streams/transform')\nStream.PassThrough = require('./internal/streams/passthrough')\nStream.pipeline = pipeline\n\nconst { addAbortSignal } = require('./internal/streams/add-abort-signal')\n\nStream.addAbortSignal = addAbortSignal\nStream.finished = eos\nStream.destroy = destroyer\nStream.compose = compose\nObjectDefineProperty(Stream, 'promises', {\n  __proto__: null,\n  configurable: true,\n  enumerable: true,\n\n  get() {\n    return promises\n  }\n})\nObjectDefineProperty(pipeline, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n\n  get() {\n    return promises.pipeline\n  }\n})\nObjectDefineProperty(eos, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n\n  get() {\n    return promises.finished\n  }\n}) // Backwards-compat with node 0.4.x\n\nStream.Stream = Stream\n\nStream._isUint8Array = function isUint8Array(value) {\n  return value instanceof Uint8Array\n}\n\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n}\n","'use strict'\n\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\n\nconst {\n  codes: { ERR_INVALID_ARG_TYPE, ERR_MISSING_ARGS, ERR_OUT_OF_RANGE },\n  AbortError\n} = require('../../ours/errors')\n\nconst { validateAbortSignal, validateInteger, validateObject } = require('../validators')\n\nconst kWeakHandler = require('../../ours/primordials').Symbol('kWeak')\n\nconst { finished } = require('./end-of-stream')\n\nconst {\n  ArrayPrototypePush,\n  MathFloor,\n  Number,\n  NumberIsNaN,\n  Promise,\n  PromiseReject,\n  PromisePrototypeThen,\n  Symbol\n} = require('../../ours/primordials')\n\nconst kEmpty = Symbol('kEmpty')\nconst kEof = Symbol('kEof')\n\nfunction map(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n\n  let concurrency = 1\n\n  if ((options === null || options === undefined ? undefined : options.concurrency) != null) {\n    concurrency = MathFloor(options.concurrency)\n  }\n\n  validateInteger(concurrency, 'concurrency', 1)\n  return async function* map() {\n    var _options$signal, _options$signal2\n\n    const ac = new AbortController()\n    const stream = this\n    const queue = []\n    const signal = ac.signal\n    const signalOpt = {\n      signal\n    }\n\n    const abort = () => ac.abort()\n\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal = options.signal) !== null &&\n      _options$signal !== undefined &&\n      _options$signal.aborted\n    ) {\n      abort()\n    }\n\n    options === null || options === undefined\n      ? undefined\n      : (_options$signal2 = options.signal) === null || _options$signal2 === undefined\n      ? undefined\n      : _options$signal2.addEventListener('abort', abort)\n    let next\n    let resume\n    let done = false\n\n    function onDone() {\n      done = true\n    }\n\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          var _val\n\n          if (done) {\n            return\n          }\n\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n\n          try {\n            val = fn(val, signalOpt)\n          } catch (err) {\n            val = PromiseReject(err)\n          }\n\n          if (val === kEmpty) {\n            continue\n          }\n\n          if (typeof ((_val = val) === null || _val === undefined ? undefined : _val.catch) === 'function') {\n            val.catch(onDone)\n          }\n\n          queue.push(val)\n\n          if (next) {\n            next()\n            next = null\n          }\n\n          if (!done && queue.length && queue.length >= concurrency) {\n            await new Promise((resolve) => {\n              resume = resolve\n            })\n          }\n        }\n\n        queue.push(kEof)\n      } catch (err) {\n        const val = PromiseReject(err)\n        PromisePrototypeThen(val, undefined, onDone)\n        queue.push(val)\n      } finally {\n        var _options$signal3\n\n        done = true\n\n        if (next) {\n          next()\n          next = null\n        }\n\n        options === null || options === undefined\n          ? undefined\n          : (_options$signal3 = options.signal) === null || _options$signal3 === undefined\n          ? undefined\n          : _options$signal3.removeEventListener('abort', abort)\n      }\n    }\n\n    pump()\n\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0]\n\n          if (val === kEof) {\n            return\n          }\n\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n\n          if (val !== kEmpty) {\n            yield val\n          }\n\n          queue.shift()\n\n          if (resume) {\n            resume()\n            resume = null\n          }\n        }\n\n        await new Promise((resolve) => {\n          next = resolve\n        })\n      }\n    } finally {\n      ac.abort()\n      done = true\n\n      if (resume) {\n        resume()\n        resume = null\n      }\n    }\n  }.call(this)\n}\n\nfunction asIndexedPairs(options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n\n  return async function* asIndexedPairs() {\n    let index = 0\n\n    for await (const val of this) {\n      var _options$signal4\n\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal4 = options.signal) !== null &&\n        _options$signal4 !== undefined &&\n        _options$signal4.aborted\n      ) {\n        throw new AbortError({\n          cause: options.signal.reason\n        })\n      }\n\n      yield [index++, val]\n    }\n  }.call(this)\n}\n\nasync function some(fn, options = undefined) {\n  for await (const unused of filter.call(this, fn, options)) {\n    return true\n  }\n\n  return false\n}\n\nasync function every(fn, options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  } // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n\n  return !(await some.call(\n    this,\n    async (...args) => {\n      return !(await fn(...args))\n    },\n    options\n  ))\n}\n\nasync function find(fn, options) {\n  for await (const result of filter.call(this, fn, options)) {\n    return result\n  }\n\n  return undefined\n}\n\nasync function forEach(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n\n  async function forEachFn(value, options) {\n    await fn(value, options)\n    return kEmpty\n  } // eslint-disable-next-line no-unused-vars\n\n  for await (const unused of map.call(this, forEachFn, options));\n}\n\nfunction filter(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n\n  async function filterFn(value, options) {\n    if (await fn(value, options)) {\n      return value\n    }\n\n    return kEmpty\n  }\n\n  return map.call(this, filterFn, options)\n} // Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\n\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce')\n    this.message = 'Reduce of an empty stream requires an initial value'\n  }\n}\n\nasync function reduce(reducer, initialValue, options) {\n  var _options$signal5\n\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('reducer', ['Function', 'AsyncFunction'], reducer)\n  }\n\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n\n  let hasInitialValue = arguments.length > 1\n\n  if (\n    options !== null &&\n    options !== undefined &&\n    (_options$signal5 = options.signal) !== null &&\n    _options$signal5 !== undefined &&\n    _options$signal5.aborted\n  ) {\n    const err = new AbortError(undefined, {\n      cause: options.signal.reason\n    })\n    this.once('error', () => {}) // The error is already propagated\n\n    await finished(this.destroy(err))\n    throw err\n  }\n\n  const ac = new AbortController()\n  const signal = ac.signal\n\n  if (options !== null && options !== undefined && options.signal) {\n    const opts = {\n      once: true,\n      [kWeakHandler]: this\n    }\n    options.signal.addEventListener('abort', () => ac.abort(), opts)\n  }\n\n  let gotAnyItemFromStream = false\n\n  try {\n    for await (const value of this) {\n      var _options$signal6\n\n      gotAnyItemFromStream = true\n\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal6 = options.signal) !== null &&\n        _options$signal6 !== undefined &&\n        _options$signal6.aborted\n      ) {\n        throw new AbortError()\n      }\n\n      if (!hasInitialValue) {\n        initialValue = value\n        hasInitialValue = true\n      } else {\n        initialValue = await reducer(initialValue, value, {\n          signal\n        })\n      }\n    }\n\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs()\n    }\n  } finally {\n    ac.abort()\n  }\n\n  return initialValue\n}\n\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n\n  const result = []\n\n  for await (const val of this) {\n    var _options$signal7\n\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal7 = options.signal) !== null &&\n      _options$signal7 !== undefined &&\n      _options$signal7.aborted\n    ) {\n      throw new AbortError(undefined, {\n        cause: options.signal.reason\n      })\n    }\n\n    ArrayPrototypePush(result, val)\n  }\n\n  return result\n}\n\nfunction flatMap(fn, options) {\n  const values = map.call(this, fn, options)\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val\n    }\n  }.call(this)\n}\n\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number)\n\n  if (NumberIsNaN(number)) {\n    return 0\n  }\n\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number', '>= 0', number)\n  }\n\n  return number\n}\n\nfunction drop(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n\n  number = toIntegerOrInfinity(number)\n  return async function* drop() {\n    var _options$signal8\n\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal8 = options.signal) !== null &&\n      _options$signal8 !== undefined &&\n      _options$signal8.aborted\n    ) {\n      throw new AbortError()\n    }\n\n    for await (const val of this) {\n      var _options$signal9\n\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal9 = options.signal) !== null &&\n        _options$signal9 !== undefined &&\n        _options$signal9.aborted\n      ) {\n        throw new AbortError()\n      }\n\n      if (number-- <= 0) {\n        yield val\n      }\n    }\n  }.call(this)\n}\n\nfunction take(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n\n  number = toIntegerOrInfinity(number)\n  return async function* take() {\n    var _options$signal10\n\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal10 = options.signal) !== null &&\n      _options$signal10 !== undefined &&\n      _options$signal10.aborted\n    ) {\n      throw new AbortError()\n    }\n\n    for await (const val of this) {\n      var _options$signal11\n\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal11 = options.signal) !== null &&\n        _options$signal11 !== undefined &&\n        _options$signal11.aborted\n      ) {\n        throw new AbortError()\n      }\n\n      if (number-- > 0) {\n        yield val\n      } else {\n        return\n      }\n    }\n  }.call(this)\n}\n\nmodule.exports.streamReturningOperators = {\n  asIndexedPairs,\n  drop,\n  filter,\n  flatMap,\n  map,\n  take\n}\nmodule.exports.promiseReturningOperators = {\n  every,\n  forEach,\n  reduce,\n  toArray,\n  some,\n  find\n}\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasSymbols from '@stdlib/assert-has-symbol-support' ;\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nexport default hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nexport default toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nexport default hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nexport default toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils-native-class\n*\n* @example\n* import nativeClass from '@stdlib/utils-native-class' ;\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert-has-tostringtag-support' ;\nimport builtin from './native_class.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar nativeClass;\nif ( hasToStringTag() ) {\n\tnativeClass = polyfill;\n} else {\n\tnativeClass = builtin;\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport toStringTag from './tostringtag.js' ;\nimport toStr from './tostring.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toStr from './tostring.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Number from '@stdlib/number-ctor' ;\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert-has-tostringtag-support' ;\nimport nativeClass from '@stdlib/utils-native-class' ;\nimport Number from '@stdlib/number-ctor' ;\nimport test from './try2serialize.js' ;\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js' ; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from '@stdlib/assert-is-number' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive number\n*\n* @example\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( null );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert-is-number\n*\n* @example\n* import isNumber from '@stdlib/assert-is-number' ;\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNumber } from '@stdlib/assert-is-number' ;\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isNumber from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( isNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive number.\n*\n* @module @stdlib/assert-is-positive-number\n*\n* @example\n* import isPositiveNumber from '@stdlib/assert-is-positive-number' ;\n*\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* bool = isPositiveNumber( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isPositiveNumber } from '@stdlib/assert-is-positive-number' ;\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isPositiveNumber } from '@stdlib/assert-is-positive-number' ;\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isPositiveNumber from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( isPositiveNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nexport default RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert-has-tostringtag-support' ;\nimport nativeClass from '@stdlib/utils-native-class' ;\nimport test from './try2serialize.js' ;\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js' ; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert-is-boolean\n*\n* @example\n* import isBoolean from '@stdlib/assert-is-boolean' ;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* // Use interface to check for boolean primitives...\n* import { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean' ;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* // Use interface to check for boolean objects...\n* import { isObject as isBoolean } from '@stdlib/assert-is-boolean' ;\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isBoolean from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( isBoolean, 'isPrimitive', isPrimitive );\nsetReadOnly( isBoolean, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof global === 'object' ) ? global : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getGlobal from '@stdlib/utils-global' ;\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nexport default nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean' ;\nimport getThis from './codegen.js' ;\nimport Self from './self.js' ;\nimport Win from './window.js' ;\nimport Global from './global.js' ;\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Must provide a boolean primitive. Value: `'+codegen+'`.' );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: Node.js\n\tif ( Global ) {\n\t\treturn Global;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nexport default reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reFunctionName from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nexport default RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp-function-name\n*\n* @example\n* import reFunctionName from '@stdlib/regexp-function-name' ;\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport reFunctionName from './main.js' ;\nimport REGEXP from './regexp.js' ;\n\n\n// MAIN //\n\nsetReadOnly( reFunctionName, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nexport default f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert-is-object-like' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\nimport { REGEXP as RE } from '@stdlib/regexp-function-name' ;\nimport isBuffer from '@stdlib/assert-is-buffer' ;\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nexport default constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert-is-object-like\n*\n* @example\n* import isObjectLike from '@stdlib/assert-is-object-like' ;\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* import { isObjectLikeArray as isObjectLike } from '@stdlib/assert-is-object-like' ;\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport arrayfun from '@stdlib/assert-tools-array-function' ;\nimport isObjectLike from './main.js' ;\n\n\n// VARIABLES //\n\nvar isObjectLikeArray = arrayfun( isObjectLike );\n\n\n// MAIN //\n\nsetReadOnly( isObjectLike, 'isObjectLikeArray', isObjectLikeArray );\n\n\n// EXPORTS //\n\nexport default isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert-is-array' ;\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* import isOdd from '@stdlib/assert-is-odd' ;\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a function. Value: `' + predicate + '`.' );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils-type-of\n*\n* @example\n* import typeOf from '@stdlib/utils-type-of' ;\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nimport usePolyfill from './check.js' ;\nimport typeOf from './typeof.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : typeOf;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport RE from './fixtures/re.js' ;\nimport nodeList from './fixtures/nodelist.js' ;\nimport typedarray from './fixtures/typedarray.js' ;\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from '@stdlib/utils-constructor-name' ;\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from '@stdlib/utils-constructor-name' ;\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport typeOf from '@stdlib/utils-type-of' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nexport default isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function' ;\nimport builtin from './native.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\nimport getProto from './proto.js' ;\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getProto from './detect.js' ;\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of' ;\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an `Error` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `Error` object\n*\n* @example\n* var bool = isError( new Error( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isError( {} );\n* // returns false\n*/\nfunction isError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `Error` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof Error ) {\n\t\treturn true;\n\t}\n\t// Walk the prototype tree until we find an object having the desired native class...\n\twhile ( value ) {\n\t\tif ( nativeClass( value ) === '[object Error]' ) {\n\t\t\treturn true;\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants-float64-pinf\n* @type {number}\n*\n* @example\n* import FLOAT64_PINF from '@stdlib/constants-float64-pinf' ;\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants-float64-ninf\n* @type {number}\n*\n* @example\n* import FLOAT64_NINF from '@stdlib/constants-float64-ninf' ;\n* // returns -Infinity\n*/\n\n// MODULES //\n\nimport Number from '@stdlib/number-ctor' ;\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nexport default FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from '@stdlib/math-base-special-floor' ;\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants-float64-pinf' ;\nimport NINF from '@stdlib/constants-float64-ninf' ;\nimport isInt from '@stdlib/math-base-assert-is-integer' ;\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\nimport isInt from './integer.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from '@stdlib/assert-is-number' ;\nimport isInt from './integer.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from '@stdlib/assert-is-integer' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert-is-integer\n*\n* @example\n* import isInteger from '@stdlib/assert-is-integer' ;\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* import { isPrimitive as isInteger } from '@stdlib/assert-is-integer' ;\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* import { isObject as isInteger } from '@stdlib/assert-is-integer' ;\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isInteger from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( isInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert-is-nonnegative-integer\n*\n* @example\n* import isNonNegativeInteger from '@stdlib/assert-is-nonnegative-integer' ;\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer' ;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer' ;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isNonNegativeInteger from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( isNonNegativeInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonNegativeInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nexport default valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert-has-tostringtag-support' ;\nimport nativeClass from '@stdlib/utils-native-class' ;\nimport test from './try2valueof.js' ;\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport valueOf from './valueof.js' ; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to parse a regular expression string.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*/\nfunction reRegExp() {\n\treturn /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nexport default reRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert-is-string\n*\n* @example\n* import isString from '@stdlib/assert-is-string' ;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* import { isObject as isString } from '@stdlib/assert-is-string' ;\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* import { isPrimitive as isString } from '@stdlib/assert-is-string' ;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isString from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( isString, 'isPrimitive', isPrimitive );\nsetReadOnly( isString, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to parse a regular expression string.\n*\n* @module @stdlib/regexp-regexp\n*\n* @example\n* import reRegExp from '@stdlib/regexp-regexp' ;\n*\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*\n* @example\n* import reRegExp from '@stdlib/regexp-regexp' ;\n*\n* var RE_REGEXP = reRegExp();\n*\n* var parts = RE_REGEXP.exec( '/^.*$/ig' );\n* // returns [ '/^.*$/ig', '^.*$', 'ig', 'index': 0, 'input': '/^.*$/ig' ]\n*/\n\n// MAIN //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport reRegExp from './main.js' ;\nimport REGEXP from './regexp.js' ;\n\n\n// MAIN //\n\nsetReadOnly( reRegExp, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default reRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js' ;\nimport zeroPad from './zero_pad.js' ;\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js' ;\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport formatInteger from './format_integer.js' ;\nimport isString from './is_string.js' ;\nimport formatDouble from './format_double.js' ;\nimport spacePad from './space_pad.js' ;\nimport zeroPad from './zero_pad.js' ;\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isnan = isNaN; // NOTE: We use the global `isNaN` function here instead of `@stdlib/math/base/assert/is-nan` to avoid circular dependencies.\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ?\n\t\t\t\t\t\tString( token.arg ) :\n\t\t\t\t\t\tfromCharCode( num );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport interpolate from '@stdlib/string-base-format-interpolate' ;\nimport tokenize from '@stdlib/string-base-format-tokenize' ;\nimport isString from './is_string.js' ;\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar tokens;\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\ttokens = tokenize( str );\n\targs = new Array( arguments.length );\n\targs[ 0 ] = tokens;\n\tfor ( i = 1; i < args.length; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nexport default format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\nimport isNan from '@stdlib/math-base-assert-is-nan' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from '@stdlib/assert-is-number' ;\nimport isNan from '@stdlib/math-base-assert-is-nan' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert-is-nan\n*\n* @example\n* import isnan from '@stdlib/assert-is-nan' ;\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isnan } from '@stdlib/assert-is-nan' ;\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* import { isObject as isnan } from '@stdlib/assert-is-nan' ;\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isnan from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( isnan, 'isPrimitive', isPrimitive );\nsetReadOnly( isnan, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math-base-assert-is-integer' ;\nimport MAX_LENGTH from '@stdlib/constants-array-max-typed-array-length' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants-array-max-typed-array-length\n*\n* @example\n* import MAX_TYPED_ARRAY_LENGTH from '@stdlib/constants-array-max-typed-array-length' ;\n* // returns 9007199254740991\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/\nvar MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n\n\n// EXPORTS //\n\nexport default MAX_TYPED_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/assert-is-nan' ;\nimport isCollection from '@stdlib/assert-is-collection' ;\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer' ;\n\n\n// MAIN //\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @param {ArrayLike} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @throws {TypeError} must provide an array-like object\n* @throws {TypeError} `fromIndex` must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 5 );\n* // returns -1\n*\n* @example\n* // Using a `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* @example\n* // `fromIndex` which exceeds `array` length:\n* var arr = [ 1, 2, 3, 4, 2, 5 ];\n* var idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* @example\n* // Negative `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* var idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* @example\n* // Negative `fromIndex` exceeding input `array` length:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* @example\n* // Array-like objects:\n* var str = 'bebop';\n* var idx = indexOf( str, 'o' );\n* // returns 3\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array-like object. Value: `' + arr + '`.' );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. `fromIndex` must be an integer. Value: `' + fromIndex + '`.' );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\t// Check for `NaN`...\n\tif ( isnan( searchElement ) ) {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( isnan( arr[i] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nexport default indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.keys()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\treturn Object.keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.keys !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn ( nativeClass( value ) === '[object Arguments]' );\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from './main.js' ;\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment returns the expected internal class of the `arguments` object.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment behaves as expected\n*\n* @example\n* var bool = detect();\n* // returns <boolean>\n*/\nfunction detect() {\n\treturn isArguments( arguments );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @private\n* @name isEnumerableProperty\n* @type {Function}\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nvar isEnumerableProperty = Object.prototype.propertyIsEnumerable;\n\n\n// EXPORTS //\n\nexport default isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnum from './native.js' ;\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment has a bug where String indices are not detected as \"enumerable\" properties. Observed in Node v0.10.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment has the bug\n*/\nfunction detect() {\n\treturn !isEnum.call( 'beep', '0' );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isString from '@stdlib/assert-is-string' ;\nimport { isPrimitive as isnan } from '@stdlib/assert-is-nan' ;\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer' ;\nimport isEnum from './native.js' ;\nimport hasStringEnumBug from './has_string_enumerability_bug.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nfunction isEnumerableProperty( value, property ) {\n\tvar bool;\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\tbool = isEnum.call( value, property );\n\tif ( !bool && hasStringEnumBug && isString( value ) ) {\n\t\t// Note: we only check for indices, as properties attached to a `String` object are properly detected as enumerable above.\n\t\tproperty = +property;\n\t\treturn (\n\t\t\t!isnan( property ) &&\n\t\t\tisInteger( property ) &&\n\t\t\tproperty >= 0 &&\n\t\t\tproperty < value.length\n\t\t);\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `arguments` object.\n*\n* @module @stdlib/assert-is-arguments\n*\n* @example\n* import isArguments from '@stdlib/assert-is-arguments' ;\n*\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* bool = isArguments( [] );\n* // returns false\n*/\n\n// MODULES //\n\nimport hasArgumentsClass from './detect.js' ;\nimport main from './main.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar isArguments;\nif ( hasArgumentsClass ) {\n\tisArguments = main;\n} else {\n\tisArguments = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport isEnumerableProperty from '@stdlib/assert-is-enumerable-property' ;\nimport isArray from '@stdlib/assert-is-array' ;\nimport isInteger from '@stdlib/math-base-assert-is-integer' ;\nimport MAX_LENGTH from '@stdlib/constants-uint32-max' ;\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\t!isArray( value ) &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH &&\n\t\thasOwnProp( value, 'callee' ) &&\n\t\t!isEnumerableProperty( value, 'callee' )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants-uint32-max\n* @type {uinteger32}\n*\n* @example\n* import UINT32_MAX from '@stdlib/constants-uint32-max' ;\n* // returns 4294967295\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar UINT32_MAX = 4294967295;\n\n\n// EXPORTS //\n\nexport default UINT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from '@stdlib/assert-is-arguments' ;\nimport builtin from './builtin.js' ;\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tif ( isArguments( value ) ) {\n\t\treturn builtin( slice.call( value ) );\n\t}\n\treturn builtin( value );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nexport default noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert-is-enumerable-property' ;\nimport noop from '@stdlib/utils-noop' ;\n\n\n// MAIN //\n\n// Note: certain environments treat an object's prototype as enumerable, which, as a matter of convention, it shouldn't be...\nvar bool = isEnumerableProperty( noop, 'prototype' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert-is-enumerable-property' ;\n\n\n// VARIABLES //\n\nvar obj = {\n\t'toString': null\n};\n\n\n// MAIN //\n\n// Note: certain environments don't allow enumeration of overwritten properties which are considered non-enumerable...\nvar bool = !isEnumerableProperty( obj, 'toString' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value equals the prototype of its constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction isConstructorPrototype( value ) {\n\treturn ( value.constructor && value.constructor.prototype === value );\n}\n\n\n// EXPORTS //\n\nexport default isConstructorPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar w = ( typeof window === 'undefined' ) ? void 0 : window;\n\n\n// EXPORTS //\n\nexport default w;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport indexOf from '@stdlib/utils-index-of' ;\nimport typeOf from '@stdlib/utils-type-of' ;\nimport isConstructorPrototype from './is_constructor_prototype.js' ;\nimport EXCLUDED_KEYS from './excluded_keys.json' ;\nimport win from './window.js' ;\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Determines whether an environment throws when comparing to the prototype of a value's constructor (e.g., [IE9][1]).\n*\n* [1]: https://stackoverflow.com/questions/7688070/why-is-comparing-the-constructor-property-of-two-windows-unreliable\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment is buggy\n*/\nfunction check() {\n\tvar k;\n\tif ( typeOf( win ) === 'undefined' ) {\n\t\treturn false;\n\t}\n\tfor ( k in win ) { // eslint-disable-line guard-for-in\n\t\ttry {\n\t\t\tif (\n\t\t\t\tindexOf( EXCLUDED_KEYS, k ) === -1 &&\n\t\t\t\thasOwnProp( win, k ) &&\n\t\t\t\twin[ k ] !== null &&\n\t\t\t\ttypeOf( win[ k ] ) === 'object'\n\t\t\t) {\n\t\t\t\tisConstructorPrototype( win[ k ] );\n\t\t\t}\n\t\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\nbool = check();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof window !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasArgumentsBug from './has_arguments_bug.js' ;\nimport HAS_BUILTIN from './has_builtin.js' ;\nimport builtin from './builtin.js' ;\nimport wrapper from './builtin_wrapper.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @name keys\n* @type {Function}\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nvar keys;\nif ( HAS_BUILTIN ) {\n\tif ( hasArgumentsBug() ) {\n\t\tkeys = wrapper;\n\t} else {\n\t\tkeys = builtin;\n\t}\n} else {\n\tkeys = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from './builtin.js' ;\n\n\n// FUNCTIONS //\n\n/**\n* Tests the built-in `Object.keys()` implementation when provided `arguments`.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected number of keys\n*/\nfunction test() {\n\treturn ( keys( arguments ) || '' ).length !== 2;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether the built-in `Object.keys()` implementation supports providing `arguments` as an input value.\n*\n* ## Notes\n*\n* -   Safari 5.0 does **not** support `arguments` as an input value.\n*\n* @private\n* @returns {boolean} boolean indicating whether a built-in implementation supports `arguments`\n*/\nfunction check() {\n\treturn test( 1, 2 );\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert-is-object-like' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport isArguments from '@stdlib/assert-is-arguments' ;\nimport HAS_ENUM_PROTO_BUG from './has_enumerable_prototype_bug.js' ;\nimport HAS_NON_ENUM_PROPS_BUG from './has_non_enumerable_properties_bug.js' ;\nimport isConstructorPrototype from './is_constructor_prototype_wrapper.js' ;\nimport NON_ENUMERABLE from './non_enumerable.json' ;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tvar skipConstructor;\n\tvar skipPrototype;\n\tvar isFcn;\n\tvar out;\n\tvar k;\n\tvar p;\n\tvar i;\n\n\tout = [];\n\tif ( isArguments( value ) ) {\n\t\t// Account for environments which treat `arguments` differently...\n\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\tout.push( i.toString() );\n\t\t}\n\t\t// Note: yes, we are precluding the `arguments` array-like object from having other enumerable properties; however, this should (1) be very rare and (2) not be encouraged (e.g., doing something like `arguments.a = 'b'`; in certain engines directly manipulating the `arguments` value results in automatic de-optimization).\n\t\treturn out;\n\t}\n\tif ( typeof value === 'string' ) {\n\t\t// Account for environments which do not treat string character indices as \"own\" properties...\n\t\tif ( value.length > 0 && !hasOwnProp( value, '0' ) ) {\n\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\tout.push( i.toString() );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tisFcn = ( typeof value === 'function' );\n\t\tif ( isFcn === false && !isObjectLike( value ) ) {\n\t\t\treturn out;\n\t\t}\n\t\tskipPrototype = ( HAS_ENUM_PROTO_BUG && isFcn );\n\t}\n\tfor ( k in value ) {\n\t\tif ( !( skipPrototype && k === 'prototype' ) && hasOwnProp( value, k ) ) {\n\t\t\tout.push( String( k ) );\n\t\t}\n\t}\n\tif ( HAS_NON_ENUM_PROPS_BUG ) {\n\t\tskipConstructor = isConstructorPrototype( value );\n\t\tfor ( i = 0; i < NON_ENUMERABLE.length; i++ ) {\n\t\t\tp = NON_ENUMERABLE[ i ];\n\t\t\tif ( !( skipConstructor && p === 'constructor' ) && hasOwnProp( value, p ) ) {\n\t\t\t\tout.push( String( p ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasAutomationEqualityBug from './has_automation_equality_bug.js' ;\nimport isConstructorPrototype from './is_constructor_prototype.js' ;\nimport HAS_WINDOW from './has_window.js' ;\n\n\n// MAIN //\n\n/**\n* Wraps the test for constructor prototype equality to accommodate buggy environments (e.g., environments which throw when testing equality).\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction wrapper( value ) {\n\tif ( HAS_WINDOW === false && !hasAutomationEqualityBug ) {\n\t\treturn isConstructorPrototype( value );\n\t}\n\ttry {\n\t\treturn isConstructorPrototype( value );\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrapper;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyNames !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar propertyNames = Object.getOwnPropertyNames;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = getOwnPropertyNames( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction getOwnPropertyNames( value ) {\n\treturn propertyNames( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own enumerable and non-enumerable property names.\n*\n* @module @stdlib/utils-property-names\n*\n* @example\n* import getOwnPropertyNames from '@stdlib/utils-property-names' ;\n*\n* var keys = getOwnPropertyNames({\n*   'foo': 'bar',\n*   'beep': 'boop'\n* });\n* // e.g., returns [ 'foo', 'beep' ]\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js' ;\nimport builtin from './builtin.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from '@stdlib/utils-keys' ;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n* -   In environments lacking support for `Object.getOwnPropertyNames()`, property descriptors are unavailable, and thus all properties can be safely assumed to be enumerable. Hence, we can defer to calling `Object.keys`, which retrieves all own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = getOwnPropertyNames( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction getOwnPropertyNames( value ) {\n\treturn keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyDescriptor !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar propertyDescriptor = Object.getOwnPropertyDescriptor;\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tvar desc;\n\tif ( value === null || value === void 0 ) {\n\t\treturn null;\n\t}\n\tdesc = propertyDescriptor( value, property );\n\treturn ( desc === void 0 ) ? null : desc;\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a property descriptor for an object's own property.\n*\n* @module @stdlib/utils-property-descriptor\n*\n* @example\n* import getOwnPropertyDescriptor from '@stdlib/utils-property-descriptor' ;\n*\n* var obj = {\n*   'foo': 'bar',\n*   'beep': 'boop'\n* };\n*\n* var keys = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':'bar'}\n*/\n\n// MODULES //\n\nimport HAS_BUILTIN from './has_builtin.js' ;\nimport builtin from './builtin.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n* -   In environments lacking `Object.getOwnPropertyDescriptor()` support, property descriptors do not exist. In non-supporting environment, if an object has a provided property, this function returns a descriptor object equivalent to that returned in a supporting environment; otherwise, the function returns `null`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tif ( hasOwnProp( value, property ) ) {\n\t\treturn {\n\t\t\t'configurable': true,\n\t\t\t'enumerable': true,\n\t\t\t'writable': true,\n\t\t\t'value': value[ property ]\n\t\t};\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Buffer === 'function' ) ? Buffer : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = require( 'buffer' ).Buffer; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Buffer constructor.\n*\n* @module @stdlib/buffer-ctor\n*\n* @example\n* import ctor from '@stdlib/buffer-ctor' ;\n*\n* var b = new ctor( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nimport hasNodeBufferSupport from '@stdlib/assert-has-node-buffer-support' ;\nimport main from './buffer.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar ctor;\nif ( hasNodeBufferSupport() ) {\n\tctor = main;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isBuffer from '@stdlib/assert-is-buffer' ;\nimport GlobalBuffer from './buffer.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Buffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Buffer` support\n*\n* @example\n* var bool = hasNodeBufferSupport();\n* // returns <boolean>\n*/\nfunction hasNodeBufferSupport() {\n\tvar bool;\n\tvar b;\n\n\tif ( typeof GlobalBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tif ( typeof GlobalBuffer.from === 'function' ) {\n\t\t\tb = GlobalBuffer.from( [ 1, 2, 3, 4 ] );\n\t\t} else {\n\t\t\tb = new GlobalBuffer( [ 1, 2, 3, 4 ] ); // Note: this is deprecated behavior starting in Node v6 (see https://nodejs.org/api/buffer.html#buffer_new_buffer_array)\n\t\t}\n\t\tbool = (\n\t\t\tisBuffer( b ) &&\n\t\t\tb[ 0 ] === 1 &&\n\t\t\tb[ 1 ] === 2 &&\n\t\t\tb[ 2 ] === 3 &&\n\t\t\tb[ 3 ] === 4\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasNodeBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write (browser) polyfill\n\n// MAIN //\n\n/**\n* Buffer constructor.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy buffer data to a new `Buffer` instance.\n*\n* @module @stdlib/buffer-from-buffer\n*\n* @example\n* import fromArray from '@stdlib/buffer-from-array' ;\n* import copyBuffer from '@stdlib/buffer-from-buffer' ;\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = copyBuffer( b1 );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nimport hasFrom from './has_from.js' ;\nimport main from './main.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar copyBuffer;\nif ( hasFrom ) {\n\tcopyBuffer = main;\n} else {\n\tcopyBuffer = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default copyBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function' ;\nimport Buffer from '@stdlib/buffer-ctor' ;\n\n\n// MAIN //\n\nvar bool = isFunction( Buffer.from );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isBuffer from '@stdlib/assert-is-buffer' ;\nimport Buffer from '@stdlib/buffer-ctor' ;\n\n\n// MAIN //\n\n/**\n* Copies buffer data to a new `Buffer` instance.\n*\n* @param {Buffer} buffer - buffer from which to copy\n* @throws {TypeError} must provide a `Buffer` instance\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* import fromArray from '@stdlib/buffer-from-array' ;\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = fromBuffer( b1 );\n* // returns <Buffer>\n*/\nfunction fromBuffer( buffer ) {\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a Buffer. Value: `' + buffer + '`' );\n\t}\n\treturn Buffer.from( buffer );\n}\n\n\n// EXPORTS //\n\nexport default fromBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isBuffer from '@stdlib/assert-is-buffer' ;\nimport Buffer from '@stdlib/buffer-ctor' ;\n\n\n// MAIN //\n\n/**\n* Copies buffer data to a new `Buffer` instance.\n*\n* @param {Buffer} buffer - buffer from which to copy\n* @throws {TypeError} must provide a `Buffer` instance\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* import fromArray from '@stdlib/buffer-from-array' ;\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = fromBuffer( b1 );\n* // returns <Buffer>\n*/\nfunction fromBuffer( buffer ) {\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a Buffer. Value: `' + buffer + '`' );\n\t}\n\treturn new Buffer( buffer ); // eslint-disable-line no-buffer-constructor\n}\n\n\n// EXPORTS //\n\nexport default fromBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar hasInt8Array = ( typeof Int8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int8Array\n*\n* @example\n* var bool = isInt8Array( new Int8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt8Array( [] );\n* // returns false\n*/\nfunction isInt8Array( value ) {\n\treturn (\n\t\t( hasInt8Array && value instanceof Int8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInt8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 8-bit integer.\n*\n* @module @stdlib/constants-int8-max\n* @type {integer32}\n*\n* @example\n* import INT8_MAX from '@stdlib/constants-int8-max' ;\n* // returns 127\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* 2^{7} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 127\n*/\nvar INT8_MAX = 127|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT8_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int8Array === 'function' ) ? Int8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int8Array === 'function' ) ? Int8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array-int8\n*\n* @example\n* import ctor from '@stdlib/array-int8' ;\n*\n* var arr = new ctor( 10 );\n* // returns <Int8Array>\n*/\n\n// MODULES //\n\nimport hasInt8ArraySupport from '@stdlib/assert-has-int8array-support' ;\nimport builtin from './int8array.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInt8Array from '@stdlib/assert-is-int8array' ;\nimport INT8_MAX from '@stdlib/constants-int8-max' ;\nimport INT8_MIN from '@stdlib/constants-int8-min' ;\nimport GlobalInt8Array from './int8array.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Int8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int8Array` support\n*\n* @example\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt8Array( [ 1, 3.14, -3.14, INT8_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&     // truncation\n\t\t\tarr[ 2 ] === -3 &&    // truncation\n\t\t\tarr[ 3 ] === INT8_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 8-bit integer.\n*\n* @module @stdlib/constants-int8-min\n* @type {integer32}\n*\n* @example\n* import INT8_MIN from '@stdlib/constants-int8-min' ;\n* // returns -128\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* -(2^{7})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -128\n*/\nvar INT8_MIN = -128|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT8_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar hasUint8Array = ( typeof Uint8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/\nfunction isUint8Array( value ) {\n\treturn (\n\t\t( hasUint8Array && value instanceof Uint8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* @module @stdlib/constants-uint8-max\n* @type {integer32}\n*\n* @example\n* import UINT8_MAX from '@stdlib/constants-uint8-max' ;\n* // returns 255\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{8} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 255\n*/\nvar UINT8_MAX = 255|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default UINT8_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array-uint8\n*\n* @example\n* import ctor from '@stdlib/array-uint8' ;\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nimport hasUint8ArraySupport from '@stdlib/assert-has-uint8array-support' ;\nimport builtin from './uint8array.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint8Array from '@stdlib/assert-is-uint8array' ;\nimport UINT8_MAX from '@stdlib/constants-uint8-max' ;\nimport GlobalUint8Array from './uint8array.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT8_MAX+1, UINT8_MAX+2 ];\n\t\tarr = new GlobalUint8Array( arr );\n\t\tbool = (\n\t\t\tisUint8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&           // truncation\n\t\t\tarr[ 2 ] === UINT8_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&           // wrap around\n\t\t\tarr[ 4 ] === 1              // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar hasUint8ClampedArray = ( typeof Uint8ClampedArray === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8ClampedArray.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8ClampedArray\n*\n* @example\n* var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8ClampedArray( [] );\n* // returns false\n*/\nfunction isUint8ClampedArray( value ) {\n\treturn (\n\t\t( hasUint8ClampedArray && value instanceof Uint8ClampedArray ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8ClampedArray]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint8ClampedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @module @stdlib/array-uint8c\n*\n* @example\n* import ctor from '@stdlib/array-uint8c' ;\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8ClampedArray>\n*/\n\n// MODULES //\n\nimport hasUint8ClampedArraySupport from '@stdlib/assert-has-uint8clampedarray-support' ; // eslint-disable-line id-length\nimport builtin from './uint8clampedarray.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ClampedArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint8ClampedArray from '@stdlib/assert-is-uint8clampedarray' ;\nimport GlobalUint8ClampedArray from './uint8clampedarray.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8ClampedArray` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8ClampedArray` support\n*\n* @example\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ClampedArraySupport() { // eslint-disable-line id-length\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8ClampedArray !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalUint8ClampedArray( [ -1, 0, 1, 3.14, 4.99, 255, 256 ] );\n\t\tbool = (\n\t\t\tisUint8ClampedArray( arr ) &&\n\t\t\tarr[ 0 ] === 0 &&   // clamped\n\t\t\tarr[ 1 ] === 0 &&\n\t\t\tarr[ 2 ] === 1 &&\n\t\t\tarr[ 3 ] === 3 &&   // round to nearest\n\t\t\tarr[ 4 ] === 5 &&   // round to nearest\n\t\t\tarr[ 5 ] === 255 &&\n\t\t\tarr[ 6 ] === 255    // clamped\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar hasInt16Array = ( typeof Int16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int16Array\n*\n* @example\n* var bool = isInt16Array( new Int16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt16Array( [] );\n* // returns false\n*/\nfunction isInt16Array( value ) {\n\treturn (\n\t\t( hasInt16Array && value instanceof Int16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInt16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 16-bit integer.\n*\n* @module @stdlib/constants-int16-max\n* @type {integer32}\n*\n* @example\n* import INT16_MAX from '@stdlib/constants-int16-max' ;\n* // returns 32767\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{15} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 32767\n*/\nvar INT16_MAX = 32767|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT16_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int16Array === 'function' ) ? Int16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int16Array === 'function' ) ? Int16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array-int16\n*\n* @example\n* import ctor from '@stdlib/array-int16' ;\n*\n* var arr = new ctor( 10 );\n* // returns <Int16Array>\n*/\n\n// MODULES //\n\nimport hasInt16ArraySupport from '@stdlib/assert-has-int16array-support' ;\nimport builtin from './int16array.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInt16Array from '@stdlib/assert-is-int16array' ;\nimport INT16_MAX from '@stdlib/constants-int16-max' ;\nimport INT16_MIN from '@stdlib/constants-int16-min' ;\nimport GlobalInt16Array from './int16array.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Int16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int16Array` support\n*\n* @example\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt16Array( [ 1, 3.14, -3.14, INT16_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT16_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 16-bit integer.\n*\n* @module @stdlib/constants-int16-min\n* @type {integer32}\n*\n* @example\n* import INT16_MIN from '@stdlib/constants-int16-min' ;\n* // returns -32768\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{15})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 1000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -32768\n*/\nvar INT16_MIN = -32768|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT16_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar hasUint16Array = ( typeof Uint16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/\nfunction isUint16Array( value ) {\n\treturn (\n\t\t( hasUint16Array && value instanceof Uint16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* @module @stdlib/constants-uint16-max\n* @type {integer32}\n*\n* @example\n* import UINT16_MAX from '@stdlib/constants-uint16-max' ;\n* // returns 65535\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{16} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 1111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 65535\n*/\nvar UINT16_MAX = 65535|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default UINT16_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array-uint16\n*\n* @example\n* import ctor from '@stdlib/array-uint16' ;\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n\n// MODULES //\n\nimport hasUint16ArraySupport from '@stdlib/assert-has-uint16array-support' ;\nimport builtin from './uint16array.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint16Array from '@stdlib/assert-is-uint16array' ;\nimport UINT16_MAX from '@stdlib/constants-uint16-max' ;\nimport GlobalUint16Array from './uint16array.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT16_MAX+1, UINT16_MAX+2 ];\n\t\tarr = new GlobalUint16Array( arr );\n\t\tbool = (\n\t\t\tisUint16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT16_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar hasInt32Array = ( typeof Int32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int32Array\n*\n* @example\n* var bool = isInt32Array( new Int32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt32Array( [] );\n* // returns false\n*/\nfunction isInt32Array( value ) {\n\treturn (\n\t\t( hasInt32Array && value instanceof Int32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInt32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum signed 32-bit integer.\n*\n* @module @stdlib/constants-int32-max\n* @type {integer32}\n*\n* @example\n* import INT32_MAX from '@stdlib/constants-int32-max' ;\n* // returns 2147483647\n*/\n\n\n// MAIN //\n\n/**\n* Maximum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{31} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 01111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 2147483647\n*/\nvar INT32_MAX = 2147483647|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int32Array === 'function' ) ? Int32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int32Array === 'function' ) ? Int32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array-int32\n*\n* @example\n* import ctor from '@stdlib/array-int32' ;\n*\n* var arr = new ctor( 10 );\n* // returns <Int32Array>\n*/\n\n// MODULES //\n\nimport hasInt32ArraySupport from '@stdlib/assert-has-int32array-support' ;\nimport builtin from './int32array.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInt32Array from '@stdlib/assert-is-int32array' ;\nimport INT32_MAX from '@stdlib/constants-int32-max' ;\nimport INT32_MIN from '@stdlib/constants-int32-min' ;\nimport GlobalInt32Array from './int32array.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Int32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int32Array` support\n*\n* @example\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt32Array( [ 1, 3.14, -3.14, INT32_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT32_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 32-bit integer.\n*\n* @module @stdlib/constants-int32-min\n* @type {integer32}\n*\n* @example\n* import INT32_MIN from '@stdlib/constants-int32-min' ;\n* // returns -2147483648\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{31})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -2147483648\n*/\nvar INT32_MIN = -2147483648|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default INT32_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/\nfunction isUint32Array( value ) {\n\treturn (\n\t\t( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array-uint32\n*\n* @example\n* import ctor from '@stdlib/array-uint32' ;\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nimport hasUint32ArraySupport from '@stdlib/assert-has-uint32array-support' ;\nimport builtin from './uint32array.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isUint32Array from '@stdlib/assert-is-uint32array' ;\nimport UINT32_MAX from '@stdlib/constants-uint32-max' ;\nimport GlobalUint32Array from './uint32array.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];\n\t\tarr = new GlobalUint32Array( arr );\n\t\tbool = (\n\t\t\tisUint32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar hasFloat32Array = ( typeof Float32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float32Array\n*\n* @example\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat32Array( [] );\n* // returns false\n*/\nfunction isFloat32Array( value ) {\n\treturn (\n\t\t( hasFloat32Array && value instanceof Float32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isFloat32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float32Array === 'function' ) ? Float32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float32Array === 'function' ) ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of single-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array-float32\n*\n* @example\n* import ctor from '@stdlib/array-float32' ;\n*\n* var arr = new ctor( 10 );\n* // returns <Float32Array>\n*/\n\n// MODULES //\n\nimport hasFloat32ArraySupport from '@stdlib/assert-has-float32array-support' ;\nimport builtin from './float32array.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFloat32Array from '@stdlib/assert-is-float32array' ;\nimport PINF from '@stdlib/constants-float64-pinf' ;\nimport GlobalFloat32Array from './float32array.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Float32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float32Array` support\n*\n* @example\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat32Array( [ 1.0, 3.14, -3.14, 5.0e40 ] );\n\t\tbool = (\n\t\t\tisFloat32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.140000104904175 &&\n\t\t\tarr[ 2 ] === -3.140000104904175 &&\n\t\t\tarr[ 3 ] === PINF\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\nfunction isFloat64Array( value ) {\n\treturn (\n\t\t( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFloat64Array from '@stdlib/assert-is-float64array' ;\nimport GlobalFloat64Array from './float64array.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat64ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );\n\t\tbool = (\n\t\t\tisFloat64Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.14 &&\n\t\t\tarr[ 2 ] === -3.14 &&\n\t\t\tarr[ 3 ] !== arr[ 3 ]\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array-float64\n*\n* @example\n* import ctor from '@stdlib/array-float64' ;\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nimport hasFloat64ArraySupport from '@stdlib/assert-has-float64array-support' ;\nimport builtin from './float64array.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from '@stdlib/array-int8' ;\nimport Uint8Array from '@stdlib/array-uint8' ;\nimport Uint8ClampedArray from '@stdlib/array-uint8c' ;\nimport Int16Array from '@stdlib/array-int16' ;\nimport Uint16Array from '@stdlib/array-uint16' ;\nimport Int32Array from '@stdlib/array-int32' ;\nimport Uint32Array from '@stdlib/array-uint32' ;\nimport Float32Array from '@stdlib/array-float32' ;\nimport Float64Array from '@stdlib/array-float64' ;\n\n\n// VARIABLES //\n\nvar hash;\n\n\n// FUNCTIONS //\n\n/**\n* Copies an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - array to copy\n* @returns {Int8Array} new array\n*/\nfunction int8array( arr ) {\n\treturn new Int8Array( arr );\n}\n\n/**\n* Copies a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - array to copy\n* @returns {Uint8Array} new array\n*/\nfunction uint8array( arr ) {\n\treturn new Uint8Array( arr );\n}\n\n/**\n* Copies a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - array to copy\n* @returns {Uint8ClampedArray} new array\n*/\nfunction uint8clampedarray( arr ) {\n\treturn new Uint8ClampedArray( arr );\n}\n\n/**\n* Copies an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - array to copy\n* @returns {Int16Array} new array\n*/\nfunction int16array( arr ) {\n\treturn new Int16Array( arr );\n}\n\n/**\n* Copies a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - array to copy\n* @returns {Uint16Array} new array\n*/\nfunction uint16array( arr ) {\n\treturn new Uint16Array( arr );\n}\n\n/**\n* Copies an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - array to copy\n* @returns {Int32Array} new array\n*/\nfunction int32array( arr ) {\n\treturn new Int32Array( arr );\n}\n\n/**\n* Copies a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - array to copy\n* @returns {Uint32Array} new array\n*/\nfunction uint32array( arr ) {\n\treturn new Uint32Array( arr );\n}\n\n/**\n* Copies a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - array to copy\n* @returns {Float32Array} new array\n*/\nfunction float32array( arr ) {\n\treturn new Float32Array( arr );\n}\n\n/**\n* Copies a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - array to copy\n* @returns {Float64Array} new array\n*/\nfunction float64array( arr ) {\n\treturn new Float64Array( arr );\n}\n\n/**\n* Returns a hash of functions for copying typed arrays.\n*\n* @private\n* @returns {Object} function hash\n*/\nfunction typedarrays() {\n\tvar out = {\n\t\t'int8array': int8array,\n\t\t'uint8array': uint8array,\n\t\t'uint8clampedarray': uint8clampedarray,\n\t\t'int16array': int16array,\n\t\t'uint16array': uint16array,\n\t\t'int32array': int32array,\n\t\t'uint32array': uint32array,\n\t\t'float32array': float32array,\n\t\t'float64array': float64array\n\t};\n\treturn out;\n}\n\n\n// MAIN //\n\nhash = typedarrays();\n\n\n// EXPORTS //\n\nexport default hash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport isArray from '@stdlib/assert-is-array' ;\nimport isBuffer from '@stdlib/assert-is-buffer' ;\nimport isError from '@stdlib/assert-is-error' ;\nimport typeOf from '@stdlib/utils-type-of' ;\nimport regexp from '@stdlib/utils-regexp-from-string' ;\nimport indexOf from '@stdlib/utils-index-of' ;\nimport objectKeys from '@stdlib/utils-keys' ;\nimport propertyNames from '@stdlib/utils-property-names' ;\nimport propertyDescriptor from '@stdlib/utils-property-descriptor' ;\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of' ;\nimport defineProperty from '@stdlib/utils-define-property' ;\nimport copyBuffer from '@stdlib/buffer-from-buffer' ;\nimport typedArrays from './typed_arrays.js' ;\n\n\n// FUNCTIONS //\n\n/**\n* Clones a class instance.\n*\n* ## Notes\n*\n* -   This should **only** be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered **fragile**.\n* -   The function is greedy, disregarding the notion of a `level`. Instead, the function deep copies all properties, as we assume the concept of `level` applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache;\n\tvar names;\n\tvar name;\n\tvar refs;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tcache = [];\n\trefs = [];\n\n\tref = Object.create( getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = propertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = propertyDescriptor( val, name );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n}\n\n/**\n* Copies an error object.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - error to copy\n* @returns {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error copy\n*\n* @example\n* var err1 = new TypeError( 'beep' );\n*\n* var err2 = copyError( err1 );\n* // returns <TypeError>\n*/\nfunction copyError( error ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar keys;\n\tvar desc;\n\tvar tmp;\n\tvar key;\n\tvar err;\n\tvar i;\n\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\tcache.push( error );\n\trefs.push( err );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = propertyDescriptor( error, key );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( error[ key ] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( error[ key ], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( err, key, desc );\n\t}\n\treturn err;\n}\n\n\n// MAIN //\n\n/**\n* Recursively performs a deep copy of an input object.\n*\n* @private\n* @param {*} val - value to copy\n* @param {(Array|Object)} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {NonNegativeInteger} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel -= 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn copyBuffer( val );\n\t}\n\tif ( isError( val ) ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeOf( val );\n\n\tif ( name === 'date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'regexp' ) {\n\t\treturn regexp( val.toString() );\n\t}\n\tif ( name === 'set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'string' ||\n\t\tname === 'boolean' ||\n\t\tname === 'number'\n\t) {\n\t\t// If provided an `Object`, return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'array' &&\n\t\tname !== 'object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeOf( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'array' &&\n\t\t\t\t\tname !== 'object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'object' ) {\n\t\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray( x ) ) ? new Array( x.length ) : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else if ( name === 'array' ) {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tcopy[ key ] = val[ key ];\n\t\t}\n\t} else {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\tdefineProperty( copy, key, desc );\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n}\n\n\n// EXPORTS //\n\nexport default deepCopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport reRegExp from '@stdlib/regexp-regexp' ;\nimport format from '@stdlib/string-format' ;\n\n\n// MAIN //\n\n/**\n* Parses a regular expression string and returns a new regular expression.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} must provide a regular expression string\n* @returns {(RegExp|null)} regular expression or null\n*\n* @example\n* var re = reFromString( '/beep/' );\n* // returns /beep/\n*/\nfunction reFromString( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Capture the regular expression pattern and any flags:\n\tstr = reRegExp().exec( str );\n\n\t// Create a new regular expression:\n\treturn ( str ) ? new RegExp( str[1], str[2] ) : null;\n}\n\n\n// EXPORTS //\n\nexport default reFromString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert-is-array' ;\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer' ;\nimport PINF from '@stdlib/constants-float64-pinf' ;\nimport deepCopy from './deep_copy.js' ;\n\n\n// MAIN //\n\n/**\n* Copies or deep clones a value to an arbitrary depth.\n*\n* @param {*} value - value to copy\n* @param {NonNegativeInteger} [level=+infinity] - copy depth\n* @throws {TypeError} `level` must be a nonnegative integer\n* @returns {*} value copy\n*\n* @example\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\nfunction copy( value, level ) {\n\tvar out;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. `level` must be a nonnegative integer. Value: `' + level + '`.' );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tout = ( isArray( value ) ) ? new Array( value.length ) : {};\n\treturn deepCopy( value, out, [value], [out], level );\n}\n\n\n// EXPORTS //\n\nexport default copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests that a value is a valid constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var ctor = function ctor() {};\n*\n* var err = validate( ctor );\n* // returns null\n*\n* err = validate( null );\n* // returns <TypeError>\n*/\nfunction validate( value ) {\n\tvar type = typeof value;\n\tif (\n\t\tvalue === null ||\n\t\t(type !== 'object' && type !== 'function')\n\t) {\n\t\treturn new TypeError( 'invalid argument. A provided constructor must be either an object (except null) or a function. Value: `'+value+'`.' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default Object.create;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Ctor() {\n\t// Empty...\n}\n\n\n// MAIN //\n\n/**\n* An `Object.create` shim for older JavaScript engines.\n*\n* @private\n* @param {Object} proto - prototype\n* @returns {Object} created object\n*\n* @example\n* var obj = createObject( Object.prototype );\n* // returns {}\n*/\nfunction createObject( proto ) {\n\tCtor.prototype = proto;\n\treturn new Ctor();\n}\n\n\n// EXPORTS //\n\nexport default createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport builtin from './native.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar createObject;\nif ( typeof builtin === 'function' ) {\n\tcreateObject = builtin;\n} else {\n\tcreateObject = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property' ;\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* import objectKeys from '@stdlib/utils-keys' ;\n*\n* var obj = {};\n*\n* setNonEnumerableProperty( obj, 'foo', 'bar' );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*\n* var keys = objectKeys( obj );\n* // returns []\n*/\nfunction setNonEnumerableProperty( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property' ;\n\n\n// MAIN //\n\n/**\n* Defines a read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnlyAccessor( obj, prop, getter ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property' ;\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property' ;\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setNonEnumerableReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setNonEnumerableReadWriteAccessor( obj, prop, getter, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert-is-array' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-object' ;\nimport isFunction from '@stdlib/assert-is-function' ;\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Creates a function which always returns the same value.\n*\n* @param {*} [value] - value to always return\n* @returns {Function} constant function\n*\n* @example\n* var fcn = wrap( 3.14 );\n*\n* var v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*\n* v = fcn();\n* // returns 3.14\n*/\nfunction wrap( value ) {\n\treturn constantFunction;\n\n\t/**\n\t* Constant function.\n\t*\n\t* @private\n\t* @returns {*} constant value\n\t*/\n\tfunction constantFunction() {\n\t\treturn value;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from '@stdlib/assert-is-integer' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert-is-positive-integer\n*\n* @example\n* import isPositiveInteger from '@stdlib/assert-is-positive-integer' ;\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer' ;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isPositiveInteger } from '@stdlib/assert-is-positive-integer' ;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isPositiveInteger from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( isPositiveInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants-float64-pinf' ;\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is positive zero.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is positive zero\n*\n* @example\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveZero( -0.0 );\n* // returns false\n*/\nfunction isPositiveZero( x ) {\n\treturn (x === 0.0 && 1.0/x === PINF);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\n// Define a mask for the least significant 16 bits (low word): 65535 => 0x0000ffff => 00000000000000001111111111111111\nvar LOW_WORD_MASK = 0x0000ffff>>>0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Performs C-like multiplication of two unsigned 32-bit integers.\n*\n* ## Method\n*\n* -   To emulate C-like multiplication without the aid of 64-bit integers, we recognize that a 32-bit integer can be split into two 16-bit words\n*\n*     ```tex\n*     a = w_h*2^{16} + w_l\n*     ```\n*\n*     where \\\\( w_h \\\\) is the most significant 16 bits and \\\\( w_l \\\\) is the least significant 16 bits. For example, consider the maximum unsigned 32-bit integer \\\\( 2^{32}-1 \\\\)\n*\n*     ```binarystring\n*     11111111111111111111111111111111\n*     ```\n*\n*     The 16-bit high word is then\n*\n*     ```binarystring\n*     1111111111111111\n*     ```\n*\n*     and the 16-bit low word\n*\n*     ```binarystring\n*     1111111111111111\n*     ```\n*\n*     If we cast the high word to 32-bit precision and multiply by \\\\( 2^{16} \\\\) (equivalent to a 16-bit left shift), then the bit sequence is\n*\n*     ```binarystring\n*     11111111111111110000000000000000\n*     ```\n*\n*     Similarly, upon casting the low word to 32-bit precision, the bit sequence is\n*\n*     ```binarystring\n*     00000000000000001111111111111111\n*     ```\n*\n*     From the rules of binary addition, we recognize that adding the two 32-bit values for the high and low words will return our original value \\\\( 2^{32}-1 \\\\).\n*\n* -   Accordingly, the multiplication of two 32-bit integers can be expressed\n*\n*     ```tex\n*     \\begin{align*}\n*     a \\cdot b &= ( a_h \\cdot 2^{16} + a_l) \\cdot ( b_h \\cdot 2^{16} + b_l) \\\\\n*           &= a_l \\cdot b_l + a_h \\cdot b_l \\cdot 2^{16} + a_l \\cdot b_h \\cdot 2^{16} + (a_h \\cdot b_h) \\cdot 2^{32} \\\\\n*           &= a_l \\cdot b_l + (a_h \\cdot b_l + a_l \\cdot b_h) \\cdot 2^{16} + (a_h \\cdot b_h) \\cdot 2^{32}\n*     \\end{align*}\n*     ```\n*\n* -   We note that multiplying (dividing) an integer by \\\\( 2^n \\\\) is equivalent to performing a left (right) shift of \\\\( n \\\\) bits.\n*\n* -   Further, as we want to return an integer of the same precision, for a 32-bit integer, the return value will be modulo \\\\( 2^{32} \\\\). Stated another way, we only care about the low word of a 64-bit result.\n*\n* -   Accordingly, the last term, being evenly divisible by \\\\( 2^{32} \\\\), drops from the equation leaving the remaining two terms as the remainder.\n*\n*     ```tex\n*     a \\cdot b = a_l \\cdot b_l + (a_h \\cdot b_l + a_l \\cdot b_h) << 16\n*     ```\n*\n* -   Lastly, the second term in the above equation contributes to the middle bits and may cause the product to \"overflow\". However, we can disregard (`>>>0`) overflow bits due to modulo arithmetic, as discussed earlier with regard to the term involving the partial product of high words.\n*\n*\n* @param {uinteger32} a - integer\n* @param {uinteger32} b - integer\n* @returns {uinteger32} product\n*\n* @example\n* var v = umul( 10>>>0, 4>>>0 );\n* // returns 40\n*/\nfunction umul( a, b ) {\n\tvar lbits;\n\tvar mbits;\n\tvar ha;\n\tvar hb;\n\tvar la;\n\tvar lb;\n\n\ta >>>= 0; // asm type annotation\n\tb >>>= 0; // asm type annotation\n\n\t// Isolate the most significant 16-bits:\n\tha = ( a>>>16 )>>>0; // asm type annotation\n\thb = ( b>>>16 )>>>0; // asm type annotation\n\n\t// Isolate the least significant 16-bits:\n\tla = ( a&LOW_WORD_MASK )>>>0; // asm type annotation\n\tlb = ( b&LOW_WORD_MASK )>>>0; // asm type annotation\n\n\t// Compute partial sums:\n\tlbits = ( la*lb )>>>0; // asm type annotation; no integer overflow possible\n\tmbits = ( ((ha*lb) + (la*hb))<<16 )>>>0; // asm type annotation; possible integer overflow\n\n\t// The final `>>>0` converts the intermediate sum to an unsigned integer (possible integer overflow during sum):\n\treturn ( lbits + mbits )>>>0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nexport default umul;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x[ idx ];\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element using an accessor method.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x.get( idx );\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx[ idx ] = value;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element using an accessor method.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx.set( value, idx );\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getIndexed from './getter.js' ;\nimport getAccessor from './getter.accessor.js' ;\nimport setIndexed from './setter.js' ;\nimport setAccessor from './setter.accessor.js' ;\n\n\n// MAIN //\n\n/**\n* Converts an array-like to an object likely to have the same \"shape\".\n*\n* ## Notes\n*\n* -   This function is intended as a potential performance optimization. In V8, for example, even if two objects share common properties, if those properties were added in different orders or if one object has additional properties not shared by the other object, then those objects will have different \"hidden\" classes. If a function is provided many objects having different \"shapes\", some JavaScript VMs (e.g., V8) will consider the function \"megamorphic\" and fail to perform various runtime optimizations. Accordingly, the intent of this function is to standardize the \"shape\" of the object holding array meta data to ensure that internal functions operating on arrays are provided consistent argument \"shapes\".\n*\n* -   The returned object has the following properties:\n*\n*     -   **data**: data buffer.\n*     -   **accessors**: `boolean` indicating whether the data buffer uses accessors for getting and setting elements.\n*     -   **getter**: accessor for retrieving a data buffer element.\n*     -   **setter**: accessor for setting a data buffer element.\n*\n* @param {Collection} x - array-like object\n* @returns {Object} object containing array meta data\n*\n* @example\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\nfunction arraylike2object( x ) {\n\tvar bool = Boolean( x.get && x.set ); // Note: intentional weak check, as we don't explicitly check for functions for (perhaps marginally) better performance.\n\treturn {\n\t\t'data': x,\n\t\t'accessors': bool,\n\t\t'getter': ( bool ) ? getAccessor : getIndexed,\n\t\t'setter': ( bool ) ? setAccessor : setIndexed\n\t};\n}\n\n\n// EXPORTS //\n\nexport default arraylike2object;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Function} x.get - getter\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Object} y - output array object\n* @param {Collection} y.data - output array data\n* @param {Function} y.set - setter\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Object} output array object\n*\n* @example\n* import Complex64Array from '@stdlib/array-complex64' ;\n* import Complex64 from '@stdlib/complex-float32' ;\n* import reinterpret64 from '@stdlib/strided-base-reinterpret-complex64' ;\n*\n* function setter( data, idx, value ) {\n*     data.set( value, idx );\n* }\n*\n* function getter( data, idx ) {\n*     return data.get( idx );\n* }\n*\n* var x = {\n*     'data': new Complex64Array( [ 1.0, 2.0, 3.0, 4.0 ] ),\n*     'setter': setter,\n*     'getter': getter\n* };\n*\n* var y = {\n*     'data': new Complex64Array( [ 5.0, 6.0, 7.0, 8.0 ] ),\n*     'setter': setter,\n*     'getter': getter\n* };\n*\n* gcopy( x.data.length, x, 1, 0, y, 1, 0 );\n*\n* var view = reinterpret64( y.data, 0 );\n* // view => <Float32Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/\nfunction gcopy( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar xbuf;\n\tvar ybuf;\n\tvar set;\n\tvar get;\n\tvar ix;\n\tvar iy;\n\tvar i;\n\n\t// Cache references to array data:\n\txbuf = x.data;\n\tybuf = y.data;\n\n\t// Cache a reference to the element accessors:\n\tget = x.getter;\n\tset = y.setter;\n\n\tix = offsetX;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tset( ybuf, iy, get( xbuf, ix ) );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nexport default gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object' ;\nimport accessors from './accessors.js' ;\n\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of values to copy\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Collection} y - destination array\n* @param {integer} strideY - `y` stride length\n* @returns {Collection} `y`\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, y, 1 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction gcopy( N, x, strideX, y, strideY ) {\n\tvar ix;\n\tvar iy;\n\tvar ox;\n\tvar oy;\n\tvar m;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tox = arraylike2object( x );\n\toy = arraylike2object( y );\n\tif ( ox.accessors || oy.accessors ) {\n\t\tif ( strideX < 0 ) {\n\t\t\tix = (1-N) * strideX;\n\t\t} else {\n\t\t\tix = 0;\n\t\t}\n\t\tif ( strideY < 0 ) {\n\t\t\tiy = (1-N) * strideY;\n\t\t} else {\n\t\t\tiy = 0;\n\t\t}\n\t\taccessors( N, ox, strideX, ix, oy, strideY, iy );\n\t\treturn oy.data;\n\t}\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ i ] = x[ i ];\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ i ] = x[ i ];\n\t\t\ty[ i+1 ] = x[ i+1 ];\n\t\t\ty[ i+2 ] = x[ i+2 ];\n\t\t\ty[ i+3 ] = x[ i+3 ];\n\t\t\ty[ i+4 ] = x[ i+4 ];\n\t\t\ty[ i+5 ] = x[ i+5 ];\n\t\t\ty[ i+6 ] = x[ i+6 ];\n\t\t\ty[ i+7 ] = x[ i+7 ];\n\t\t}\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = x[ ix ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Dummy function.\n*\n* @private\n*/\nfunction foo() {\n\t// No-op...\n}\n\n\n// EXPORTS //\n\nexport default foo;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to copy values from `x` into `y`.\n*\n* @module @stdlib/blas-base-gcopy\n*\n* @example\n* import gcopy from '@stdlib/blas-base-gcopy' ;\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, y, 1 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* @example\n* import gcopy from '@stdlib/blas-base-gcopy' ;\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy.ndarray( x.length, x, 1, 0, y, 1, 0 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport ndarray from './ndarray.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object' ;\nimport accessors from './accessors.js' ;\n\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of values to copy\n* @param {Collection} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Collection} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Collection} `y`\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var y = [ 6.0, 7.0, 8.0, 9.0, 10.0 ];\n*\n* gcopy( x.length, x, 1, 0, y, 1, 0 );\n* // y => [ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction gcopy( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar ix;\n\tvar iy;\n\tvar ox;\n\tvar oy;\n\tvar m;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tox = arraylike2object( x );\n\toy = arraylike2object( y );\n\tif ( ox.accessors || oy.accessors ) {\n\t\taccessors( N, ox, strideX, offsetX, oy, strideY, offsetY );\n\t\treturn oy.data;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ iy ] = x[ ix ];\n\t\t\t\tix += strideX;\n\t\t\t\tiy += strideY;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ iy ] = x[ ix ];\n\t\t\ty[ iy+1 ] = x[ ix+1 ];\n\t\t\ty[ iy+2 ] = x[ ix+2 ];\n\t\t\ty[ iy+3 ] = x[ ix+3 ];\n\t\t\ty[ iy+4 ] = x[ ix+4 ];\n\t\t\ty[ iy+5 ] = x[ ix+5 ];\n\t\t\ty[ iy+6 ] = x[ ix+6 ];\n\t\t\ty[ iy+7 ] = x[ ix+7 ];\n\t\t\tix += M;\n\t\t\tiy += M;\n\t\t}\n\t\treturn y;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = x[ ix ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default gcopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function' ;\nimport hasFunctionNameSupport from '@stdlib/assert-has-function-name-support' ;\nimport { REGEXP as RE } from '@stdlib/regexp-function-name' ;\n\n\n// VARIABLES //\n\nvar isFunctionNameSupported = hasFunctionNameSupport();\n\n\n// MAIN //\n\n/**\n* Returns the name of a function.\n*\n* @param {Function} fcn - input function\n* @throws {TypeError} must provide a function\n* @returns {string} function name\n*\n* @example\n* var v = functionName( Math.sqrt );\n* // returns 'sqrt'\n*\n* @example\n* var v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* @example\n* var v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*\n* @example\n* var v = functionName( String );\n* // returns 'String'\n*/\nfunction functionName( fcn ) {\n\t// TODO: add support for generator functions?\n\tif ( isFunction( fcn ) === false ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a function. Value: `' + fcn + '`.' );\n\t}\n\tif ( isFunctionNameSupported ) {\n\t\treturn fcn.name;\n\t}\n\treturn RE.exec( fcn.toString() )[ 1 ];\n}\n\n\n// EXPORTS //\n\nexport default functionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport foo from './foo.js' ;\n\n\n// MAIN //\n\n/**\n* Tests for native function `name` support.\n*\n* @returns {boolean} boolean indicating if an environment has function `name` support\n*\n* @example\n* var bool = hasFunctionNameSupport();\n* // returns <boolean>\n*/\nfunction hasFunctionNameSupport() {\n\treturn ( foo.name === 'foo' );\n}\n\n\n// EXPORTS //\n\nexport default hasFunctionNameSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from '@stdlib/array-int8' ;\nimport Uint8Array from '@stdlib/array-uint8' ;\nimport Uint8ClampedArray from '@stdlib/array-uint8c' ;\nimport Int16Array from '@stdlib/array-int16' ;\nimport Uint16Array from '@stdlib/array-uint16' ;\nimport Int32Array from '@stdlib/array-int32' ;\nimport Uint32Array from '@stdlib/array-uint32' ;\nimport Float32Array from '@stdlib/array-float32' ;\nimport Float64Array from '@stdlib/array-float64' ;\n\n\n// MAIN //\n\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from '@stdlib/utils-constructor-name' ;\nimport fcnName from '@stdlib/utils-function-name' ;\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of' ;\nimport hasFloat64ArraySupport from '@stdlib/assert-has-float64array-support' ;\nimport Float64Array from '@stdlib/array-float64' ;\nimport CTORS from './ctors.js' ;\nimport NAMES from './names.json' ;\n\n\n// VARIABLES //\n\n// Abstract `TypedArray` class:\nvar TypedArray = ( hasFloat64ArraySupport() ) ? getPrototypeOf( Float64Array ) : Dummy; // eslint-disable-line max-len\n\n// Ensure abstract typed array class has expected name:\nTypedArray = ( fcnName( TypedArray ) === 'TypedArray' ) ? TypedArray : Dummy;\n\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Dummy() {} // eslint-disable-line no-empty-function\n\n\n// MAIN //\n\n/**\n* Tests if a value is a typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a typed array\n*\n* @example\n* import Int8Array from '@stdlib/array-int8' ;\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\nfunction isTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for the abstract class...\n\tif ( value instanceof TypedArray ) {\n\t\treturn true;\n\t}\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math-base-assert-is-integer' ;\nimport MAX_LENGTH from '@stdlib/constants-array-max-array-length' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\nfunction isArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants-array-max-array-length\n*\n* @example\n* import MAX_ARRAY_LENGTH from '@stdlib/constants-array-max-array-length' ;\n* // returns 4294967295\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar MAX_ARRAY_LENGTH = 4294967295>>>0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MAX_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils-native-class' ;\n\n\n// VARIABLES //\n\nvar hasArrayBuffer = ( typeof ArrayBuffer === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an ArrayBuffer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an ArrayBuffer\n*\n* @example\n* import ArrayBuffer from '@stdlib/array-buffer' ;\n*\n* var bool = isArrayBuffer( new ArrayBuffer( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isArrayBuffer( [] );\n* // returns false\n*/\nfunction isArrayBuffer( value ) {\n\treturn (\n\t\t( hasArrayBuffer && value instanceof ArrayBuffer ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object ArrayBuffer]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\nimport defineProperty from '@stdlib/utils-define-property' ;\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport toStr from './tostring.js' ;\nimport toJSON from './tojson.js' ;\n\n\n// MAIN //\n\n/**\n* 128-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number primitive\n* @throws {TypeError} imaginary component must be a number primitive\n* @returns {Complex128} 128-bit complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*/\nfunction Complex128( real, imag ) {\n\tif ( !( this instanceof Complex128 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( 'invalid argument. Real component must be a number primitive. Value: `'+real+'`.' );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( 'invalid argument. Imaginary component must be a number primitive. Value: `'+imag+'`.' );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': real\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': imag\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex128.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128.prototype, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 16\n*/\nsetReadOnly( Complex128.prototype, 'byteLength', 16 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex128.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex128` instance.\n*\n*\n* @name toJSON\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex128', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex128.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nexport default Complex128;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex128';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar fround = ( typeof Math.fround === 'function' ) ? Math.fround : null; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default fround;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float32Array from '@stdlib/array-float32' ;\n\n\n// VARIABLES //\n\nvar FLOAT32_VIEW = new Float32Array( 1 );\n\n\n// MAIN //\n\n/**\n* Converts a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @param {number} x - double-precision floating-point number\n* @returns {number} nearest single-precision floating-point number\n*\n* @example\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\nfunction float64ToFloat32( x ) {\n\tFLOAT32_VIEW[ 0 ] = x;\n\treturn FLOAT32_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @module @stdlib/number-float64-base-to-float32\n*\n* @example\n* import float64ToFloat32 from '@stdlib/number-float64-base-to-float32' ;\n*\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\n\n// MODULES //\n\nimport builtin from './main.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar float64ToFloat32;\nif ( typeof builtin === 'function' ) {\n\tfloat64ToFloat32 = builtin;\n} else {\n\tfloat64ToFloat32 = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\nimport defineProperty from '@stdlib/utils-define-property' ;\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport float64ToFloat32 from '@stdlib/number-float64-base-to-float32' ;\nimport toStr from './tostring.js' ;\nimport toJSON from './tojson.js' ;\n\n\n// MAIN //\n\n/**\n* 64-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number primitive\n* @throws {TypeError} imaginary component must be a number primitive\n* @returns {Complex64} 64-bit complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n* // returns <Complex64>\n*/\nfunction Complex64( real, imag ) {\n\tif ( !( this instanceof Complex64 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( 'invalid argument. Real component must be a number primitive. Value: `'+real+'`.' );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( 'invalid argument. Imaginary component must be a number primitive. Value: `'+imag+'`.' );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( real )\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( imag )\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex64.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64.prototype, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 8\n*/\nsetReadOnly( Complex64.prototype, 'byteLength', 8 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex64.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex64` instance.\n*\n*\n* @name toJSON\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex64', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex64.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nexport default Complex64;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex128 from '@stdlib/complex-float64' ;\nimport Complex64 from '@stdlib/complex-float32' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex number-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex number-like object.\n*\n* @example\n* import Complex128 from '@stdlib/complex-float64' ;\n* import Complex64 from '@stdlib/complex-float32' ;\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplexLike( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplexLike( x );\n* // returns true\n*/\nfunction isComplexLike( value ) {\n\tif ( value instanceof Complex128 || value instanceof Complex64 ) {\n\t\treturn true;\n\t}\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.re === 'number' &&\n\t\ttypeof value.im === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isComplexLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math-base-assert-is-integer' ;\n\n\n// MAIN //\n\n/**\n* Tests if a finite numeric value is an even number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an even number\n*\n* @example\n* var bool = isEven( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( -2.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( NaN );\n* // returns false\n*/\nfunction isEven( x ) {\n\treturn isInteger( x/2.0 );\n}\n\n\n// EXPORTS //\n\nexport default isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasIteratorSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'iterator' ) &&\n\t\ttypeof Symbol.iterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex64';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasIteratorSymbolSupport from '@stdlib/assert-has-iterator-symbol-support' ;\n\n\n// MAIN //\n\n/**\n* Iterator symbol.\n*\n* @name IteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* function iterator() {\n*     var it;\n*     var i;\n*\n*     i = -1;\n*\n*     it = {};\n*     it.next = next;\n*     it.return = done;\n*\n*     if ( IteratorSymbol ) {\n*         it[ IteratorSymbol ] = iterator;\n*     }\n*     return it;\n*\n*     function next() {\n*         i += 1;\n*         return {\n*             'value': i,\n*             'done': false\n*         };\n*     }\n*\n*     function done( value ) {\n*         if ( arguments.length === 0 ) {\n*             return {\n*                 'done': true\n*             };\n*         }\n*         return {\n*             'value': value,\n*             'done': true\n*         };\n*     }\n* }\n*\n* var obj = iterator();\n*/\nvar IteratorSymbol = ( hasIteratorSymbolSupport() ) ? Symbol.iterator : null;\n\n\n// EXPORTS //\n\nexport default IteratorSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the real component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* import Complex64 from '@stdlib/complex-float32' ;\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var re = realf( z );\n* // returns 5.0\n*/\nfunction realf( z ) {\n\treturn z.re;\n}\n\n\n// EXPORTS //\n\nexport default realf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the imaginary component of a single-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* import Complex64 from '@stdlib/complex-float32' ;\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var im = imagf( z );\n* // returns 3.0\n*/\nfunction imagf( z ) {\n\treturn z.im;\n}\n\n\n// EXPORTS //\n\nexport default imagf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float32Array from '@stdlib/array-float32' ;\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex64Array` as a `Float32Array`.\n*\n* @param {Complex64Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float32Array} `Float32Array` view\n*\n* @example\n* import Complex64Array from '@stdlib/array-complex64' ;\n*\n* var x = new Complex64Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float32Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float32Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from '@stdlib/array-float64' ;\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex128Array` as a `Float64Array`.\n*\n* @param {Complex128Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float64Array} `Float64Array` view\n*\n* @example\n* import Complex128Array from '@stdlib/array-complex128' ;\n*\n* var x = new Complex128Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float64Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float64Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert-is-array-like-object' ;\nimport isComplexLike from '@stdlib/assert-is-complex-like' ;\nimport realf from '@stdlib/complex-realf' ;\nimport imagf from '@stdlib/complex-imagf' ;\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `'+z+'`.' );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert-is-array-like-object' ;\nimport isComplexLike from '@stdlib/assert-is-complex-like' ;\nimport realf from '@stdlib/complex-realf' ;\nimport imagf from '@stdlib/complex-imagf' ;\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `'+z+'`.' );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexLike from '@stdlib/assert-is-complex-like' ;\nimport realf from '@stdlib/complex-realf' ;\nimport imagf from '@stdlib/complex-imagf' ;\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float32Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float32Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = realf( v );\n\t\tbuf[ j+1 ] = imagf( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nexport default fromArray;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer' ;\nimport isArrayLikeObject from '@stdlib/assert-is-array-like-object' ;\nimport isCollection from '@stdlib/assert-is-collection' ;\nimport isArrayBuffer from '@stdlib/assert-is-arraybuffer' ;\nimport isObject from '@stdlib/assert-is-object' ;\nimport isArray from '@stdlib/assert-is-array' ;\nimport isFunction from '@stdlib/assert-is-function' ;\nimport isComplexLike from '@stdlib/assert-is-complex-like' ;\nimport isEven from '@stdlib/math-base-assert-is-even' ;\nimport isInteger from '@stdlib/math-base-assert-is-integer' ;\nimport hasIteratorSymbolSupport from '@stdlib/assert-has-iterator-symbol-support' ;\nimport ITERATOR_SYMBOL from '@stdlib/symbol-iterator' ;\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport setReadOnlyAccessor from '@stdlib/utils-define-nonenumerable-read-only-accessor' ;\nimport Float32Array from '@stdlib/array-float32' ;\nimport Complex64 from '@stdlib/complex-float32' ;\nimport realf from '@stdlib/complex-realf' ;\nimport imagf from '@stdlib/complex-imagf' ;\nimport reinterpret64 from '@stdlib/strided-base-reinterpret-complex64' ;\nimport reinterpret128 from '@stdlib/strided-base-reinterpret-complex128' ;\nimport arraylike2object from '@stdlib/array-base-arraylike2object' ;\nimport fromIterator from './from_iterator.js' ;\nimport fromIteratorMap from './from_iterator_map.js' ;\nimport fromArray from './from_array.js' ;\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float32Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex64Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex64Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex128Array...\n\t\tvalue.name === 'Complex128Array'\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*/\nfunction isComplex64Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*/\nfunction isComplex128Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT*2\n\t);\n}\n\n\n// MAIN //\n\n/**\n* 64-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `8`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `8`\n* @throws {TypeError} view length must be a positive multiple of `8`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array-buffer' ;\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* import ArrayBuffer from '@stdlib/array-buffer' ;\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array-buffer' ;\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex64Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex64Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex64Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex64Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex64Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex64Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float32Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float32Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float32Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( 'invalid argument. Array-like object input arguments must have a length which is a multiple of two. Length: `'+len+'`.' );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float32Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( 'invalid argument. Array-like object and typed array input arguments must have a length which is a multiple of two. Length: `'+len+'`.' );\n\t\t\t\t}\n\t\t\t\tbuf = new Float32Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( 'invalid argument. ArrayBuffer byte length must be a multiple of '+BYTES_PER_ELEMENT+'. Byte length: `'+buf.byteLength+'`.' );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `'+buf+'`.' );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `'+buf+'`.' );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable.' );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `'+arguments[0]+'`.' );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. First argument must be an array buffer. Value: `'+buf+'`.' );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Byte offset must be a nonnegative integer. Value: `'+byteOffset+'`.' );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( 'invalid argument. Byte offset must be a multiple of '+BYTES_PER_ELEMENT+'. Value: `'+byteOffset+'`.' );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. ArrayBuffer view byte length must be a multiple of '+BYTES_PER_ELEMENT+'. View byte length: `'+len+'`.' );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Length must be a nonnegative integer. Value: `'+len+'`.' );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `'+(len*BYTES_PER_ELEMENT)+'`.' );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var nbytes = Complex64Array.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex64Array\n* @readonly\n* @type {string}\n* @default 'Complex64Array'\n*\n* @example\n* var str = Complex64Array.name;\n* // returns 'Complex64Array'\n*/\nsetReadOnly( Complex64Array, 'name', 'Complex64Array' );\n\n/**\n* Creates a new 64-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex64Array\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex64 from '@stdlib/complex-float32' ;\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex64 from '@stdlib/complex-float32' ;\n* import realf from '@stdlib/complex-realf' ;\n* import imagf from '@stdlib/complex-imagf' ;\n*\n* function clbk( v ) {\n*     return new Complex64( realf(v)*2.0, imagf(v)*2.0 );\n* }\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ], clbk );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex64Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `'+clbk+'`.' );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `'+v+'`.' );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\ttmp = arraylike2object( src );\n\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( tmp.getter( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( 'invalid argument. First argument must have a length which is a multiple of two. Length: `'+len+'`.' );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `'+v+'`.' );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. First argument must be an array-like object or an iterable.' );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( 'invalid argument. First argument must be an array-like object or an iterable. Value: `'+src+'`.' );\n});\n\n/**\n* Creates a new 64-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex64Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex64Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 80\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array.prototype, 'BYTES_PER_ELEMENT', Complex64Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} modified array\n*\n* @example\n* import Complex64 from '@stdlib/complex-float32' ;\n* import realf from '@stdlib/complex-realf' ;\n* import imagf from '@stdlib/complex-imagf' ;\n*\n* var arr = new Complex64Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex64( 1.0, 1.0 ), 0 );\n* arr.set( new Complex64( 2.0, 2.0 ), 1 );\n* arr.set( new Complex64( 3.0, 3.0 ), 2 );\n* arr.set( new Complex64( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex64Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* import Complex64 from '@stdlib/complex-float32' ;\n*\n* var arr = [\n*     new Complex64( 1.0, 1.0 ),\n*     new Complex64( 2.0, 2.0 ),\n*     new Complex64( 3.0, 3.0 )\n* ];\n* arr = new Complex64Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex64> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex64( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* import realf from '@stdlib/complex-realf' ;\n* import imagf from '@stdlib/complex-imagf' ;\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex64Array.prototype, 'get', function get( idx ) {\n\tvar buf;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a nonnegative integer. Value: `'+idx+'`.' );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\tbuf = this._buffer;\n\tidx *= 2;\n\treturn new Complex64( buf[ idx ], buf[ idx+1 ] );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n*\n* @name set\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* import realf from '@stdlib/complex-realf' ;\n* import imagf from '@stdlib/complex-imagf' ;\n*\n* var arr = new Complex64Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Index argument must be a nonnegative integer. Value: `'+idx+'`.' );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( 'invalid argument. Index argument is out-of-bounds. Value: `'+idx+'`.' );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = realf( value );\n\t\tbuf[ idx+1 ] = imagf( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float32Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `'+N+'`.' );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float32Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = realf( v );\n\t\t\tbuf[ idx+1 ] = imagf( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `'+value+'`.' );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n\n// EXPORTS //\n\nexport default Complex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the real component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} real component\n*\n* @example\n* import Complex128 from '@stdlib/complex-float64' ;\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var re = real( z );\n* // returns 5.0\n*/\nfunction real( z ) {\n\treturn z.re;\n}\n\n\n// EXPORTS //\n\nexport default real;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the imaginary component of a double-precision complex floating-point number.\n*\n* @param {Complex} z - complex number\n* @returns {number} imaginary component\n*\n* @example\n* import Complex128 from '@stdlib/complex-float64' ;\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var im = imag( z );\n* // returns 3.0\n*/\nfunction imag( z ) {\n\treturn z.im;\n}\n\n\n// EXPORTS //\n\nexport default imag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert-is-array-like-object' ;\nimport isComplexLike from '@stdlib/assert-is-complex-like' ;\nimport real from '@stdlib/complex-real' ;\nimport imag from '@stdlib/complex-imag' ;\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `'+z+'`.' );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert-is-array-like-object' ;\nimport isComplexLike from '@stdlib/assert-is-complex-like' ;\nimport real from '@stdlib/complex-real' ;\nimport imag from '@stdlib/complex-imag' ;\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `'+z+'`.' );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexLike from '@stdlib/assert-is-complex-like' ;\nimport real from '@stdlib/complex-real' ;\nimport imag from '@stdlib/complex-imag' ;\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float64Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float64Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = real( v );\n\t\tbuf[ j+1 ] = imag( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nexport default fromArray;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer' ;\nimport isArrayLikeObject from '@stdlib/assert-is-array-like-object' ;\nimport isCollection from '@stdlib/assert-is-collection' ;\nimport isArrayBuffer from '@stdlib/assert-is-arraybuffer' ;\nimport isObject from '@stdlib/assert-is-object' ;\nimport isArray from '@stdlib/assert-is-array' ;\nimport isFunction from '@stdlib/assert-is-function' ;\nimport isComplexLike from '@stdlib/assert-is-complex-like' ;\nimport isEven from '@stdlib/math-base-assert-is-even' ;\nimport isInteger from '@stdlib/math-base-assert-is-integer' ;\nimport hasIteratorSymbolSupport from '@stdlib/assert-has-iterator-symbol-support' ;\nimport ITERATOR_SYMBOL from '@stdlib/symbol-iterator' ;\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport setReadOnlyAccessor from '@stdlib/utils-define-nonenumerable-read-only-accessor' ;\nimport Float64Array from '@stdlib/array-float64' ;\nimport Complex128 from '@stdlib/complex-float64' ;\nimport real from '@stdlib/complex-real' ;\nimport imag from '@stdlib/complex-imag' ;\nimport reinterpret64 from '@stdlib/strided-base-reinterpret-complex64' ;\nimport reinterpret128 from '@stdlib/strided-base-reinterpret-complex128' ;\nimport arraylike2object from '@stdlib/array-base-arraylike2object' ;\nimport fromIterator from './from_iterator.js' ;\nimport fromIteratorMap from './from_iterator_map.js' ;\nimport fromArray from './from_array.js' ;\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float64Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex128Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex128Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex64Array...\n\t\tvalue.name === 'Complex64Array'\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*/\nfunction isComplex64Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT/2\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*/\nfunction isComplex128Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// MAIN //\n\n/**\n* 128-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `16`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `16`\n* @throws {TypeError} view length must be a positive multiple of `16`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array-buffer' ;\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* import ArrayBuffer from '@stdlib/array-buffer' ;\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array-buffer' ;\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex128Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex128Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex128Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex128Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex128Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex128Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float64Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float64Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float64Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( 'invalid argument. Array-like object input arguments must have a length which is a multiple of two. Length: `'+len+'`.' );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float64Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( 'invalid argument. Array-like object and typed array input arguments must have a length which is a multiple of two. Length: `'+len+'`.' );\n\t\t\t\t}\n\t\t\t\tbuf = new Float64Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( 'invalid argument. ArrayBuffer byte length must be a multiple of '+BYTES_PER_ELEMENT+'. Byte length: `'+buf.byteLength+'`.' );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `'+buf+'`.' );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `'+buf+'`.' );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable.' );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `'+arguments[0]+'`.' );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. First argument must be an array buffer. Value: `'+buf+'`.' );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Byte offset must be a nonnegative integer. Value: `'+byteOffset+'`.' );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( 'invalid argument. Byte offset must be a multiple of '+BYTES_PER_ELEMENT+'. Value: `'+byteOffset+'`.' );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. ArrayBuffer view byte length must be a multiple of '+BYTES_PER_ELEMENT+'. View byte length: `'+len+'`.' );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Length must be a nonnegative integer. Value: `'+len+'`.' );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `'+(len*BYTES_PER_ELEMENT)+'`.' );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var nbytes = Complex128Array.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex128Array\n* @readonly\n* @type {string}\n* @default 'Complex128Array'\n*\n* @example\n* var name = Complex128Array.name;\n* // returns 'Complex128Array'\n*/\nsetReadOnly( Complex128Array, 'name', 'Complex128Array' );\n\n/**\n* Creates a new 128-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex128Array\n* @type {Function}\n* @param {(Collection|Object)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex128 from '@stdlib/complex-float64' ;\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex128 from '@stdlib/complex-float64' ;\n* import real from '@stdlib/complex-real' ;\n* import imag from '@stdlib/complex-imag' ;\n*\n* function clbk( v ) {\n*     return new Complex128( real(v)*2.0, imag(v)*2.0 );\n* }\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ], clbk );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex128Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `'+clbk+'`.' );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `'+v+'`.' );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\ttmp = arraylike2object( src );\n\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( tmp.getter( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( 'invalid argument. First argument must have a length which is a multiple of two. Length: `'+len+'`.' );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `'+v+'`.' );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. First argument must be an array-like object or an iterable.' );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( 'invalid argument. First argument must be an array-like object or an iterable. Value: `'+src+'`.' );\n});\n\n/**\n* Creates a new 128-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex128Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex128Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 160\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array.prototype, 'BYTES_PER_ELEMENT', Complex128Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} modified array\n*\n* @example\n* import Complex128 from '@stdlib/complex-float64' ;\n* import real from '@stdlib/complex-real' ;\n* import imag from '@stdlib/complex-imag' ;\n*\n* var arr = new Complex128Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex128( 1.0, 1.0 ), 0 );\n* arr.set( new Complex128( 2.0, 2.0 ), 1 );\n* arr.set( new Complex128( 3.0, 3.0 ), 2 );\n* arr.set( new Complex128( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* import Complex128 from '@stdlib/complex-float64' ;\n*\n* var arr = [\n*     new Complex128( 1.0, 1.0 ),\n*     new Complex128( 2.0, 2.0 ),\n*     new Complex128( 3.0, 3.0 )\n* ];\n* arr = new Complex128Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex128> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex128( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* var arr = new Complex128Array( 10 );\n* import real from '@stdlib/complex-real' ;\n* import imag from '@stdlib/complex-imag' ;\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex128Array.prototype, 'get', function get( idx ) {\n\tvar buf;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a nonnegative integer. Value: `'+idx+'`.' );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\tbuf = this._buffer;\n\tidx *= 2;\n\treturn new Complex128( buf[ idx ], buf[ idx+1 ] );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n*\n* @name set\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* import real from '@stdlib/complex-real' ;\n* import imag from '@stdlib/complex-imag' ;\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Index argument must be a nonnegative integer. Value: `'+idx+'`.' );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( 'invalid argument. Index argument is out-of-bounds. Value: `'+idx+'`.' );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = real( value );\n\t\tbuf[ idx+1 ] = imag( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float64Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `'+N+'`.' );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float64Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = real( v );\n\t\t\tbuf[ idx+1 ] = imag( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `'+value+'`.' );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n\n// EXPORTS //\n\nexport default Complex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex64Array from '@stdlib/array-complex64' ;\nimport Complex128Array from '@stdlib/array-complex128' ;\n\n\n// MAIN //\n\nvar CTORS = [\n\tComplex128Array,\n\tComplex64Array\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value has in its prototype chain a specified constructor as a prototype property.\n*\n* @param {*} value - value to test\n* @param {Function} constructor - constructor to test against\n* @throws {TypeError} constructor must be callable\n* @returns {boolean} boolean indicating whether a value is an instance of a provided constructor\n*\n* @example\n* var bool = instanceOf( [], Array );\n* // returns true\n*\n* @example\n* var bool = instanceOf( {}, Object ); // exception\n* // returns true\n*\n* @example\n* var bool = instanceOf( 'beep', String );\n* // returns false\n*\n* @example\n* var bool = instanceOf( null, Object );\n* // returns false\n*\n* @example\n* var bool = instanceOf( 5, Object );\n* // returns false\n*/\nfunction instanceOf( value, constructor ) {\n\t// TODO: replace with `isCallable` check\n\tif ( typeof constructor !== 'function' ) {\n\t\tthrow new TypeError( 'invalid argument. `constructor` argument must be callable. Value: `'+constructor+'`.' );\n\t}\n\treturn ( value instanceof constructor );\n}\n\n\n// EXPORTS //\n\nexport default instanceOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from '@stdlib/array-int8' ;\nimport Uint8Array from '@stdlib/array-uint8' ;\nimport Uint8ClampedArray from '@stdlib/array-uint8c' ;\nimport Int16Array from '@stdlib/array-int16' ;\nimport Uint16Array from '@stdlib/array-uint16' ;\nimport Int32Array from '@stdlib/array-int32' ;\nimport Uint32Array from '@stdlib/array-uint32' ;\nimport Float32Array from '@stdlib/array-float32' ;\nimport Float64Array from '@stdlib/array-float64' ;\nimport Complex64Array from '@stdlib/array-complex64' ;\nimport Complex128Array from '@stdlib/array-complex128' ;\n\n\n// MAIN //\n\nvar CTORS = [\n\t[ Float64Array, 'Float64Array' ],\n\t[ Float32Array, 'Float32Array' ],\n\t[ Int32Array, 'Int32Array' ],\n\t[ Uint32Array, 'Uint32Array' ],\n\t[ Int16Array, 'Int16Array' ],\n\t[ Uint16Array, 'Uint16Array' ],\n\t[ Int8Array, 'Int8Array' ],\n\t[ Uint8Array, 'Uint8Array' ],\n\t[ Uint8ClampedArray, 'Uint8ClampedArray' ],\n\t[ Complex64Array, 'Complex64Array' ],\n\t[ Complex128Array, 'Complex128Array' ]\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport instanceOf from '@stdlib/assert-instance-of' ;\nimport ctorName from '@stdlib/utils-constructor-name' ;\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of' ;\nimport CTORS from './ctors.js' ;\n\n\n// MAIN //\n\n/**\n* Returns the typed array type.\n*\n* @private\n* @param {TypedArray} arr - typed array\n* @returns {(string|void)} typed array type\n*\n* @example\n* import Float64Array from '@stdlib/array-float64' ;\n*\n* var arr = new Float64Array( 5 );\n* var str = typeName( arr );\n* // returns 'Float64Array'\n*/\nfunction typeName( arr ) {\n\tvar v;\n\tvar i;\n\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( arr, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( arr ) {\n\t\tv = ctorName( arr );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\tarr = getPrototypeOf( arr );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typeName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isTypedArray from '@stdlib/assert-is-typed-array' ;\nimport isComplexTypedArray from '@stdlib/assert-is-complex-typed-array' ;\nimport reinterpret64 from '@stdlib/strided-base-reinterpret-complex64' ;\nimport reinterpret128 from '@stdlib/strided-base-reinterpret-complex128' ;\nimport typeName from './type.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a typed array.\n*\n* ## Notes\n*\n* -   We build a JSON object representing a typed array similar to how Node.js `Buffer` objects are represented. See [Buffer][1].\n*\n* [1]: https://nodejs.org/api/buffer.html#buffer_buf_tojson\n*\n* @param {TypedArray} arr - typed array to serialize\n* @throws {TypeError} first argument must be a typed array\n* @returns {Object} JSON representation\n*\n* @example\n* import Float64Array from '@stdlib/array-float64' ;\n*\n* var arr = new Float64Array( [ 5.0, 3.0 ] );\n* var json = toJSON( arr );\n* // returns { 'type': 'Float64Array', 'data': [ 5.0, 3.0 ] }\n*/\nfunction toJSON( arr ) {\n\tvar data;\n\tvar out;\n\tvar i;\n\n\tif ( isTypedArray( arr ) ) {\n\t\tdata = arr;\n\t} else if ( isComplexTypedArray( arr ) ) {\n\t\tif ( arr.BYTES_PER_ELEMENT === 8 ) {\n\t\t\tdata = reinterpret64( arr, 0 );\n\t\t} else { // arr.BYTES_PER_ELEMENT === 16\n\t\t\tdata = reinterpret128( arr, 0 );\n\t\t}\n\t} else {\n\t\tthrow new TypeError( 'invalid argument. Must provide a typed array. Value: `' + arr + '`.' );\n\t}\n\tout = {\n\t\t'type': typeName( arr ),\n\t\t'data': []\n\t};\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tout.data.push( data[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from '@stdlib/utils-constructor-name' ;\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of' ;\nimport CTORS from './ctors.js' ;\nimport NAMES from './names.json' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*\n* @example\n* import Complex128Array from '@stdlib/array-complex128' ;\n*\n* var bool = isComplexTypedArray( new Complex128Array( 10 ) );\n* // returns true\n*/\nfunction isComplexTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for complex typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isComplexTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport UINT32_MAX from '@stdlib/constants-uint32-max' ;\nimport floor from '@stdlib/math-base-special-floor' ;\n\n\n// VARIABLES //\n\nvar MAX = UINT32_MAX - 1;\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom integer on the interval \\\\([1, 2^{32}-1)\\\\).\n*\n* @private\n* @returns {PositiveInteger} pseudorandom integer\n*\n* @example\n* var v = randuint32();\n* // returns <number>\n*/\nfunction randuint32() {\n\tvar v = floor( 1.0 + (MAX*Math.random()) ); // eslint-disable-line stdlib/no-builtin-math\n\treturn v >>> 0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nexport default randuint32;\n","/* eslint-disable max-lines, max-len */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code and copyright notice are from the [source implementation]{@link http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/mt19937ar.c}. The implementation has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without\n* modification, are permitted provided that the following conditions\n* are met:\n*\n*   1. Redistributions of source code must retain the above copyright\n*      notice, this list of conditions and the following disclaimer.\n*\n*   2. Redistributions in binary form must reproduce the above copyright\n*      notice, this list of conditions and the following disclaimer in the\n*      documentation and/or other materials provided with the distribution.\n*\n*   3. The names of its contributors may not be used to endorse or promote\n*      products derived from this software without specific prior written\n*      permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n* \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n* A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n* EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n* PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n* PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport setReadOnlyAccessor from '@stdlib/utils-define-nonenumerable-read-only-accessor' ;\nimport setReadWriteAccessor from '@stdlib/utils-define-nonenumerable-read-write-accessor' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport isObject from '@stdlib/assert-is-plain-object' ;\nimport isCollection from '@stdlib/assert-is-collection' ;\nimport isUint32Array from '@stdlib/assert-is-uint32array' ;\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean' ;\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer' ;\nimport FLOAT64_MAX_SAFE_INTEGER from '@stdlib/constants-float64-max-safe-integer' ;\nimport UINT32_MAX from '@stdlib/constants-uint32-max' ;\nimport Uint32Array from '@stdlib/array-uint32' ;\nimport max from '@stdlib/math-base-special-max' ;\nimport umul from '@stdlib/math-base-ops-umul' ;\nimport gcopy from '@stdlib/blas-base-gcopy' ;\nimport typedarray2json from '@stdlib/array-to-json' ;\nimport randuint32 from './rand_uint32.js' ;\n\n\n// VARIABLES //\n\n// Define the size of the state array (see refs):\nvar N = 624;\n\n// Define a (magic) constant used for indexing into the state array:\nvar M = 397;\n\n// Define the maximum seed: 11111111111111111111111111111111\nvar MAX_SEED = UINT32_MAX >>> 0; // asm type annotation\n\n// For seed arrays, define an initial state (magic) constant: 19650218 => 00000001001010111101011010101010\nvar SEED_ARRAY_INIT_STATE = 19650218 >>> 0; // asm type annotation\n\n// Define a mask for the most significant `w-r` bits, where `w` is the word size (32 bits) and `r` is the separation point of one word (see refs): 2147483648 => 0x80000000 => 10000000000000000000000000000000\nvar UPPER_MASK = 0x80000000 >>> 0; // asm type annotation\n\n// Define a mask for the least significant `r` bits (see refs): 2147483647 => 0x7fffffff => 01111111111111111111111111111111\nvar LOWER_MASK = 0x7fffffff >>> 0; // asm type annotation\n\n// Define a multiplier (see Knuth TAOCP Vol2. 3rd Ed. P.106): 1812433253 => 01101100000001111000100101100101\nvar KNUTH_MULTIPLIER = 1812433253 >>> 0; // asm type annotation\n\n// Define a (magic) multiplier: 1664525 => 00000000000110010110011000001101\nvar MAGIC_MULTIPLIER_1 = 1664525 >>> 0; // asm type annotation\n\n// Define a (magic) multiplier: 1566083941 => 01011101010110001000101101100101\nvar MAGIC_MULTIPLIER_2 = 1566083941 >>> 0; // asm type annotation\n\n// Define a tempering coefficient: 2636928640 => 0x9d2c5680 => 10011101001011000101011010000000\nvar TEMPERING_COEFFICIENT_1 = 0x9d2c5680 >>> 0; // asm type annotation\n\n// Define a tempering coefficient: 4022730752 => 0xefc60000 => 11101111110001100000000000000000\nvar TEMPERING_COEFFICIENT_2 = 0xefc60000 >>> 0; // asm type annotation\n\n// Define a constant vector `a` (see refs): 2567483615 => 0x9908b0df => 10011001000010001011000011011111\nvar MATRIX_A = 0x9908b0df >>> 0; // asm type annotation\n\n// MAG01[x] = x * MATRIX_A; for x = {0,1}\nvar MAG01 = [ 0x0 >>> 0, MATRIX_A >>> 0 ]; // asm type annotation\n\n// Define a normalization constant when generating double-precision floating-point numbers: 2^53 => 9007199254740992\nvar FLOAT64_NORMALIZATION_CONSTANT = 1.0 / ( FLOAT64_MAX_SAFE_INTEGER+1.0 ); // eslint-disable-line id-length\n\n// 2^26: 67108864\nvar TWO_26 = 67108864 >>> 0; // asm type annotation\n\n// 2^32: 2147483648 => 0x80000000 => 10000000000000000000000000000000\nvar TWO_32 = 0x80000000 >>> 0; // asm type annotation\n\n// 1 (as a 32-bit unsigned integer): 1 => 0x1 => 00000000000000000000000000000001\nvar ONE = 0x1 >>> 0; // asm type annotation\n\n// Define the maximum normalized pseudorandom double-precision floating-point number: ( (((2^32-1)>>>5)*2^26)+( (2^32-1)>>>6) ) / 2^53\nvar MAX_NORMALIZED = FLOAT64_MAX_SAFE_INTEGER * FLOAT64_NORMALIZATION_CONSTANT;\n\n// Define the state array schema version:\nvar STATE_ARRAY_VERSION = 1; // NOTE: anytime the state array schema changes, this value should be incremented!!!\n\n// Define the number of sections in the state array:\nvar NUM_STATE_SECTIONS = 3; // state, other, seed\n\n// Define the index offset of the \"state\" section in the state array:\nvar STATE_SECTION_OFFSET = 2; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n\n// Define the index offset of the \"other\" section in the state array:\nvar OTHER_SECTION_OFFSET = N + 3; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n\n// Define the index offset of the seed section in the state array:\nvar SEED_SECTION_OFFSET = N + 5; // | version | num_sections | state_length | ...state | other_length | state_index | seed_length | ...seed |\n\n// Define the length of the \"fixed\" length portion of the state array:\nvar STATE_FIXED_LENGTH = N + 6; // 1 (version) + 1 (num_sections) + 1 (state_length) + N (state) + 1 (other_length) + 1 (state_index) + 1 (seed_length)\n\n\n// FUNCTIONS //\n\n/**\n* Verifies state array integrity.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {boolean} FLG - flag indicating whether the state array was provided as an option (true) or an argument (false)\n* @returns {(Error|null)} an error or `null`\n*/\nfunction verifyState( state, FLG ) {\n\tvar s1;\n\tif ( FLG ) {\n\t\ts1 = 'option';\n\t} else {\n\t\ts1 = 'argument';\n\t}\n\t// The state array must have a minimum length...\n\tif ( state.length < STATE_FIXED_LENGTH+1 ) {\n\t\treturn new RangeError( 'invalid '+s1+'. `state` array has insufficient length.' );\n\t}\n\t// The first element of the state array must equal the supported state array schema version...\n\tif ( state[ 0 ] !== STATE_ARRAY_VERSION ) {\n\t\treturn new RangeError( 'invalid '+s1+'. `state` array has an incompatible schema version. Expected: '+STATE_ARRAY_VERSION+'. Actual: '+state[ 0 ]+'.' );\n\t}\n\t// The second element of the state array must contain the number of sections...\n\tif ( state[ 1 ] !== NUM_STATE_SECTIONS ) {\n\t\treturn new RangeError( 'invalid '+s1+'. `state` array has an incompatible number of sections. Expected: '+NUM_STATE_SECTIONS+'. Actual: '+state[ 1 ]+'.' );\n\t}\n\t// The length of the \"state\" section must equal `N`...\n\tif ( state[ STATE_SECTION_OFFSET ] !== N ) {\n\t\treturn new RangeError( 'invalid '+s1+'. `state` array has an incompatible state length. Expected: '+N+'. Actual: '+state[ STATE_SECTION_OFFSET ]+'.' );\n\t}\n\t// The length of the \"other\" section must equal `1`...\n\tif ( state[ OTHER_SECTION_OFFSET ] !== 1 ) {\n\t\treturn new RangeError( 'invalid '+s1+'. `state` array has an incompatible section length. Expected: '+(1).toString()+'. Actual: '+state[ OTHER_SECTION_OFFSET ]+'.' );\n\t}\n\t// The length of the \"seed\" section much match the empirical length...\n\tif ( state[ SEED_SECTION_OFFSET ] !== state.length-STATE_FIXED_LENGTH ) {\n\t\treturn new RangeError( 'invalid '+s1+'. `state` array length is incompatible with seed section length. Expected: '+(state.length-STATE_FIXED_LENGTH)+'. Actual: '+state[ SEED_SECTION_OFFSET ]+'.' );\n\t}\n\treturn null;\n}\n\n/**\n* Returns an initial PRNG state.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {PositiveInteger} N - state size\n* @param {uinteger32} s - seed\n* @returns {Uint32Array} state array\n*/\nfunction createState( state, N, s ) {\n\tvar i;\n\n\t// Set the first element of the state array to the provided seed:\n\tstate[ 0 ] = s >>> 0; // equivalent to `s & 0xffffffffUL` in original C implementation\n\n\t// Initialize the remaining state array elements:\n\tfor ( i = 1; i < N; i++ ) {\n\t\t/*\n\t\t* In the original C implementation (see `init_genrand()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (KNUTH_MULTIPLIER * (mt[i-1] ^ (mt[i-1] >> 30)) + i)\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/\n\t\ts = state[ i-1 ]>>>0; // asm type annotation\n\t\ts = ( s^(s>>>30) )>>>0; // asm type annotation\n\t\tstate[ i ] = ( umul( s, KNUTH_MULTIPLIER ) + i )>>>0; // asm type annotation\n\t}\n\treturn state;\n}\n\n/**\n* Initializes a PRNG state array according to a seed array.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @param {NonNegativeInteger} N - state array length\n* @param {Collection} seed - seed array\n* @param {NonNegativeInteger} M - seed array length\n* @returns {Uint32Array} state array\n*/\nfunction initState( state, N, seed, M ) {\n\tvar s;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\ti = 1;\n\tj = 0;\n\tfor ( k = max( N, M ); k > 0; k-- ) {\n\t\t/*\n\t\t* In the original C implementation (see `init_by_array()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (mt[i]^((mt[i-1]^(mt[i-1]>>30))*1664525UL)) + seed[j] + j;\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/\n\t\ts = state[ i-1 ]>>>0; // asm type annotation\n\t\ts = ( s^(s>>>30) )>>>0; // asm type annotation\n\t\ts = ( umul( s, MAGIC_MULTIPLIER_1 ) )>>>0; // asm type annotation\n\t\tstate[ i ] = ( ((state[i]>>>0)^s) + seed[j] + j )>>>0; /* non-linear */ // asm type annotation\n\n\t\ti += 1;\n\t\tj += 1;\n\t\tif ( i >= N ) {\n\t\t\tstate[ 0 ] = state[ N-1 ];\n\t\t\ti = 1;\n\t\t}\n\t\tif ( j >= M ) {\n\t\t\tj = 0;\n\t\t}\n\t}\n\tfor ( k = N-1; k > 0; k-- ) {\n\t\t/*\n\t\t* In the original C implementation (see `init_by_array()`),\n\t\t*\n\t\t* ```c\n\t\t* mt[i] = (mt[i]^((mt[i-1]^(mt[i-1]>>30))*1566083941UL)) - i;\n\t\t* ```\n\t\t*\n\t\t* In order to replicate this in JavaScript, we must emulate C-like multiplication of unsigned 32-bit integers.\n\t\t*/\n\t\ts = state[ i-1 ]>>>0; // asm type annotation\n\t\ts = ( s^(s>>>30) )>>>0; // asm type annotation\n\t\ts = ( umul( s, MAGIC_MULTIPLIER_2 ) )>>>0; // asm type annotation\n\t\tstate[ i ] = ( ((state[i]>>>0)^s) - i )>>>0; /* non-linear */ // asm type annotation\n\n\t\ti += 1;\n\t\tif ( i >= N ) {\n\t\t\tstate[ 0 ] = state[ N-1 ];\n\t\t\ti = 1;\n\t\t}\n\t}\n\t// Ensure a non-zero initial state array:\n\tstate[ 0 ] = TWO_32; // MSB (most significant bit) is 1\n\n\treturn state;\n}\n\n/**\n* Updates a PRNG's internal state by generating the next `N` words.\n*\n* @private\n* @param {Uint32Array} state - state array\n* @returns {Uint32Array} state array\n*/\nfunction twist( state ) {\n\tvar w;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tk = N - M;\n\tfor ( i = 0; i < k; i++ ) {\n\t\tw = ( state[i]&UPPER_MASK ) | ( state[i+1]&LOWER_MASK );\n\t\tstate[ i ] = state[ i+M ] ^ ( w>>>1 ) ^ MAG01[ w&ONE ];\n\t}\n\tj = N - 1;\n\tfor ( ; i < j; i++ ) {\n\t\tw = ( state[i]&UPPER_MASK ) | ( state[i+1]&LOWER_MASK );\n\t\tstate[ i ] = state[ i-k ] ^ ( w>>>1 ) ^ MAG01[ w&ONE ];\n\t}\n\tw = ( state[j]&UPPER_MASK ) | ( state[0]&LOWER_MASK );\n\tstate[ j ] = state[ M-1 ] ^ ( w>>>1 ) ^ MAG01[ w&ONE ];\n\treturn state;\n}\n\n\n// MAIN //\n\n/**\n* Returns a 32-bit Mersenne Twister pseudorandom number generator.\n*\n* ## Notes\n*\n* -   In contrast to the original C implementation, array seeds of length `1` are considered integer seeds. This ensures that the seed `[ 1234 ]` generates the same output as the seed `1234`. In the original C implementation, the two seeds would yield different output, which is **not** obvious from a user perspective.\n*\n* @param {Options} [options] - options\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} a seed must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integers less than or equal to the maximum unsigned 32-bit integer\n* @throws {RangeError} a numeric seed must be a positive integer less than or equal to the maximum unsigned 32-bit integer\n* @throws {TypeError} state must be a `Uint32Array`\n* @throws {Error} must provide a valid state\n* @throws {TypeError} `copy` option must be a boolean\n* @returns {PRNG} Mersenne Twister PRNG\n*\n* @example\n* var mt19937 = factory();\n*\n* var v = mt19937();\n* // returns <number>\n*\n* @example\n* // Return a seeded Mersenne Twister PRNG:\n* var mt19937 = factory({\n*     'seed': 1234\n* });\n*\n* var v = mt19937();\n* // returns 822569775\n*/\nfunction factory( options ) {\n\tvar STATE;\n\tvar state;\n\tvar opts;\n\tvar seed;\n\tvar slen;\n\tvar err;\n\n\topts = {};\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Options argument must be an object. Value: `' + options + '`.' );\n\t\t}\n\t\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\t\topts.copy = options.copy;\n\t\t\tif ( !isBoolean( options.copy ) ) {\n\t\t\t\tthrow new TypeError( 'invalid option. `copy` option must be a boolean. Option: `' + options.copy + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( hasOwnProp( options, 'state' ) ) {\n\t\t\tstate = options.state;\n\t\t\topts.state = true;\n\t\t\tif ( !isUint32Array( state ) ) {\n\t\t\t\tthrow new TypeError( 'invalid option. `state` option must be a Uint32Array. Option: `' + state + '`.' );\n\t\t\t}\n\t\t\terr = verifyState( state, true );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tif ( opts.copy === false ) {\n\t\t\t\tSTATE = state;\n\t\t\t} else {\n\t\t\t\tSTATE = new Uint32Array( state.length );\n\t\t\t\tgcopy( state.length, state, 1, STATE, 1 );\n\t\t\t}\n\t\t\t// Create a state \"view\":\n\t\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t\t// Create a seed \"view\":\n\t\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), state[ SEED_SECTION_OFFSET ] );\n\t\t}\n\t\t// If provided a PRNG state, we ignore the `seed` option...\n\t\tif ( seed === void 0 ) {\n\t\t\tif ( hasOwnProp( options, 'seed' ) ) {\n\t\t\t\tseed = options.seed;\n\t\t\t\topts.seed = true;\n\t\t\t\tif ( isPositiveInteger( seed ) ) {\n\t\t\t\t\tif ( seed > MAX_SEED ) {\n\t\t\t\t\t\tthrow new RangeError( 'invalid option. `seed` option must be a positive integer less than or equal to the maximum unsigned 32-bit integer. Option: `' + seed + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tseed >>>= 0; // asm type annotation\n\t\t\t\t} else if ( isCollection( seed ) === false || seed.length < 1 ) {\n\t\t\t\t\tthrow new TypeError( 'invalid option. `seed` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `' + seed + '`.' );\n\t\t\t\t} else if ( seed.length === 1 ) {\n\t\t\t\t\tseed = seed[ 0 ];\n\t\t\t\t\tif ( !isPositiveInteger( seed ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'invalid option. `seed` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `' + seed + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( seed > MAX_SEED ) {\n\t\t\t\t\t\tthrow new RangeError( 'invalid option. `seed` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `' + seed + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tseed >>>= 0; // asm type annotation\n\t\t\t\t} else {\n\t\t\t\t\tslen = seed.length;\n\t\t\t\t\tSTATE = new Uint32Array( STATE_FIXED_LENGTH+slen );\n\n\t\t\t\t\t// Initialize sections:\n\t\t\t\t\tSTATE[ 0 ] = STATE_ARRAY_VERSION;\n\t\t\t\t\tSTATE[ 1 ] = NUM_STATE_SECTIONS;\n\t\t\t\t\tSTATE[ STATE_SECTION_OFFSET ] = N;\n\t\t\t\t\tSTATE[ OTHER_SECTION_OFFSET ] = 1;\n\t\t\t\t\tSTATE[ OTHER_SECTION_OFFSET+1 ] = N; // state index\n\t\t\t\t\tSTATE[ SEED_SECTION_OFFSET ] = slen;\n\n\t\t\t\t\t// Copy the provided seed array to prevent external mutation, as mutation would lead to an inability to reproduce PRNG values according to the PRNG's stated seed:\n\t\t\t\t\tgcopy.ndarray( slen, seed, 1, 0, STATE, 1, SEED_SECTION_OFFSET+1 );\n\n\t\t\t\t\t// Create a state \"view\":\n\t\t\t\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t\t\t\t// Create a seed \"view\":\n\t\t\t\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), slen );\n\n\t\t\t\t\t// Initialize the internal PRNG state:\n\t\t\t\t\tstate = createState( state, N, SEED_ARRAY_INIT_STATE );\n\t\t\t\t\tstate = initState( state, N, seed, slen );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tseed = randuint32() >>> 0; // asm type annotation\n\t\t\t}\n\t\t}\n\t} else {\n\t\tseed = randuint32() >>> 0; // asm type annotation\n\t}\n\tif ( state === void 0 ) {\n\t\tSTATE = new Uint32Array( STATE_FIXED_LENGTH+1 );\n\n\t\t// Initialize sections:\n\t\tSTATE[ 0 ] = STATE_ARRAY_VERSION;\n\t\tSTATE[ 1 ] = NUM_STATE_SECTIONS;\n\t\tSTATE[ STATE_SECTION_OFFSET ] = N;\n\t\tSTATE[ OTHER_SECTION_OFFSET ] = 1;\n\t\tSTATE[ OTHER_SECTION_OFFSET+1 ] = N; // state index\n\t\tSTATE[ SEED_SECTION_OFFSET ] = 1;\n\t\tSTATE[ SEED_SECTION_OFFSET+1 ] = seed;\n\n\t\t// Create a state \"view\":\n\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t// Create a seed \"view\":\n\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), 1 );\n\n\t\t// Initialize the internal PRNG state:\n\t\tstate = createState( state, N, seed );\n\t}\n\t// Note: property order matters in order to maintain consistency of PRNG \"shape\" (hidden classes).\n\tsetReadOnly( mt19937, 'NAME', 'mt19937' );\n\tsetReadOnlyAccessor( mt19937, 'seed', getSeed );\n\tsetReadOnlyAccessor( mt19937, 'seedLength', getSeedLength );\n\tsetReadWriteAccessor( mt19937, 'state', getState, setState );\n\tsetReadOnlyAccessor( mt19937, 'stateLength', getStateLength );\n\tsetReadOnlyAccessor( mt19937, 'byteLength', getStateSize );\n\tsetReadOnly( mt19937, 'toJSON', toJSON );\n\tsetReadOnly( mt19937, 'MIN', 1 );\n\tsetReadOnly( mt19937, 'MAX', UINT32_MAX );\n\tsetReadOnly( mt19937, 'normalized', normalized );\n\n\tsetReadOnly( normalized, 'NAME', mt19937.NAME );\n\tsetReadOnlyAccessor( normalized, 'seed', getSeed );\n\tsetReadOnlyAccessor( normalized, 'seedLength', getSeedLength );\n\tsetReadWriteAccessor( normalized, 'state', getState, setState );\n\tsetReadOnlyAccessor( normalized, 'stateLength', getStateLength );\n\tsetReadOnlyAccessor( normalized, 'byteLength', getStateSize );\n\tsetReadOnly( normalized, 'toJSON', toJSON );\n\tsetReadOnly( normalized, 'MIN', 0.0 );\n\tsetReadOnly( normalized, 'MAX', MAX_NORMALIZED );\n\n\treturn mt19937;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\tvar len = STATE[ SEED_SECTION_OFFSET ];\n\t\treturn gcopy( len, seed, 1, new Uint32Array( len ), 1 );\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn STATE[ SEED_SECTION_OFFSET ];\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn STATE.length;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn STATE.byteLength;\n\t}\n\n\t/**\n\t* Returns the current PRNG state.\n\t*\n\t* ## Notes\n\t*\n\t* -   The PRNG state array is comprised of a preamble followed by `3` sections:\n\t*\n\t*     0.  preamble (version + number of sections)\n\t*     1.  internal PRNG state\n\t*     2.  auxiliary state information\n\t*     3.  PRNG seed\n\t*\n\t* -   The first element of the PRNG state array preamble is the state array schema version.\n\t*\n\t* -   The second element of the PRNG state array preamble is the number of state array sections (i.e., `3`).\n\t*\n\t* -   The first element of each section following the preamble specifies the section length. The remaining section elements comprise the section contents.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\tvar len = STATE.length;\n\t\treturn gcopy( len, STATE, 1, new Uint32Array( len ), 1 );\n\t}\n\n\t/**\n\t* Sets the PRNG state.\n\t*\n\t* ## Notes\n\t*\n\t* -   If PRNG state is \"shared\" (meaning a state array was provided during PRNG creation and **not** copied) and one sets the generator state to a state array having a different length, the PRNG does **not** update the existing shared state and, instead, points to the newly provided state array. In order to synchronize PRNG output according to the new shared state array, the state array for **each** relevant PRNG must be **explicitly** set.\n\t* -   If PRNG state is \"shared\" and one sets the generator state to a state array of the same length, the PRNG state is updated (along with the state of all other PRNGs sharing the PRNG's state array).\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {TypeError} must provide a `Uint32Array`\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\tvar err;\n\t\tif ( !isUint32Array( s ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Must provide a Uint32Array. Value: `' + s + '`.' );\n\t\t}\n\t\terr = verifyState( s, false );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.copy === false ) {\n\t\t\tif ( opts.state && s.length === STATE.length ) {\n\t\t\t\tgcopy( s.length, s, 1, STATE, 1 ); // update current shared state\n\t\t\t} else {\n\t\t\t\tSTATE = s; // point to new shared state\n\t\t\t\topts.state = true; // setting this flag allows updating a shared state even if a state array was not provided at PRNG creation\n\t\t\t}\n\t\t} else {\n\t\t\t// Check if we can reuse allocated memory...\n\t\t\tif ( s.length !== STATE.length ) {\n\t\t\t\tSTATE = new Uint32Array( s.length ); // reallocate\n\t\t\t}\n\t\t\tgcopy( s.length, s, 1, STATE, 1 );\n\t\t}\n\t\t// Create a new state \"view\":\n\t\tstate = new Uint32Array( STATE.buffer, STATE.byteOffset+((STATE_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), N );\n\n\t\t// Create a new seed \"view\":\n\t\tseed = new Uint32Array( STATE.buffer, STATE.byteOffset+((SEED_SECTION_OFFSET+1)*STATE.BYTES_PER_ELEMENT), STATE[ SEED_SECTION_OFFSET ] );\n\t}\n\n\t/**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/\n\tfunction toJSON() {\n\t\tvar out = {};\n\t\tout.type = 'PRNG';\n\t\tout.name = mt19937.NAME;\n\t\tout.state = typedarray2json( STATE );\n\t\tout.params = [];\n\t\treturn out;\n\t}\n\n\t/**\n\t* Generates a pseudorandom integer on the interval \\\\( [1,2^{32}-1) \\\\).\n\t*\n\t* @private\n\t* @returns {uinteger32} pseudorandom integer\n\t*\n\t* @example\n\t* var r = mt19937();\n\t* // returns <number>\n\t*/\n\tfunction mt19937() {\n\t\tvar r;\n\t\tvar i;\n\n\t\t// Retrieve the current state index:\n\t\ti = STATE[ OTHER_SECTION_OFFSET+1 ];\n\n\t\t// Determine whether we need to update the PRNG state:\n\t\tif ( i >= N ) {\n\t\t\tstate = twist( state );\n\t\t\ti = 0;\n\t\t}\n\t\t// Get the next word of \"raw\"/untempered state:\n\t\tr = state[ i ];\n\n\t\t// Update the state index:\n\t\tSTATE[ OTHER_SECTION_OFFSET+1 ] = i + 1;\n\n\t\t// Tempering transform to compensate for the reduced dimensionality of equidistribution:\n\t\tr ^= r >>> 11;\n\t\tr ^= ( r << 7 ) & TEMPERING_COEFFICIENT_1;\n\t\tr ^= ( r << 15 ) & TEMPERING_COEFFICIENT_2;\n\t\tr ^= r >>> 18;\n\n\t\treturn r >>> 0;\n\t}\n\n\t/**\n\t* Generates a pseudorandom number on the interval \\\\( [0,1) \\\\).\n\t*\n\t* ## Notes\n\t*\n\t* -   The original C implementation credits Isaku Wada for this algorithm (2002/01/09).\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var r = normalized();\n\t* // returns <number>\n\t*/\n\tfunction normalized() {\n\t\tvar x = mt19937() >>> 5;\n\t\tvar y = mt19937() >>> 6;\n\t\treturn ( (x*TWO_26)+y ) * FLOAT64_NORMALIZATION_CONSTANT;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPositiveZero from '@stdlib/math-base-assert-is-positive-zero' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport NINF from '@stdlib/constants-float64-ninf' ;\nimport PINF from '@stdlib/constants-float64-pinf' ;\n\n\n// MAIN //\n\n/**\n* Returns the maximum value.\n*\n* @param {number} [x] - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {number} maximum value\n*\n* @example\n* var v = max( 3.14, 4.2 );\n* // returns 4.2\n*\n* @example\n* var v = max( 5.9, 3.14, 4.2 );\n* // returns 5.9\n*\n* @example\n* var v = max( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = max( +0.0, -0.0 );\n* // returns +0.0\n*/\nfunction max( x, y ) {\n\tvar len;\n\tvar m;\n\tvar v;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 2 ) {\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === PINF || y === PINF ) {\n\t\t\treturn PINF;\n\t\t}\n\t\tif ( x === y && x === 0.0 ) {\n\t\t\tif ( isPositiveZero( x ) ) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn y;\n\t\t}\n\t\tif ( x > y ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn y;\n\t}\n\tm = NINF;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arguments[ i ];\n\t\tif ( isnan( v ) || v === PINF ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v > m ) {\n\t\t\tm = v;\n\t\t} else if (\n\t\t\tv === m &&\n\t\t\tv === 0.0 &&\n\t\t\tisPositiveZero( v )\n\t\t) {\n\t\t\tm = v;\n\t\t}\n\t}\n\treturn m;\n}\n\n\n// EXPORTS //\n\nexport default max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\nimport { isPrimitive as isPositive } from '@stdlib/assert-is-positive-number' ;\nimport isnan from '@stdlib/assert-is-nan' ;\n\n\n// MAIN //\n\n/**\n* Validates parameters.\n*\n* @private\n* @param {number} mu - location parameter\n* @param {PositiveNumber} s - scale parameter\n* @returns {(Error|null)} error or null\n*\n* @example\n* var err = validate( 1.0, 2.0 );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( mu, s ) {\n\tif ( !isNumber( mu ) || isnan( mu ) ) {\n\t\treturn new TypeError( 'invalid argument. `mu` must be a number primitive and not `NaN`. Value: `' + mu + '`.' );\n\t}\n\tif ( !isPositive( s ) ) {\n\t\treturn new TypeError( 'invalid argument. `s` must be a positive number. Value: `' + s + '`.' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants-float64-pinf' ;\nimport NINF from '@stdlib/constants-float64-ninf' ;\n\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is infinite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is infinite\n*\n* @example\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( -Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( NaN );\n* // returns false\n*/\nfunction isInfinite( x ) {\n\treturn (x === PINF || x === NINF);\n}\n\n\n// EXPORTS //\n\nexport default isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* A 32-bit Mersenne Twister pseudorandom number generator.\n*\n* @module @stdlib/random-base-mt19937\n*\n* @example\n* import mt19937 from '@stdlib/random-base-mt19937' ;\n*\n* var v = mt19937();\n* // returns <number>\n*\n* @example\n* import { factory as factory } from '@stdlib/random-base-mt19937' ;\n*\n* var mt19937 = factory({\n*     'seed': 1234\n* });\n*\n* var v = mt19937();\n* // returns 822569775\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport mt19937 from './main.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( mt19937, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default mt19937;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js' ;\nimport randuint32 from './rand_uint32.js' ;\n\n\n// MAIN //\n\n/**\n* Generates a pseudorandom integer on the interval \\\\( [1,2^{32}-1) \\\\).\n*\n* ## Method\n*\n* -   When generating normalized double-precision floating-point numbers, we first generate two pseudorandom integers \\\\( x \\\\) and \\\\( y \\\\) on the interval \\\\( [1,2^{32}-1) \\\\) for a combined \\\\( 64 \\\\) random bits.\n*\n* -   We would like \\\\( 53 \\\\) random bits to generate a 53-bit precision integer and, thus, want to discard \\\\( 11 \\\\) of the generated bits.\n*\n* -   We do so by discarding \\\\( 5 \\\\) bits from \\\\( x \\\\) and \\\\( 6 \\\\) bits from \\\\( y \\\\).\n*\n* -   Accordingly, \\\\( x \\\\) contains \\\\( 27 \\\\) random bits, which are subsequently shifted left \\\\( 26 \\\\) bits (multiplied by \\\\( 2^{26} \\\\), and \\\\( y \\\\) contains \\\\( 26 \\\\) random bits to fill in the lower \\\\( 26 \\\\) bits. When summed, they combine to comprise \\\\( 53 \\\\) random bits of a double-precision floating-point integer.\n*\n* -   As an example, suppose, for the sake of argument, the 32-bit PRNG generates the maximum unsigned 32-bit integer \\\\( 2^{32}-1 \\\\) twice in a row. Then,\n*\n*     ```javascript\n*     x = 4294967295 >>> 5; // 00000111111111111111111111111111\n*     y = 4294967295 >>> 6; // 00000011111111111111111111111111\n*     ```\n*\n*     Multiplying \\\\( x \\\\) by \\\\( 2^{26} \\\\) returns \\\\( 9007199187632128 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 10000110011 11111111111111111111 11111100000000000000000000000000\n*     ```\n*\n*     Adding \\\\( y \\\\) yields \\\\( 9007199254740991 \\\\) (the maximum \"safe\" double-precision floating-point integer value), which, in binary, is\n*\n*     ```binarystring\n*     0 10000110011 11111111111111111111 11111111111111111111111111111111\n*     ```\n*\n* -   Similarly, suppose the 32-bit PRNG generates the following values\n*\n*     ```javascript\n*     x = 1 >>> 5;  // 0 => 00000000000000000000000000000000\n*     y = 64 >>> 6; // 1 => 00000000000000000000000000000001\n*     ```\n*\n*     Multiplying \\\\( x \\\\) by \\\\( 2^{26} \\\\) returns \\\\( 0 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 00000000000 00000000000000000000 00000000000000000000000000000000\n*     ```\n*\n*     Adding \\\\( y \\\\) yields \\\\( 1 \\\\), which, in binary, is\n*\n*     ```binarystring\n*     0 01111111111 00000000000000000000 00000000000000000000000000000000\n*     ```\n*\n* -   As different combinations of \\\\( x \\\\) and \\\\( y \\\\) are generated, different combinations of double-precision floating-point exponent and significand bits will be toggled, thus generating pseudorandom double-precision floating-point numbers.\n*\n*\n* ## References\n*\n* -   Matsumoto, Makoto, and Takuji Nishimura. 1998. \"Mersenne Twister: A 623-dimensionally Equidistributed Uniform Pseudo-random Number Generator.\" _ACM Transactions on Modeling and Computer Simulation_ 8 (1). New York, NY, USA: ACM: 3–30. doi:[10.1145/272991.272995][@matsumoto:1998a].\n* -   Harase, Shin. 2017. \"Conversion of Mersenne Twister to double-precision floating-point numbers.\" _ArXiv_ abs/1708.06018 (September). <https://arxiv.org/abs/1708.06018>.\n*\n* [@matsumoto:1998a]: https://doi.org/10.1145/272991.272995\n*\n*\n* @function mt19937\n* @type {PRNG}\n* @returns {PositiveInteger} pseudorandom integer\n*\n* @example\n* var v = mt19937();\n* // returns <number>\n*/\nvar mt19937 = factory({\n\t'seed': randuint32()\n});\n\n\n// EXPORTS //\n\nexport default mt19937;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint8Array from '@stdlib/array-uint8' ;\nimport Uint16Array from '@stdlib/array-uint16' ;\n\n\n// MAIN //\n\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint8': Uint8Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctors from './ctors.js' ;\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an environment is little endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is little endian\n*\n* @example\n* var bool = isLittleEndian();\n* // returns <boolean>\n*/\nfunction isLittleEndian() {\n\tvar uint16view;\n\tvar uint8view;\n\n\tuint16view = new ctors[ 'uint16' ]( 1 );\n\n\t/*\n\t* Set the uint16 view to a value having distinguishable lower and higher order words.\n\t*\n\t* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n\t*/\n\tuint16view[ 0 ] = 0x1234;\n\n\t// Create a uint8 view on top of the uint16 buffer:\n\tuint8view = new ctors[ 'uint8' ]( uint16view.buffer );\n\n\t// If little endian, the least significant byte will be first...\n\treturn ( uint8view[ 0 ] === 0x34 );\n}\n\n\n// MAIN //\n\nbool = isLittleEndian();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert-is-little-endian' ;\n\n\n// MAIN //\n\nvar HIGH;\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n} else {\n\tHIGH = 0; // first index\n}\n\n\n// EXPORTS //\n\nexport default HIGH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array-uint32' ;\nimport Float64Array from '@stdlib/array-float64' ;\nimport HIGH from './high.js' ;\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} higher order word\n*\n* @example\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\nfunction getHighWord( x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\treturn UINT32_VIEW[ HIGH ];\n}\n\n\n// EXPORTS //\n\nexport default getHighWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_cos.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport polyval13 from './polyval_c13.js' ;\nimport polyval46 from './polyval_c46.js' ;\n\n\n// MAIN //\n\n/**\n* Computes the cosine on \\\\( \\[-\\pi/4, \\pi/4] \\\\), where \\\\( \\pi/4 \\approx 0.785398164 \\\\).\n*\n* ## Method\n*\n* -   Since \\\\( \\cos(-x) = \\cos(x) \\\\), we need only to consider positive \\\\(x\\\\).\n*\n* -   If \\\\( x < 2^{-27} \\\\), return \\\\(1\\\\) which is inexact if \\\\( x \\ne 0 \\\\).\n*\n* -   \\\\( cos(x) \\\\) is approximated by a polynomial of degree \\\\(14\\\\) on \\\\( \\[0,\\pi/4] \\\\).\n*\n*     ```tex\n*     \\cos(x) \\approx 1 - \\frac{x \\cdot x}{2} + C_1 \\cdot x^4 + \\ldots + C_6 \\cdot x^{14}\n*     ```\n*\n*     where the Remez error is\n*\n*     ```tex\n*     \\left| \\cos(x) - \\left( 1 - \\frac{x^2}{2} + C_1x^4 + C_2x^6 + C_3x^8 + C_4x^{10} + C_5x^{12} + C_6x^{15} \\right) \\right| \\le 2^{-58}\n*     ```\n*\n* -   Let \\\\( C_1x^4 + C_2x^6 + C_3x^8 + C_4x^{10} + C_5x^{12} + C_6x^{14} \\\\), then\n*\n*     ```tex\n*     \\cos(x) \\approx 1 - \\frac{x \\cdot x}{2} + r\n*     ```\n*\n*     Since\n*\n*     ```tex\n*     \\cos(x+y) \\approx \\cos(x) - \\sin(x) \\cdot y \\approx \\cos(x) - x \\cdot y\n*     ```\n*\n*     a correction term is necessary in \\\\( \\cos(x) \\\\). Hence,\n*\n*     ```tex\n*     \\cos(x+y) = 1 - \\left( \\frac{x \\cdot x}{2} - (r - x \\cdot y) \\right)\n*     ```\n*\n*     For better accuracy, rearrange to\n*\n*     ```tex\n*     \\cos(x+y) \\approx w + \\left( t + ( r - x \\cdot y ) \\right)\n*     ```\n*\n*     where \\\\( w = 1 - \\frac{x \\cdot x}{2} \\\\) and \\\\( t \\\\) is a tiny correction term (\\\\( 1 - \\frac{x \\cdot x}{2} = w + t \\\\) exactly in infinite precision). The exactness of \\\\(w + t\\\\) in infinite precision depends on \\\\(w\\\\) and \\\\(t\\\\) having the same precision as \\\\(x\\\\).\n*\n*\n* @param {number} x - input value (in radians, assumed to be bounded by ~pi/4 in magnitude)\n* @param {number} y - tail of `x`\n* @returns {number} cosine\n*\n* @example\n* var v = kernelCos( 0.0, 0.0 );\n* // returns ~1.0\n*\n* @example\n* var v = kernelCos( 3.141592653589793/6.0, 0.0 );\n* // returns ~0.866\n*\n* @example\n* var v = kernelCos( 0.785, -1.144e-17 );\n* // returns ~0.707\n*\n* @example\n* var v = kernelCos( NaN, 0.0 );\n* // returns NaN\n*/\nfunction kernelCos( x, y ) {\n\tvar hz;\n\tvar r;\n\tvar w;\n\tvar z;\n\n\tz = x * x;\n\tw = z * z;\n\tr = z * polyval13( z );\n\tr += w * w * polyval46( z );\n\thz = 0.5 * z;\n\tw = 1.0 - hz;\n\treturn w + ( ((1.0-w) - hz) + ((z*r) - (x*y)) );\n}\n\n\n// EXPORTS //\n\nexport default kernelCos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 0.0416666666666666;\n\t}\n\treturn 0.0416666666666666 + (x * (-0.001388888888887411 + (x * 0.00002480158728947673))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a polynomial.\n*\n* ## Notes\n*\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the polynomial\n* @returns {number} evaluated polynomial\n*/\nfunction evalpoly( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn -2.7557314351390663e-7;\n\t}\n\treturn -2.7557314351390663e-7 + (x * (2.087572321298175e-9 + (x * -1.1359647557788195e-11))); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default evalpoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_sin.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar S1 = -1.66666666666666324348e-01; // 0xBFC55555, 0x55555549\nvar S2 = 8.33333333332248946124e-03;  // 0x3F811111, 0x1110F8A6\nvar S3 = -1.98412698298579493134e-04; // 0xBF2A01A0, 0x19C161D5\nvar S4 = 2.75573137070700676789e-06;  // 0x3EC71DE3, 0x57B1FE7D\nvar S5 = -2.50507602534068634195e-08; // 0xBE5AE5E6, 0x8A2B9CEB\nvar S6 = 1.58969099521155010221e-10;  // 0x3DE5D93A, 0x5ACFD57C\n\n\n// MAIN //\n\n/**\n* Computes the sine on \\\\( \\approx \\[-\\pi/4, \\pi/4] \\\\) (except on \\\\(-0\\\\)), where \\\\( \\pi/4 \\approx 0.7854 \\\\).\n*\n* ## Method\n*\n* -   Since \\\\( \\sin(-x) = -\\sin(x) \\\\), we need only to consider positive \\\\(x\\\\).\n*\n* -   Callers must return \\\\( \\sin(-0) = -0 \\\\) without calling here since our odd polynomial is not evaluated in a way that preserves \\\\(-0\\\\). Callers may do the optimization \\\\( \\sin(x) \\approx x \\\\) for tiny \\\\(x\\\\).\n*\n* -   \\\\( \\sin(x) \\\\) is approximated by a polynomial of degree \\\\(13\\\\) on \\\\( \\left\\[0,\\tfrac{pi}{4}\\right] \\\\)\n*\n*     ```tex\n*     \\sin(x) \\approx x + S_1 \\cdot x^3 + \\ldots + S_6 \\cdot x^{13}\n*     ```\n*\n*     where\n*\n*     ```tex\n*     \\left| \\frac{\\sin(x)}{x} \\left( 1 + S_1 \\cdot x + S_2 \\cdot x + S_3 \\cdot x + S_4 \\cdot x + S_5 \\cdot x + S_6 \\cdot x \\right) \\right| \\le 2^{-58}\n*     ```\n*\n* -   We have\n*\n*     ```tex\n*     \\sin(x+y) = \\sin(x) + \\sin'(x') \\cdot y \\approx \\sin(x) + (1-x*x/2) \\cdot y\n*     ```\n*\n*     For better accuracy, let\n*\n*     ```tex\n*     r = x^3 * \\left( S_2 + x^2 \\cdot \\left( S_3 + x^2 * \\left( S_4 + x^2 \\cdot ( S_5+x^2 \\cdot S_6 ) \\right) \\right) \\right)\n*     ```\n*\n*     then\n*\n*     ```tex\n*     \\sin(x) = x + \\left( S_1 \\cdot x + ( x \\cdot (r-y/2) + y ) \\right)\n*     ```\n*\n*\n* @param {number} x - input value (in radians, assumed to be bounded by `~pi/4` in magnitude)\n* @param {number} y - tail of `x`\n* @returns {number} sine\n*\n* @example\n* var v = kernelSin( 0.0, 0.0 );\n* // returns ~0.0\n*\n* @example\n* var v = kernelSin( 3.141592653589793/6.0, 0.0 );\n* // returns ~0.5\n*\n* @example\n* var v = kernelSin( 0.619, 9.279e-18 );\n* // returns ~0.58\n*\n* @example\n* var v = kernelSin( NaN, 0.0 );\n* // returns NaN\n*\n* @example\n* var v = kernelSin( 3.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = kernelSin( NaN, NaN );\n* // returns NaN\n*/\nfunction kernelSin( x, y ) {\n\tvar r;\n\tvar v;\n\tvar w;\n\tvar z;\n\n\tz = x * x;\n\tw = z * z;\n\tr = S2 + (z * (S3 + (z*S4))) + (z * w * (S5 + (z*S6)));\n\tv = z * x;\n\tif ( y === 0.0 ) {\n\t\treturn x + (v * (S1 + (z*r)));\n\t}\n\treturn x - (((z*((0.5*y) - (v*r))) - y) - (v*S1));\n}\n\n\n// EXPORTS //\n\nexport default kernelSin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert-is-little-endian' ;\n\n\n// MAIN //\n\nvar LOW;\nif ( isLittleEndian === true ) {\n\tLOW = 0; // first index\n} else {\n\tLOW = 1; // second index\n}\n\n\n// EXPORTS //\n\nexport default LOW;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert-is-little-endian' ;\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nexport default indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array-uint32' ;\nimport Float64Array from '@stdlib/array-float64' ;\nimport LOW from './low.js' ;\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\n\n// MAIN //\n\n/**\n* Returns a 32-bit unsigned integer corresponding to the less significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the lower order bits? If little endian, the first; if big endian, the second.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} lower order word\n*\n* @example\n* var w = getLowWord( 3.14e201 ); // => 10010011110010110101100010000010\n* // returns 2479577218\n*/\nfunction getLowWord( x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\treturn UINT32_VIEW[ LOW ];\n}\n\n\n// EXPORTS //\n\nexport default getLowWord;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array-uint32' ;\nimport Float64Array from '@stdlib/array-float64' ;\nimport indices from './indices.js' ;\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n*\n* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {uinteger32} high - higher order word (unsigned 32-bit integer)\n* @param {uinteger32} low - lower order word (unsigned 32-bit integer)\n* @returns {number} floating-point number\n*\n* @example\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* @example\n* var v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* @example\n* var v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* @example\n* var v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* @example\n* var v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* @example\n* var v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\nfunction fromWords( high, low ) {\n\tUINT32_VIEW[ HIGH ] = high;\n\tUINT32_VIEW[ LOW ] = low;\n\treturn FLOAT64_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default fromWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The bias of a double-precision floating-point number's exponent.\n*\n* @module @stdlib/constants-float64-exponent-bias\n* @type {integer32}\n*\n* @example\n* import FLOAT64_EXPONENT_BIAS from '@stdlib/constants-float64-exponent-bias' ;\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* Bias of a double-precision floating-point number's exponent.\n*\n* ## Notes\n*\n* The bias can be computed via\n*\n* ```tex\n* \\mathrm{bias} = 2^{k-1} - 1\n* ```\n*\n* where \\\\(k\\\\) is the number of bits in the exponent; here, \\\\(k = 11\\\\).\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_EXPONENT_BIAS = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_EXPONENT_BIAS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isLittleEndian from '@stdlib/assert-is-little-endian' ;\n\n\n// MAIN //\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif ( isLittleEndian === true ) {\n\tHIGH = 1; // second index\n\tLOW = 0; // first index\n} else {\n\tHIGH = 0; // first index\n\tLOW = 1; // second index\n}\nindices = {\n\t'HIGH': HIGH,\n\t'LOW': LOW\n};\n\n\n// EXPORTS //\n\nexport default indices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint32Array from '@stdlib/array-uint32' ;\nimport Float64Array from '@stdlib/array-float64' ;\nimport indices from './indices.js' ;\n\n\n// VARIABLES //\n\nvar FLOAT64_VIEW = new Float64Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT64_VIEW.buffer );\n\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW;\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* import Uint32Array from '@stdlib/array-uint32' ;\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( out, x ) {\n\tFLOAT64_VIEW[ 0 ] = x;\n\tout[ 0 ] = UINT32_VIEW[ HIGH ];\n\tout[ 1 ] = UINT32_VIEW[ LOW ];\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fcn from './to_words.js' ;\n\n\n// MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} x - input value\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* import Uint32Array from '@stdlib/array-uint32' ;\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( out, 3.14e201 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\nfunction toWords( out, x ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn fcn( [ 0, 0 ], out );\n\t}\n\treturn fcn( out, x );\n}\n\n\n// EXPORTS //\n\nexport default toWords;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toWords from '@stdlib/number-float64-base-to-words' ;\nimport getHighWord from '@stdlib/number-float64-base-get-high-word' ;\nimport fromWords from '@stdlib/number-float64-base-from-words' ;\n\n\n// VARIABLES //\n\n// 10000000000000000000000000000000 => 2147483648 => 0x80000000\nvar SIGN_MASK = 0x80000000>>>0; // asm type annotation\n\n// 01111111111111111111111111111111 => 2147483647 => 0x7fffffff\nvar MAGNITUDE_MASK = 0x7fffffff|0; // asm type annotation\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ];\n\n\n// MAIN //\n\n/**\n* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @param {number} x - number from which to derive a magnitude\n* @param {number} y - number from which to derive a sign\n* @returns {number} a double-precision floating-point number\n*\n* @example\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* @example\n* var z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* @example\n* var z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\nfunction copysign( x, y ) {\n\tvar hx;\n\tvar hy;\n\n\t// Split `x` into higher and lower order words:\n\ttoWords( WORDS, x );\n\thx = WORDS[ 0 ];\n\n\t// Turn off the sign bit of `x`:\n\thx &= MAGNITUDE_MASK;\n\n\t// Extract the higher order word from `y`:\n\thy = getHighWord( y );\n\n\t// Leave only the sign bit of `y` turned on:\n\thy &= SIGN_MASK;\n\n\t// Copy the sign bit of `y` to `x`:\n\thx |= hy;\n\n\t// Return a new value having the same magnitude as `x`, but with the sign of `y`:\n\treturn fromWords( hx, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nexport default copysign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the absolute value of a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\nfunction abs( x ) {\n\treturn Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math\n}\n\n\n// EXPORTS //\n\nexport default abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport FLOAT64_SMALLEST_NORMAL from '@stdlib/constants-float64-smallest-normal' ;\nimport isInfinite from '@stdlib/math-base-assert-is-infinite' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport abs from '@stdlib/math-base-special-abs' ;\n\n\n// VARIABLES //\n\n// (1<<52)\nvar SCALAR = 4503599627370496;\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\) and assigns results to a provided output array.\n*\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import pow from '@stdlib/math-base-special-pow' ;\n*\n* var out = normalize( 3.14e-319, [ 0.0, 0 ], 1, 0 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0, [ 0.0, 0 ], 1, 0 );\n* // returns [ 0.0, 0 ];\n*\n* @example\n* var out = normalize( Infinity, [ 0.0, 0 ], 1, 0 );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var out = normalize( -Infinity, [ 0.0, 0 ], 1, 0 );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN, [ 0.0, 0 ], 1, 0 );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( x, out, stride, offset ) {\n\tif ( isnan( x ) || isInfinite( x ) ) {\n\t\tout[ offset ] = x;\n\t\tout[ offset + stride ] = 0;\n\t\treturn out;\n\t}\n\tif ( x !== 0.0 && abs( x ) < FLOAT64_SMALLEST_NORMAL ) {\n\t\tout[ offset ] = x * SCALAR;\n\t\tout[ offset + stride ] = -52;\n\t\treturn out;\n\t}\n\tout[ offset ] = x;\n\tout[ offset + stride ] = 0;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Smallest positive double-precision floating-point normal number.\n*\n* @module @stdlib/constants-float64-smallest-normal\n* @type {number}\n*\n* @example\n* import FLOAT64_SMALLEST_NORMAL from '@stdlib/constants-float64-smallest-normal' ;\n* // returns 2.2250738585072014e-308\n*/\n\n\n// MAIN //\n\n/**\n* The smallest positive double-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000001 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.2250738585072014e-308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308;\n\n\n// EXPORTS //\n\nexport default FLOAT64_SMALLEST_NORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @module @stdlib/number-float64-base-normalize\n*\n* @example\n* import normalize from '@stdlib/number-float64-base-normalize' ;\n* import pow from '@stdlib/math-base-special-pow' ;\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0, exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* import Float64Array from '@stdlib/array-float64' ;\n* import normalize from '@stdlib/number-float64-base-normalize' ;\n*\n* var out = new Float64Array( 2 );\n*\n* var v = normalize.assign( 3.14e-319, out, 1, 0 );\n* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport assign from './assign.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fcn from './assign.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @param {number} x - input value\n* @returns {NumberArray} output array\n*\n* @example\n* import pow from '@stdlib/math-base-special-pow' ;\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* var out = normalize( Infinity );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var out = normalize( -Infinity );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN );\n* // returns [ NaN, 0 ]\n*/\nfunction normalize( x ) {\n\treturn fcn( x, [ 0.0, 0 ], 1, 0 );\n}\n\n\n// EXPORTS //\n\nexport default normalize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// NOTES //\n\n/*\n* => ldexp: load exponent (see [The Open Group]{@link http://pubs.opengroup.org/onlinepubs/9699919799/functions/ldexp.html} and [cppreference]{@link http://en.cppreference.com/w/c/numeric/math/ldexp}).\n*/\n\n\n// MODULES //\n\nimport PINF from '@stdlib/constants-float64-pinf' ;\nimport NINF from '@stdlib/constants-float64-ninf' ;\nimport BIAS from '@stdlib/constants-float64-exponent-bias' ;\nimport MAX_EXPONENT from '@stdlib/constants-float64-max-base2-exponent' ;\nimport MAX_SUBNORMAL_EXPONENT from '@stdlib/constants-float64-max-base2-exponent-subnormal' ;\nimport MIN_SUBNORMAL_EXPONENT from '@stdlib/constants-float64-min-base2-exponent-subnormal' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport isInfinite from '@stdlib/math-base-assert-is-infinite' ;\nimport copysign from '@stdlib/math-base-special-copysign' ;\nimport { assign as normalize } from '@stdlib/number-float64-base-normalize' ;\nimport floatExp from '@stdlib/number-float64-base-exponent' ;\nimport toWords from '@stdlib/number-float64-base-to-words' ;\nimport fromWords from '@stdlib/number-float64-base-from-words' ;\n\n\n// VARIABLES //\n\n// 1/(1<<52) = 1/(2**52) = 1/4503599627370496\nvar TWO52_INV = 2.220446049250313e-16;\n\n// Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223\nvar CLEAR_EXP_MASK = 0x800fffff>>>0; // asm type annotation\n\n// Normalization workspace:\nvar FRAC = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n// High/low words workspace:\nvar WORDS = [ 0, 0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Multiplies a double-precision floating-point number by an integer power of two.\n*\n* @param {number} frac - fraction\n* @param {integer} exp - exponent\n* @returns {number} double-precision floating-point number\n*\n* @example\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* @example\n* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* @example\n* var x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* @example\n* var x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* @example\n* var x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* @example\n* var x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* @example\n* var x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\nfunction ldexp( frac, exp ) {\n\tvar high;\n\tvar m;\n\tif (\n\t\texp === 0 ||\n\t\tfrac === 0.0 || // handles +-0\n\t\tisnan( frac ) ||\n\t\tisInfinite( frac )\n\t) {\n\t\treturn frac;\n\t}\n\t// Normalize the input fraction:\n\tnormalize( frac, FRAC, 1, 0 );\n\tfrac = FRAC[ 0 ];\n\texp += FRAC[ 1 ];\n\n\t// Extract the exponent from `frac` and add it to `exp`:\n\texp += floatExp( frac );\n\n\t// Check for underflow/overflow...\n\tif ( exp < MIN_SUBNORMAL_EXPONENT ) {\n\t\treturn copysign( 0.0, frac );\n\t}\n\tif ( exp > MAX_EXPONENT ) {\n\t\tif ( frac < 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn PINF;\n\t}\n\t// Check for a subnormal and scale accordingly to retain precision...\n\tif ( exp <= MAX_SUBNORMAL_EXPONENT ) {\n\t\texp += 52;\n\t\tm = TWO52_INV;\n\t} else {\n\t\tm = 1.0;\n\t}\n\t// Split the fraction into higher and lower order words:\n\ttoWords( WORDS, frac );\n\thigh = WORDS[ 0 ];\n\n\t// Clear the exponent bits within the higher order word:\n\thigh &= CLEAR_EXP_MASK;\n\n\t// Set the exponent bits to the new exponent:\n\thigh |= ((exp+BIAS) << 20);\n\n\t// Create a new floating-point number:\n\treturn m * fromWords( high, WORDS[ 1 ] );\n}\n\n\n// EXPORTS //\n\nexport default ldexp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from '@stdlib/number-float64-base-get-high-word' ;\nimport EXP_MASK from '@stdlib/constants-float64-high-word-exponent-mask' ;\nimport BIAS from '@stdlib/constants-float64-exponent-bias' ;\n\n\n// MAIN //\n\n/**\n* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {integer32} unbiased exponent\n*\n* @example\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* @example\n* var exp = exponent( -3.14 );\n* // returns 1\n*\n* @example\n* var exp = exponent( 0.0 );\n* // returns -1023\n*\n* @example\n* var exp = exponent( NaN );\n* // returns 1024\n*/\nfunction exponent( x ) {\n\t// Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:\n\tvar high = getHighWord( x );\n\n\t// Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:\n\thigh = ( high & EXP_MASK ) >>> 20;\n\n\t// Remove the bias and return:\n\treturn (high - BIAS)|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nexport default exponent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* @module @stdlib/constants-float64-high-word-exponent-mask\n* @type {uinteger32}\n*\n* @example\n* import FLOAT64_HIGH_WORD_EXPONENT_MASK from '@stdlib/constants-float64-high-word-exponent-mask' ;\n* // returns 2146435072\n*/\n\n\n// MAIN //\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2146435072 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7ff00000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000;\n\n\n// EXPORTS //\n\nexport default FLOAT64_HIGH_WORD_EXPONENT_MASK;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants-float64-min-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* import FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL from '@stdlib/constants-float64-min-base2-exponent-subnormal' ;\n* // returns -1074\n*/\n\n\n// MAIN //\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* -(BIAS+(52-1)) = -(1023+51) = -1074\n* ```\n*\n* where `BIAS = 1023` and `52` is the number of digits in the significand.\n*\n* @constant\n* @type {integer32}\n* @default -1074\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants-float64-max-base2-exponent\n* @type {integer32}\n*\n* @example\n* import FLOAT64_MAX_BASE2_EXPONENT from '@stdlib/constants-float64-max-base2-exponent' ;\n* // returns 1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* ```text\n* 11111111110 => 2046 - BIAS = 1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT = 1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_MAX_BASE2_EXPONENT;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants-float64-max-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* import FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL from '@stdlib/constants-float64-max-base2-exponent-subnormal' ;\n* // returns -1023\n*/\n\n\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* 00000000000 => 0 - BIAS = -1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default -1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023|0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled from '@stdlib/array-base-filled' ;\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled \"generic\" array.\n*\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} output array\n*\n* @example\n* var out = zeros( 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*/\nfunction zeros( len ) {\n\treturn filled( 0.0, len );\n}\n\n\n// EXPORTS //\n\nexport default zeros;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled \"generic\" array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} filled array\n*\n* @example\n* var out = filled( 0.0, 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*\n* @example\n* var out = filled( 'beep', 3 );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\nfunction filled( value, len ) {\n\tvar arr;\n\tvar i;\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr.push( value );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filled;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n/* eslint-disable array-element-newline */\n\n'use strict';\n\n// MODULES //\n\nimport floor from '@stdlib/math-base-special-floor' ;\nimport ldexp from '@stdlib/math-base-special-ldexp' ;\nimport zeros from '@stdlib/array-base-zeros' ;\n\n\n// VARIABLES //\n\n/*\n* Table of constants for `2/π` (`396` hex digits, `476` decimal).\n*\n* Integer array which contains the (`24*i`)-th to (`24*i+23`)-th bit of `2/π` after binary point. The corresponding floating value is\n*\n* ```tex\n* \\operatorname{ipio2}[i] \\cdot 2^{-24(i+1)}\n* ```\n*\n* This table must have at least `(e0-3)/24 + jk` terms. For quad precision (`e0 <= 16360`, `jk = 6`), this is `686`.\n*/\nvar IPIO2 = [\n\t0xA2F983, 0x6E4E44, 0x1529FC, 0x2757D1, 0xF534DD, 0xC0DB62,\n\t0x95993C, 0x439041, 0xFE5163, 0xABDEBB, 0xC561B7, 0x246E3A,\n\t0x424DD2, 0xE00649, 0x2EEA09, 0xD1921C, 0xFE1DEB, 0x1CB129,\n\t0xA73EE8, 0x8235F5, 0x2EBB44, 0x84E99C, 0x7026B4, 0x5F7E41,\n\t0x3991D6, 0x398353, 0x39F49C, 0x845F8B, 0xBDF928, 0x3B1FF8,\n\t0x97FFDE, 0x05980F, 0xEF2F11, 0x8B5A0A, 0x6D1F6D, 0x367ECF,\n\t0x27CB09, 0xB74F46, 0x3F669E, 0x5FEA2D, 0x7527BA, 0xC7EBE5,\n\t0xF17B3D, 0x0739F7, 0x8A5292, 0xEA6BFB, 0x5FB11F, 0x8D5D08,\n\t0x560330, 0x46FC7B, 0x6BABF0, 0xCFBC20, 0x9AF436, 0x1DA9E3,\n\t0x91615E, 0xE61B08, 0x659985, 0x5F14A0, 0x68408D, 0xFFD880,\n\t0x4D7327, 0x310606, 0x1556CA, 0x73A8C9, 0x60E27B, 0xC08C6B\n];\n\n// Double precision array, obtained by cutting `π/2` into `24` bits chunks...\nvar PIO2 = [\n\t1.57079625129699707031e+00, // 0x3FF921FB, 0x40000000\n\t7.54978941586159635335e-08, // 0x3E74442D, 0x00000000\n\t5.39030252995776476554e-15, // 0x3CF84698, 0x80000000\n\t3.28200341580791294123e-22, // 0x3B78CC51, 0x60000000\n\t1.27065575308067607349e-29, // 0x39F01B83, 0x80000000\n\t1.22933308981111328932e-36, // 0x387A2520, 0x40000000\n\t2.73370053816464559624e-44, // 0x36E38222, 0x80000000\n\t2.16741683877804819444e-51  // 0x3569F31D, 0x00000000\n];\nvar TWO24 = 1.67772160000000000000e+07;  // 0x41700000, 0x00000000\nvar TWON24 = 5.96046447753906250000e-08; // 0x3E700000, 0x00000000\n\n// Arrays for storing temporary values (note that, in C, this is not thread safe):\nvar F = zeros( 20 );\nvar Q = zeros( 20 );\nvar FQ = zeros( 20 );\nvar IQ = zeros( 20 );\n\n\n// FUNCTIONS //\n\n/**\n* Performs the computation for `kernelRempio2()`.\n*\n* @private\n* @param {PositiveNumber} x - input value\n* @param {(Array|TypedArray|Object)} y - output object for storing double precision numbers\n* @param {integer} jz - number of terms of `ipio2[]` used\n* @param {Array<integer>} q - array with integral values, representing the 24-bits chunk of the product of `x` and `2/π`\n* @param {integer} q0 - the corresponding exponent of `q[0]` (the exponent for `q[i]` would be `q0-24*i`)\n* @param {integer} jk - `jk+1` is the initial number of terms of `IPIO2[]` needed in the computation\n* @param {integer} jv - index for pointing to the suitable `ipio2[]` for the computation\n* @param {integer} jx - `nx - 1`\n* @param {Array<number>} f - `IPIO2[]` in floating point\n* @returns {number} last three binary digits of `N`\n*/\nfunction compute( x, y, jz, q, q0, jk, jv, jx, f ) {\n\tvar carry;\n\tvar fw;\n\tvar ih;\n\tvar jp;\n\tvar i;\n\tvar k;\n\tvar n;\n\tvar j;\n\tvar z;\n\n\t// `jp+1` is the number of terms in `PIO2[]` needed:\n\tjp = jk;\n\n\t// Distill `q[]` into `IQ[]` in reverse order...\n\tz = q[ jz ];\n\tj = jz;\n\tfor ( i = 0; j > 0; i++ ) {\n\t\tfw = ( TWON24 * z )|0;\n\t\tIQ[ i ] = ( z - (TWO24*fw) )|0;\n\t\tz = q[ j-1 ] + fw;\n\t\tj -= 1;\n\t}\n\t// Compute `n`...\n\tz = ldexp( z, q0 );\n\tz -= 8.0 * floor( z*0.125 ); // Trim off integer >= 8\n\tn = z|0;\n\tz -= n;\n\tih = 0;\n\tif ( q0 > 0 ) {\n\t\t// Need `IQ[jz-1]` to determine `n`...\n\t\ti = ( IQ[ jz-1 ] >> (24-q0) );\n\t\tn += i;\n\t\tIQ[ jz-1 ] -= ( i << (24-q0) );\n\t\tih = ( IQ[ jz-1 ] >> (23-q0) );\n\t}\n\telse if ( q0 === 0 ) {\n\t\tih = ( IQ[ jz-1 ] >> 23 );\n\t}\n\telse if ( z >= 0.5 ) {\n\t\tih = 2;\n\t}\n\t// Case: q > 0.5\n\tif ( ih > 0 ) {\n\t\tn += 1;\n\t\tcarry = 0;\n\n\t\t// Compute `1-q`:\n\t\tfor ( i = 0; i < jz; i++ ) {\n\t\t\tj = IQ[ i ];\n\t\t\tif ( carry === 0 ) {\n\t\t\t\tif ( j !== 0 ) {\n\t\t\t\t\tcarry = 1;\n\t\t\t\t\tIQ[ i ] = 0x1000000 - j;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tIQ[ i ] = 0xffffff - j;\n\t\t\t}\n\t\t}\n\t\tif ( q0 > 0 ) {\n\t\t\t// Rare case: chance is 1 in 12...\n\t\t\tswitch ( q0 ) { // eslint-disable-line default-case\n\t\t\tcase 1:\n\t\t\t\tIQ[ jz-1 ] &= 0x7fffff;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tIQ[ jz-1 ] &= 0x3fffff;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( ih === 2 ) {\n\t\t\tz = 1.0 - z;\n\t\t\tif ( carry !== 0 ) {\n\t\t\t\tz -= ldexp( 1.0, q0 );\n\t\t\t}\n\t\t}\n\t}\n\t// Check if re-computation is needed...\n\tif ( z === 0.0 ) {\n\t\tj = 0;\n\t\tfor ( i = jz-1; i >= jk; i-- ) {\n\t\t\tj |= IQ[ i ];\n\t\t}\n\t\tif ( j === 0 ) {\n\t\t\t// Need re-computation...\n\t\t\tfor ( k = 1; IQ[ jk-k ] === 0; k++ ) {\n\t\t\t\t// `k` is the number of terms needed...\n\t\t\t}\n\t\t\tfor ( i = jz+1; i <= jz+k; i++ ) {\n\t\t\t\t// Add `q[jz+1]` to `q[jz+k]`...\n\t\t\t\tf[ jx+i ] = IPIO2[ jv+i ];\n\t\t\t\tfw = 0.0;\n\t\t\t\tfor ( j = 0; j <= jx; j++ ) {\n\t\t\t\t\tfw += x[ j ] * f[ jx + (i-j) ];\n\t\t\t\t}\n\t\t\t\tq[ i ] = fw;\n\t\t\t}\n\t\t\tjz += k;\n\t\t\treturn compute( x, y, jz, q, q0, jk, jv, jx, f );\n\t\t}\n\t}\n\t// Chop off zero terms...\n\tif ( z === 0.0 ) {\n\t\tjz -= 1;\n\t\tq0 -= 24;\n\t\twhile ( IQ[ jz ] === 0 ) {\n\t\t\tjz -= 1;\n\t\t\tq0 -= 24;\n\t\t}\n\t} else {\n\t\t// Break `z` into 24-bit if necessary...\n\t\tz = ldexp( z, -q0 );\n\t\tif ( z >= TWO24 ) {\n\t\t\tfw = (TWON24*z)|0;\n\t\t\tIQ[ jz ] = ( z - (TWO24*fw) )|0;\n\t\t\tjz += 1;\n\t\t\tq0 += 24;\n\t\t\tIQ[ jz ] = fw;\n\t\t} else {\n\t\t\tIQ[ jz ] = z|0;\n\t\t}\n\t}\n\t// Convert integer \"bit\" chunk to floating-point value...\n\tfw = ldexp( 1.0, q0 );\n\tfor ( i = jz; i >= 0; i-- ) {\n\t\tq[ i ] = fw * IQ[i];\n\t\tfw *= TWON24;\n\t}\n\t// Compute `PIO2[0,...,jp]*q[jz,...,0]`...\n\tfor ( i = jz; i >= 0; i-- ) {\n\t\tfw = 0.0;\n\t\tfor ( k = 0; k <= jp && k <= jz-i; k++ ) {\n\t\t\tfw += PIO2[ k ] * q[ i+k ];\n\t\t}\n\t\tFQ[ jz-i ] = fw;\n\t}\n\t// Compress `FQ[]` into `y[]`...\n\tfw = 0.0;\n\tfor ( i = jz; i >= 0; i-- ) {\n\t\tfw += FQ[ i ];\n\t}\n\tif ( ih === 0 ) {\n\t\ty[ 0 ] = fw;\n\t} else {\n\t\ty[ 0 ] = -fw;\n\t}\n\tfw = FQ[ 0 ] - fw;\n\tfor ( i = 1; i <= jz; i++ ) {\n\t\tfw += FQ[i];\n\t}\n\tif ( ih === 0 ) {\n\t\ty[ 1 ] = fw;\n\t} else {\n\t\ty[ 1 ] = -fw;\n\t}\n\treturn ( n & 7 );\n}\n\n\n// MAIN //\n\n/**\n* Returns the last three binary digits of `N` with `y = x - Nπ/2` so that `|y| < π/2`.\n*\n* ## Method\n*\n* -   The method is to compute the integer (`mod 8`) and fraction parts of `2x/π` without doing the full multiplication. In general, we skip the part of the product that is known to be a huge integer (more accurately, equals `0 mod 8` ). Thus, the number of operations is independent of the exponent of the input.\n*\n* @private\n* @param {PositiveNumber} x - input value\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @param {PositiveInteger} e0 - the exponent of `x[0]` (must be <= 16360)\n* @param {PositiveInteger} nx - dimension of `x[]`\n* @returns {number} last three binary digits of `N`\n*/\nfunction kernelRempio2( x, y, e0, nx ) {\n\tvar fw;\n\tvar jk;\n\tvar jv;\n\tvar jx;\n\tvar jz;\n\tvar q0;\n\tvar i;\n\tvar j;\n\tvar m;\n\n\t// Initialize `jk` for double-precision floating-point numbers:\n\tjk = 4;\n\n\t// Determine `jx`, `jv`, `q0` (note that `q0 < 3`):\n\tjx = nx - 1;\n\tjv = ( (e0 - 3) / 24 )|0;\n\tif ( jv < 0 ) {\n\t\tjv = 0;\n\t}\n\tq0 = e0 - (24 * (jv + 1));\n\n\t// Set up `F[0]` to `F[jx+jk]` where `F[jx+jk] = IPIO2[jv+jk]`:\n\tj = jv - jx;\n\tm = jx + jk;\n\tfor ( i = 0; i <= m; i++ ) {\n\t\tif ( j < 0 ) {\n\t\t\tF[ i ] = 0.0;\n\t\t} else {\n\t\t\tF[ i ] = IPIO2[ j ];\n\t\t}\n\t\tj += 1;\n\t}\n\t// Compute `Q[0],Q[1],...,Q[jk]`:\n\tfor ( i = 0; i <= jk; i++ ) {\n\t\tfw = 0.0;\n\t\tfor ( j = 0; j <= jx; j++ ) {\n\t\t\tfw += x[ j ] * F[ jx + (i-j) ];\n\t\t}\n\t\tQ[ i ] = fw;\n\t}\n\tjz = jk;\n\treturn compute( x, y, jz, Q, q0, jk, jv, jx, F );\n}\n\n\n// EXPORTS //\n\nexport default kernelRempio2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation\n\n/**\n* Rounds a numeric value to the nearest integer.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.5 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.6 );\n* // returns -5.0\n*\n* @example\n* var v = round( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.5 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.2 );\n* // returns 9.0\n*\n* @example\n* var v = round( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = round( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = round( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = round( -Infinity );\n* // returns -Infinity\n*\n* @example\n* var v = round( NaN );\n* // returns NaN\n*/\nvar round = Math.round; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default round;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport round from '@stdlib/math-base-special-round' ;\nimport getHighWord from '@stdlib/number-float64-base-get-high-word' ;\n\n\n// VARIABLES //\n\n// 53 bits of 2/π:\nvar INVPIO2 = 6.36619772367581382433e-01; // 0x3FE45F30, 0x6DC9C883\n\n// First 33 bits of π/2:\nvar PIO2_1 = 1.57079632673412561417e+00;  // 0x3FF921FB, 0x54400000\n\n// PIO2_1T = π/2 - PIO2_1:\nvar PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331\n\n// Another 33 bits of π/2:\nvar PIO2_2 = 6.07710050630396597660e-11;  // 0x3DD0B461, 0x1A600000\n\n// PIO2_2T = π/2 - ( PIO2_1 + PIO2_2 ):\nvar PIO2_2T = 2.02226624879595063154e-21; // 0x3BA3198A, 0x2E037073\n\n// Another 33 bits of π/2:\nvar PIO2_3 = 2.02226624871116645580e-21;  // 0x3BA3198A, 0x2E000000\n\n// PIO2_3T = π/2 - ( PIO2_1 + PIO2_2 + PIO2_3 ):\nvar PIO2_3T = 8.47842766036889956997e-32; // 0x397B839A, 0x252049C1\n\n// Exponent mask (2047 => 0x7ff):\nvar EXPONENT_MASK = 0x7ff|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Computes `x - nπ/2 = r` for medium-sized inputs.\n*\n* @private\n* @param {number} x - input value\n* @param {uint32} ix - high word of `x`\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @returns {integer} factor of `π/2`\n*/\nfunction rempio2Medium( x, ix, y ) {\n\tvar high;\n\tvar n;\n\tvar t;\n\tvar r;\n\tvar w;\n\tvar i;\n\tvar j;\n\n\tn = round( x * INVPIO2 );\n\tr = x - ( n * PIO2_1 );\n\tw = n * PIO2_1T;\n\n\t// First rounding (good to 85 bits)...\n\tj = (ix >> 20)|0; // asm type annotation\n\ty[ 0 ] = r - w;\n\thigh = getHighWord( y[0] );\n\ti = j - ( (high >> 20) & EXPONENT_MASK );\n\n\t// Check if a second iteration is needed (good to 118 bits)...\n\tif ( i > 16 ) {\n\t\tt = r;\n\t\tw = n * PIO2_2;\n\t\tr = t - w;\n\t\tw = (n * PIO2_2T) - ((t-r) - w);\n\t\ty[ 0 ] = r - w;\n\t\thigh = getHighWord( y[0] );\n\t\ti = j - ( (high >> 20) & EXPONENT_MASK );\n\n\t\t// Check if a third iteration is needed (151 bits accumulated)...\n\t\tif ( i > 49 ) {\n\t\t\tt = r;\n\t\t\tw = n * PIO2_3;\n\t\t\tr = t - w;\n\t\t\tw = (n * PIO2_3T) - ((t-r) - w);\n\t\t\ty[ 0 ] = r - w;\n\t\t}\n\t}\n\ty[ 1 ] = (r - y[0]) - w;\n\treturn n;\n}\n\n\n// EXPORTS //\n\nexport default rempio2Medium;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n*\n* Optimized by Bruce D. Evans.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from '@stdlib/number-float64-base-get-high-word' ;\nimport getLowWord from '@stdlib/number-float64-base-get-low-word' ;\nimport fromWords from '@stdlib/number-float64-base-from-words' ;\nimport rempio2Kernel from './kernel_rempio2.js' ;\nimport rempio2Medium from './rempio2_medium.js' ;\n\n\n// VARIABLES //\n\nvar ZERO = 0.00000000000000000000e+00;    // 0x00000000, 0x00000000\nvar TWO24 = 1.67772160000000000000e+07;   // 0x41700000, 0x00000000\n\n// 33 bits of π/2:\nvar PIO2_1 = 1.57079632673412561417e+00;  // 0x3FF921FB, 0x54400000\n\n// PIO2_1T = π/2 - PIO2_1:\nvar PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331\nvar TWO_PIO2_1T = 2.0 * PIO2_1T;\nvar THREE_PIO2_1T = 3.0 * PIO2_1T;\nvar FOUR_PIO2_1T = 4.0 * PIO2_1T;\n\n// Absolute value mask: 0x7fffffff = 2147483647 => 01111111111111111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// Exponent mask: 0x7ff00000 = 2146435072 => 01111111111100000000000000000000\nvar EXPONENT_MASK = 0x7ff00000|0; // asm type annotation\n\n// High word significand mask: 0xfffff = 1048575 => 00000000000011111111111111111111\nvar SIGNIFICAND_MASK = 0xfffff|0; // asm type annotation\n\n// High word significand for π and π/2: 0x921fb = 598523 => 00000000000010010010000111111011\nvar PI_HIGH_WORD_SIGNIFICAND = 0x921fb|0; // asm type annotation\n\n// High word for π/4: 0x3fe921fb = 1072243195 => 00111111111010010010000111111011\nvar PIO4_HIGH_WORD = 0x3fe921fb|0; // asm type annotation\n\n// High word for 3π/4: 0x4002d97c = 1073928572 => 01000000000000101101100101111100\nvar THREE_PIO4_HIGH_WORD = 0x4002d97c|0; // asm type annotation\n\n// High word for 5π/4: 0x400f6a7a = 1074752122 => 01000000000011110110101001111010\nvar FIVE_PIO4_HIGH_WORD = 0x400f6a7a|0; // asm type annotation\n\n// High word for 6π/4: 0x4012d97c = 1074977148 => 01000000000100101101100101111100\nvar THREE_PIO2_HIGH_WORD = 0x4012d97c|0; // asm type annotation\n\n// High word for 7π/4: 0x4015fdbc = 1075183036 => 01000000000101011111110110111100\nvar SEVEN_PIO4_HIGH_WORD = 0x4015fdbc|0; // asm type annotation\n\n// High word for 8π/4: 0x401921fb = 1075388923 => 01000000000110010010000111111011\nvar TWO_PI_HIGH_WORD = 0x401921fb|0; // asm type annotation\n\n// High word for 9π/4: 0x401c463b = 1075594811 => 01000000000111000100011000111011\nvar NINE_PIO4_HIGH_WORD = 0x401c463b|0; // asm type annotation\n\n// 2^20*π/2 = 1647099.3291652855 => 0100000100111001001000011111101101010100010001000010110100011000 => high word => 0x413921fb = 1094263291 => 01000001001110010010000111111011\nvar MEDIUM = 0x413921fb|0; // asm type annotation\n\n// Arrays for storing temporary values:\nvar TX = [ 0.0, 0.0, 0.0 ]; // WARNING: not thread safe\nvar TY = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Computes `x - nπ/2 = r`.\n*\n* ## Notes\n*\n* -   Returns `n` and stores the remainder `r` as two numbers `y[0]` and `y[1]`, such that `y[0]+y[1] = r`.\n*\n*\n* @param {number} x - input value\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @returns {integer} factor of `π/2`\n*\n* @example\n* var y = [ 0.0, 0.0 ];\n* var n = rempio2( 128.0, y );\n* // returns 81\n*\n* var y1 = y[ 0 ];\n* // returns ~0.765\n*\n* var y2 = y[ 1 ];\n* // returns ~3.618e-17\n*\n* @example\n* var y = [ 0.0, 0.0 ];\n* var n = rempio2( NaN, y );\n* // returns 0\n*\n* var y1 = y[ 0 ];\n* // returns NaN\n*\n* var y2 = y[ 1 ];\n* // returns NaN\n*/\nfunction rempio2( x, y ) {\n\tvar low;\n\tvar e0;\n\tvar hx;\n\tvar ix;\n\tvar nx;\n\tvar i;\n\tvar n;\n\tvar z;\n\n\thx = getHighWord( x );\n\tix = (hx & ABS_MASK)|0; // asm type annotation\n\n\t// Case: |x| ~<= π/4 (no need for reduction)\n\tif ( ix <= PIO4_HIGH_WORD ) {\n\t\ty[ 0 ] = x;\n\t\ty[ 1 ] = 0.0;\n\t\treturn 0;\n\t}\n\t// Case: |x| ~<= 5π/4\n\tif ( ix <= FIVE_PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~= π/2 or π\n\t\tif ( (ix & SIGNIFICAND_MASK) === PI_HIGH_WORD_SIGNIFICAND ) {\n\t\t\t// Cancellation => use medium case\n\t\t\treturn rempio2Medium( x, ix, y );\n\t\t}\n\t\t// Case: |x| ~<= 3π/4\n\t\tif ( ix <= THREE_PIO4_HIGH_WORD ) {\n\t\t\tif ( x > 0.0 ) {\n\t\t\t\tz = x - PIO2_1;\n\t\t\t\ty[ 0 ] = z - PIO2_1T;\n\t\t\t\ty[ 1 ] = (z - y[0]) - PIO2_1T;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tz = x + PIO2_1;\n\t\t\ty[ 0 ] = z + PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) + PIO2_1T;\n\t\t\treturn -1;\n\t\t}\n\t\tif ( x > 0.0 ) {\n\t\t\tz = x - ( 2.0*PIO2_1 );\n\t\t\ty[ 0 ] = z - TWO_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) - TWO_PIO2_1T;\n\t\t\treturn 2;\n\t\t}\n\t\tz = x + ( 2.0*PIO2_1 );\n\t\ty[ 0 ] = z + TWO_PIO2_1T;\n\t\ty[ 1 ] = (z - y[0]) + TWO_PIO2_1T;\n\t\treturn -2;\n\t}\n\t// Case: |x| ~<= 9π/4\n\tif ( ix <= NINE_PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~<= 7π/4\n\t\tif ( ix <= SEVEN_PIO4_HIGH_WORD ) {\n\t\t\t// Case: |x| ~= 3π/2\n\t\t\tif ( ix === THREE_PIO2_HIGH_WORD ) {\n\t\t\t\treturn rempio2Medium( x, ix, y );\n\t\t\t}\n\t\t\tif ( x > 0.0 ) {\n\t\t\t\tz = x - ( 3.0*PIO2_1 );\n\t\t\t\ty[ 0 ] = z - THREE_PIO2_1T;\n\t\t\t\ty[ 1 ] = (z - y[0]) - THREE_PIO2_1T;\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t\tz = x + ( 3.0*PIO2_1 );\n\t\t\ty[ 0 ] = z + THREE_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) + THREE_PIO2_1T;\n\t\t\treturn -3;\n\t\t}\n\t\t// Case: |x| ~= 4π/2\n\t\tif ( ix === TWO_PI_HIGH_WORD ) {\n\t\t\treturn rempio2Medium( x, ix, y );\n\t\t}\n\t\tif ( x > 0.0 ) {\n\t\t\tz = x - ( 4.0*PIO2_1 );\n\t\t\ty[ 0 ] = z - FOUR_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) - FOUR_PIO2_1T;\n\t\t\treturn 4;\n\t\t}\n\t\tz = x + ( 4.0*PIO2_1 );\n\t\ty[ 0 ] = z + FOUR_PIO2_1T;\n\t\ty[ 1 ] = (z - y[0]) + FOUR_PIO2_1T;\n\t\treturn -4;\n\t}\n\t// Case: |x| ~< 2^20*π/2 (medium size)\n\tif ( ix < MEDIUM ) {\n\t\treturn rempio2Medium( x, ix, y );\n\t}\n\t// Case: x is NaN or infinity\n\tif ( ix >= EXPONENT_MASK ) {\n\t\ty[ 0 ] = NaN;\n\t\ty[ 1 ] = NaN;\n\t\treturn 0.0;\n\t}\n\t// Set z = scalbn(|x|, ilogb(x)-23)...\n\tlow = getLowWord( x );\n\te0 = (ix >> 20) - 1046; // `e0 = ilogb(z) - 23` => unbiased exponent minus 23\n\tz = fromWords( ix - ((e0 << 20)|0), low );\n\tfor ( i = 0; i < 2; i++ ) {\n\t\tTX[ i ] = z|0;\n\t\tz = (z - TX[i]) * TWO24;\n\t}\n\tTX[ 2 ] = z;\n\tnx = 3;\n\twhile ( TX[ nx-1 ] === ZERO ) {\n\t\t// Skip zero term...\n\t\tnx -= 1;\n\t}\n\tn = rempio2Kernel( TX, TY, e0, nx, 1 );\n\tif ( x < 0.0 ) {\n\t\ty[ 0 ] = -TY[ 0 ];\n\t\ty[ 1 ] = -TY[ 1 ];\n\t\treturn -n;\n\t}\n\ty[ 0 ] = TY[ 0 ];\n\ty[ 1 ] = TY[ 1 ];\n\treturn n;\n}\n\n\n// EXPORTS //\n\nexport default rempio2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_cos.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from '@stdlib/number-float64-base-get-high-word' ;\nimport kernelCos from '@stdlib/math-base-special-kernel-cos' ;\nimport kernelSin from '@stdlib/math-base-special-kernel-sin' ;\nimport rempio2 from '@stdlib/math-base-special-rempio2' ;\n\n\n// VARIABLES //\n\n// Scratch array for storing temporary values:\nvar buffer = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n// High word absolute value mask: 0x7fffffff => 01111111111111111111111111111111\nvar HIGH_WORD_ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// High word of π/4: 0x3fe921fb => 00111111111010010010000111111011\nvar HIGH_WORD_PIO4 = 0x3fe921fb|0; // asm type annotation\n\n// High word of 2^-27: 0x3e400000 => 00111110010000000000000000000000\nvar HIGH_WORD_TWO_NEG_27 = 0x3e400000|0; // asm type annotation\n\n// High word exponent mask: 0x7ff00000 => 01111111111100000000000000000000\nvar HIGH_WORD_EXPONENT_MASK = 0x7ff00000|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Computes the cosine of a number.\n*\n* @param {number} x - input value (in radians)\n* @returns {number} cosine\n*\n* @example\n* var v = cos( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = cos( 3.141592653589793/4.0 );\n* // returns ~0.707\n*\n* @example\n* var v = cos( -3.141592653589793/6.0 );\n* // returns ~0.866\n*\n* @example\n* var v = cos( NaN );\n* // returns NaN\n*/\nfunction cos( x ) {\n\tvar ix;\n\tvar n;\n\n\tix = getHighWord( x );\n\tix &= HIGH_WORD_ABS_MASK;\n\n\t// Case: |x| ~< pi/4\n\tif ( ix <= HIGH_WORD_PIO4 ) {\n\t\t// Case: x < 2**-27\n\t\tif ( ix < HIGH_WORD_TWO_NEG_27 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\treturn kernelCos( x, 0.0 );\n\t}\n\t// Case: cos(Inf or NaN) is NaN */\n\tif ( ix >= HIGH_WORD_EXPONENT_MASK ) {\n\t\treturn NaN;\n\t}\n\t// Case: Argument reduction needed...\n\tn = rempio2( x, buffer );\n\tswitch ( n & 3 ) {\n\tcase 0:\n\t\treturn kernelCos( buffer[ 0 ], buffer[ 1 ] );\n\tcase 1:\n\t\treturn -kernelSin( buffer[ 0 ], buffer[ 1 ] );\n\tcase 2:\n\t\treturn -kernelCos( buffer[ 0 ], buffer[ 1 ] );\n\tdefault:\n\t\treturn kernelSin( buffer[ 0 ], buffer[ 1 ] );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default cos;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright, license, and long comment were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_sin.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getHighWord from '@stdlib/number-float64-base-get-high-word' ;\nimport kernelCos from '@stdlib/math-base-special-kernel-cos' ;\nimport kernelSin from '@stdlib/math-base-special-kernel-sin' ;\nimport rempio2 from '@stdlib/math-base-special-rempio2' ;\n\n\n// VARIABLES //\n\n// Absolute value mask: 0x7fffffff = 2147483647 => 01111111111111111111111111111111\nvar ABS_MASK = 0x7fffffff|0; // asm type annotation\n\n// Exponent mask: 0x7ff00000 = 2146435072 => 01111111111100000000000000000000\nvar EXPONENT_MASK = 0x7ff00000|0; // asm type annotation\n\n// High word for PI/4: 0x3fe921fb = 1072243195 => 00111111111010010010000111111011\nvar PIO4_HIGH_WORD = 0x3fe921fb|0; // asm type annotation\n\n// 2^-26 = 1.4901161193847656e-8 => 0011111001010000000000000000000000000000000000000000000000000000 => high word => 00111110010100000000000000000000 => 0x3e500000 = 1045430272\nvar SMALL_HIGH_WORD = 0x3e500000|0; // asm type annotation\n\n// Array for storing remainder elements:\nvar Y = [ 0.0, 0.0 ]; // WARNING: not thread safe\n\n\n// MAIN //\n\n/**\n* Computes the sine of a number.\n*\n* ## Method\n*\n* -   Let \\\\(S\\\\), \\\\(C\\\\), and \\\\(T\\\\) denote the \\\\(\\sin\\\\), \\\\(\\cos\\\\), and \\\\(\\tan\\\\), respectively, on \\\\(\\[-\\pi/4, +\\pi/4\\]\\\\).\n*\n* -   Reduce the argument \\\\(x\\\\) to \\\\(y1+y2 = x-k\\pi/2\\\\) in \\\\(\\[-\\pi/4, +\\pi/4\\]\\\\), and let \\\\(n = k \\mod 4\\\\).\n*\n* -   We have\n*\n*     | n | sin(x) | cos(x) | tan(x) |\n*     | - | ------ | ------ | ------ |\n*     | 0 |   S    |   C    |    T   |\n*     | 1 |   C    |  -S    |  -1/T  |\n*     | 2 |  -S    |  -C    |    T   |\n*     | 3 |  -C    |   S    |  -1/T  |\n*\n*\n* @param {number} x - input value (in radians)\n* @returns {number} sine\n*\n* @example\n* var v = sin( 0.0 );\n* // returns ~0.0\n*\n* @example\n* var v = sin( 3.141592653589793/2.0 );\n* // returns ~1.0\n*\n* @example\n* var v = sin( -3.141592653589793/6.0 );\n* // returns ~-0.5\n*\n* @example\n* var v = sin( NaN );\n* // returns NaN\n*/\nfunction sin( x ) {\n\tvar ix;\n\tvar n;\n\n\tix = getHighWord( x );\n\tix &= ABS_MASK;\n\n\t// Case: |x| ~< π/4\n\tif ( ix <= PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~< 2^-26\n\t\tif ( ix < SMALL_HIGH_WORD ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn kernelSin( x, 0.0 );\n\t}\n\t// Case: x is NaN or infinity\n\tif ( ix >= EXPONENT_MASK ) {\n\t\treturn NaN;\n\t}\n\t// Argument reduction...\n\tn = rempio2( x, Y );\n\tswitch ( n & 3 ) {\n\tcase 0:\n\t\treturn kernelSin( Y[ 0 ], Y[ 1 ] );\n\tcase 1:\n\t\treturn kernelCos( Y[ 0 ], Y[ 1 ] );\n\tcase 2:\n\t\treturn -kernelSin( Y[ 0 ], Y[ 1 ] );\n\tdefault:\n\t\treturn -kernelCos( Y[ 0 ], Y[ 1 ] );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default sin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* The mathematical constant `π`.\n*\n* @module @stdlib/constants-float64-pi\n* @type {number}\n*\n* @example\n* import PI from '@stdlib/constants-float64-pi' ;\n* // returns 3.141592653589793\n*/\n\n\n// MAIN //\n\n/**\n* The mathematical constant `π`.\n*\n* @constant\n* @type {number}\n* @default 3.141592653589793\n* @see [Wikipedia]{@link https://en.wikipedia.org/wiki/Pi}\n*/\nvar PI = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679; // eslint-disable-line max-len\n\n\n// EXPORTS //\n\nexport default PI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* Notes:\n*\t=> sin(-x) = -sin(x)\n*\t=> sin(+n) = +0, where `n` is a positive integer\n*\t=> sin(-n) = -sin(+n) = -0, where `n` is a positive integer\n*\t=> cos(-x) = cos(x)\n*/\n\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport isInfinite from '@stdlib/math-base-assert-is-infinite' ;\nimport cos from '@stdlib/math-base-special-cos' ;\nimport sin from '@stdlib/math-base-special-sin' ;\nimport abs from '@stdlib/math-base-special-abs' ;\nimport copysign from '@stdlib/math-base-special-copysign' ;\nimport PI from '@stdlib/constants-float64-pi' ;\n\n\n// MAIN //\n\n/**\n* Computes the value of `sin(πx)`.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var y = sinpi( 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = sinpi( 0.5 );\n* // returns 1.0\n*\n* @example\n* var y = sinpi( 0.9 );\n* // returns ~0.309\n*\n* @example\n* var y = sinpi( NaN );\n* // returns NaN\n*/\nfunction sinpi( x ) {\n\tvar ar;\n\tvar r;\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isInfinite( x ) ) {\n\t\treturn NaN;\n\t}\n\t// Argument reduction (reduce to [0,2))...\n\tr = x % 2.0; // sign preserving\n\tar = abs( r );\n\n\t// If `x` is an integer, the mod is an integer...\n\tif ( ar === 0.0 || ar === 1.0 ) {\n\t\treturn copysign( 0.0, r );\n\t}\n\tif ( ar < 0.25 ) {\n\t\treturn sin( PI*r );\n\t}\n\t// In each of the following, we further reduce to [-π/4,π/4)...\n\tif ( ar < 0.75 ) {\n\t\tar = 0.5 - ar;\n\t\treturn copysign( cos( PI*ar ), r );\n\t}\n\tif ( ar < 1.25 ) {\n\t\tr = copysign( 1.0, r ) - r;\n\t\treturn sin( PI*r );\n\t}\n\tif ( ar < 1.75 ) {\n\t\tar -= 1.5;\n\t\treturn -copysign( cos( PI*ar ), r );\n\t}\n\tr -= copysign( 2.0, r );\n\treturn sin( PI*r );\n}\n\n\n// EXPORTS //\n\nexport default sinpi;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport sinpi from '@stdlib/math-base-special-sinpi' ;\nimport PI from '@stdlib/constants-float64-pi' ;\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a raised cosine distribution with location parameter `mu` and scale parameter `s` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Probability} evaluated CDF\n*\n* @example\n* var y = cdf( 0.5, 0.0, 1.0 );\n* // returns ~0.909\n*\n* @example\n* var y = cdf( 1.2, 0.0, 1.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( -0.9, 0.0, 1.0);\n* // returns ~0.0\n*\n* @example\n* var y = cdf( 2.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = cdf( 2.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*/\nfunction cdf( x, mu, s ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( s ) ||\n\t\ts < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn ( x < mu ) ? 0.0 : 1.0;\n\t}\n\tif ( x < mu - s ) {\n\t\treturn 0.0;\n\t}\n\tif ( x > mu + s ) {\n\t\treturn 1.0;\n\t}\n\tz = ( x - mu ) / s;\n\treturn ( 1.0 + z + ( sinpi( z ) / PI ) ) / 2.0;\n}\n\n\n// EXPORTS //\n\nexport default cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) of a degenerate distribution centered at a provided mean value.\n*\n* @param {number} mu - constant value of distribution\n* @returns {Function} function to evaluate the cumulative distribution function\n*\n* @example\n* var cdf = factory( 5.0 );\n*\n* var y = cdf( 3.0 );\n* // returns 0.0\n*\n* y = cdf( 6.0 );\n* // returns 1.0\n*\n* y = cdf( NaN );\n* // returns NaN\n*/\nfunction factory( mu ) {\n\tif ( isnan( mu ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) of a degenerate distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated cumulative distribution function\n\t*\n\t* @example\n\t* var y = cdf( 10.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn (x < mu) ? 0.0 : 1.0;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Degenerate distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats-base-dists-degenerate-cdf\n*\n* @example\n* import cdf from '@stdlib/stats-base-dists-degenerate-cdf' ;\n*\n* var y = cdf( 2.0, 5.0 );\n* // returns 0.0\n*\n* @example\n* import { factory as factory } from '@stdlib/stats-base-dists-degenerate-cdf' ;\n*\n* var cdf = factory( 5.0 );\n*\n* var y = cdf( 3.0 );\n* // returns 0.0\n*\n* y = cdf( 6.0 );\n* // returns 1.0\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport cdf from './cdf.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a degenerate distribution with mean value `mu`.\n*\n* @param {number} x - input value\n* @param {number} mu - constant value of distribution\n* @returns {Probability} evaluated cumulative distribution function\n*\n* @example\n* var y = cdf( 2.0, 3.0 );\n* // returns 0.0\n*\n* @example\n* var y = cdf( 4.0, 3.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( 3.0, 3.0 );\n* // returns 1.0\n*\n* @example\n* var y = cdf( NaN, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN );\n* // returns NaN\n*/\nfunction cdf( x, mu ) {\n\tif ( isnan( x ) || isnan( mu ) ) {\n\t\treturn NaN;\n\t}\n\treturn (x < mu) ? 0.0 : 1.0;\n}\n\n\n// EXPORTS //\n\nexport default cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Raised cosine distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats-base-dists-cosine-cdf\n*\n* @example\n* import cdf from '@stdlib/stats-base-dists-cosine-cdf' ;\n*\n* var y = cdf( 0.5, 0.0, 1.0 );\n* // returns ~0.909\n*\n* var mycdf = cdf.factory( 3.0, 1.5 );\n*\n* y = mycdf( 4.0 );\n* // returns ~0.971\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport cdf from './cdf.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function' ;\nimport { factory as degenerate } from '@stdlib/stats-base-dists-degenerate-cdf' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport sinpi from '@stdlib/math-base-special-sinpi' ;\nimport PI from '@stdlib/constants-float64-pi' ;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a raised cosine distribution with location parameter `mu` and scale parameter `s`.\n*\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 1.5 );\n*\n* var y = cdf( 1.9 );\n* // returns ~0.015\n*\n* y = cdf( 4.0 );\n* // returns ~0.971\n*/\nfunction factory( mu, s ) {\n\tif ( isnan( mu ) || isnan( s ) || s < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a raised cosine distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < mu - s ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( x > mu + s ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tz = ( x - mu ) / s;\n\t\treturn ( 1.0 + z + ( sinpi( z ) / PI ) ) / 2.0;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport cosineCDF from '@stdlib/stats-base-dists-cosine-cdf' ;\n\n\n// VARIABLES //\n\nvar MAX_ITERATIONS = 1e4;\nvar TOLERANCE = 1e-12;\n\n\n// MAIN //\n\n/**\n* Bisection method to find quantile as there is no closed-form expression for the inverse of the CDF.\n*\n* @private\n* @param {Probability} p - input value\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {number} evaluated quantile function\n*/\nfunction bisect( p, mu, s ) {\n\tvar a;\n\tvar b;\n\tvar c;\n\tvar m;\n\tvar n;\n\n\tn = 1;\n\ta = mu - s;\n\tb = mu + s;\n\twhile ( n < MAX_ITERATIONS ) {\n\t\tm = ( a + b ) / 2.0;\n\t\tif ( b - a < TOLERANCE ) {\n\t\t\treturn m;\n\t\t}\n\t\tc = cosineCDF( m, mu, s);\n\t\tif ( p > c ) {\n\t\t\ta = m;\n\t\t} else {\n\t\t\tb = m;\n\t\t}\n\t\tn += 1;\n\t}\n\treturn m;\n}\n\n\n// EXPORTS //\n\nexport default bisect;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Allocate a buffer containing a provided string.\n*\n* @module @stdlib/buffer-from-string\n*\n* @example\n* import string2buffer from '@stdlib/buffer-from-string' ;\n*\n* var buf = string2buffer( 'beep boop' );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nimport hasFrom from './has_from.js' ;\nimport main from './main.js' ;\nimport polyfill from './polyfill.js' ;\n\n\n// MAIN //\n\nvar string2buffer;\nif ( hasFrom ) {\n\tstring2buffer = main;\n} else {\n\tstring2buffer = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default string2buffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport bisect from './bisect.js' ;\n\n\n// MAIN //\n\n/**\n* Evaluates the quantile function for a raised cosine distribution with location parameter `mu` and scale parameter `s` at a probability `p`.\n*\n* @param {Probability} p - input value\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {number} evaluated quantile function\n*\n* @example\n* var y = quantile( 0.8, 0.0, 1.0 );\n* // returns ~0.327\n*\n* @example\n* var y = quantile( 0.5, 4.0, 2.0 );\n* // returns ~4.0\n*\n* @example\n* var y = quantile( 1.1, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( -0.2, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = quantile( 0.5, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction quantile( p, mu, s ) {\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( s ) ||\n\t\tisnan( p ) ||\n\t\ts < 0.0 ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn mu;\n\t}\n\treturn bisect( p, mu, s );\n}\n\n\n// EXPORTS //\n\nexport default quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the quantile function of a degenerate distribution centered at a provided mean value.\n*\n* @param {number} mu - value at which to center the distribution\n* @returns {Function} function to evaluate the quantile function\n*\n* @example\n* var quantile = factory( 5.0 );\n*\n* var y = quantile( 0.3 );\n* // returns 5.0\n*\n* y = quantile( 0.1 );\n* // returns 5.0\n*\n* y = quantile( 1.1 );\n* // returns NaN\n*/\nfunction factory( mu ) {\n\tif ( isnan( mu ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn quantile;\n\n\t/**\n\t* Evaluates the quantile function of a degenerate distribution.\n\t*\n\t* @private\n\t* @param {Probability} p - input value\n\t* @returns {number} evaluated quantile function\n\t*\n\t* @example\n\t* var y = quantile( 0.5 );\n\t* // returns <number>\n\t*/\n\tfunction quantile( p ) {\n\t\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn mu;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport quantile from '@stdlib/stats-base-dists-cosine-quantile' ;\n\n\n// MAIN //\n\n/**\n* Returns pseudorandom number drawn from a raised cosine distribution using inverse transform sampling.\n*\n* @private\n* @param {PRNG} rand - PRNG for uniformly distributed numbers\n* @param {number} mu - mean\n* @param {PositiveNumber} s - scale parameter\n* @returns {number} pseudorandom number\n*/\nfunction sample( rand, mu, s ) {\n\treturn quantile( rand(), mu, s );\n}\n\n\n// EXPORTS //\n\nexport default sample;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport setReadOnlyAccessor from '@stdlib/utils-define-nonenumerable-read-only-accessor' ;\nimport setReadWriteAccessor from '@stdlib/utils-define-nonenumerable-read-write-accessor' ;\nimport isObject from '@stdlib/assert-is-plain-object' ;\nimport isFunction from '@stdlib/assert-is-function' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport constantFunction from '@stdlib/utils-constant-function' ;\nimport noop from '@stdlib/utils-noop' ;\nimport { factory as randu } from '@stdlib/random-base-mt19937' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport typedarray2json from '@stdlib/array-to-json' ;\nimport validate from './validate.js' ;\nimport cosine0 from './cosine.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom number generator for generating random numbers from a raised cosine distribution.\n*\n* @param {number} [mu] - mean parameter\n* @param {PositiveNumber} [s] - scale parameter\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} `mu` must be a number\n* @throws {TypeError} `s` must be a positive number\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {PRNG} pseudorandom number generator\n*\n* @example\n* var cosine = factory( 0.0, 1.0 );\n* var v = cosine();\n* // returns <number>\n*\n* @example\n* var cosine = factory( -3.0, 0.5, {\n*     'seed': 297\n* });\n* var v = cosine();\n* // returns <number>\n*/\nfunction factory() {\n\tvar opts;\n\tvar rand;\n\tvar prng;\n\tvar err;\n\tvar mu;\n\tvar s;\n\tif ( arguments.length === 0 ) {\n\t\trand = randu();\n\t} else if ( arguments.length === 1 ) {\n\t\topts = arguments[ 0 ];\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'prng' ) ) {\n\t\t\tif ( !isFunction( opts.prng ) ) {\n\t\t\t\tthrow new TypeError( 'invalid option. `prng` option must be a pseudorandom number generator function. Option: `' + opts.prng + '`.' );\n\t\t\t}\n\t\t\trand = opts.prng;\n\t\t} else {\n\t\t\trand = randu( opts );\n\t\t}\n\t} else {\n\t\tmu = arguments[ 0 ];\n\t\ts = arguments[ 1 ];\n\t\terr = validate( mu, s );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\topts = arguments[ 2 ];\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'prng' ) ) {\n\t\t\t\tif ( !isFunction( opts.prng ) ) {\n\t\t\t\t\tthrow new TypeError( 'invalid option. `prng` option must be a pseudorandom number generator function. Option: `' + opts.prng + '`.' );\n\t\t\t\t}\n\t\t\t\trand = opts.prng;\n\t\t\t} else {\n\t\t\t\trand = randu( opts );\n\t\t\t}\n\t\t} else {\n\t\t\trand = randu();\n\t\t}\n\t}\n\tif ( mu === void 0 ) {\n\t\tprng = cosine2;\n\t} else {\n\t\tprng = cosine1;\n\t}\n\tsetReadOnly( prng, 'NAME', 'cosine' );\n\n\t// If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n\tif ( opts && opts.prng ) {\n\t\tsetReadOnly( prng, 'seed', null );\n\t\tsetReadOnly( prng, 'seedLength', null );\n\t\tsetReadWriteAccessor( prng, 'state', constantFunction( null ), noop );\n\t\tsetReadOnly( prng, 'stateLength', null );\n\t\tsetReadOnly( prng, 'byteLength', null );\n\t\tsetReadOnly( prng, 'toJSON', constantFunction( null ) );\n\t\tsetReadOnly( prng, 'PRNG', rand );\n\t} else {\n\t\tsetReadOnlyAccessor( prng, 'seed', getSeed );\n\t\tsetReadOnlyAccessor( prng, 'seedLength', getSeedLength );\n\t\tsetReadWriteAccessor( prng, 'state', getState, setState );\n\t\tsetReadOnlyAccessor( prng, 'stateLength', getStateLength );\n\t\tsetReadOnlyAccessor( prng, 'byteLength', getStateSize );\n\t\tsetReadOnly( prng, 'toJSON', toJSON );\n\t\tsetReadOnly( prng, 'PRNG', rand );\n\t\trand = rand.normalized;\n\t}\n\treturn prng;\n\n\t/**\n\t* Returns the PRNG seed.\n\t*\n\t* @private\n\t* @returns {PRNGSeedMT19937} seed\n\t*/\n\tfunction getSeed() {\n\t\treturn rand.seed;\n\t}\n\n\t/**\n\t* Returns the PRNG seed length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} seed length\n\t*/\n\tfunction getSeedLength() {\n\t\treturn rand.seedLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state length.\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state length\n\t*/\n\tfunction getStateLength() {\n\t\treturn rand.stateLength;\n\t}\n\n\t/**\n\t* Returns the PRNG state size (in bytes).\n\t*\n\t* @private\n\t* @returns {PositiveInteger} state size (in bytes)\n\t*/\n\tfunction getStateSize() {\n\t\treturn rand.byteLength;\n\t}\n\n\t/**\n\t* Returns the current pseudorandom number generator state.\n\t*\n\t* @private\n\t* @returns {PRNGStateMT19937} current state\n\t*/\n\tfunction getState() {\n\t\treturn rand.state;\n\t}\n\n\t/**\n\t* Sets the pseudorandom number generator state.\n\t*\n\t* @private\n\t* @param {PRNGStateMT19937} s - generator state\n\t* @throws {Error} must provide a valid state\n\t*/\n\tfunction setState( s ) {\n\t\trand.state = s;\n\t}\n\n\t/**\n\t* Serializes the pseudorandom number generator as a JSON object.\n\t*\n\t* ## Notes\n\t*\n\t* -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n\t*\n\t* @private\n\t* @returns {Object} JSON representation\n\t*/\n\tfunction toJSON() {\n\t\tvar out = {};\n\t\tout.type = 'PRNG';\n\t\tout.name = prng.NAME;\n\t\tout.state = typedarray2json( rand.state );\n\t\tif ( mu === void 0 ) {\n\t\t\tout.params = [];\n\t\t} else {\n\t\t\tout.params = [ mu, s ];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t* Returns a pseudorandom number drawn from a raised cosine distribution with bound parameters.\n\t*\n\t* @private\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = cosine1();\n\t* // returns <number>\n\t*/\n\tfunction cosine1() {\n\t\treturn cosine0( rand, mu, s );\n\t}\n\n\t/**\n\t* Returns a pseudorandom number drawn from a raised cosine distribution.\n\t*\n\t* @private\n\t* @param {number} mu - mean\n\t* @param {PositiveNumber} s - scale parameter\n\t* @returns {number} pseudorandom number\n\t*\n\t* @example\n\t* var v = cosine2( 0.0, 2.0 );\n\t* // returns <number>\n\t*\n\t* @example\n\t* var v = cosine2( 0.0, -1.0 );\n\t* // returns NaN\n\t*/\n\tfunction cosine2( mu, s ) {\n\t\tif (\n\t\t\tisnan( mu ) ||\n\t\t\tisnan( s ) ||\n\t\t\ts <= 0.0\n\t\t) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn cosine0( rand, mu, s );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Degenerate distribution quantile function.\n*\n* @module @stdlib/stats-base-dists-degenerate-quantile\n*\n* @example\n* import quantile from '@stdlib/stats-base-dists-degenerate-quantile' ;\n*\n* var y = quantile( 0.5, 2.0 );\n* // returns 2.0\n*\n* @example\n* import { factory as factory } from '@stdlib/stats-base-dists-degenerate-quantile' ;\n*\n* var quantile = factory( 10.0 );\n*\n* var y = quantile( 0.5 );\n* // returns 10.0\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport quantile from './quantile.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( quantile, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\n\n\n// MAIN //\n\n/**\n* Evaluates the quantile function for a degenerate distribution centered at `mu`.\n*\n* @param {Probability} p - input value\n* @param {number} mu - constant value of the distribution\n* @returns {number} evaluated quantile function\n*\n* @example\n* var y = quantile( 0.5, 2.0 );\n* // returns 2.0\n*\n* @example\n* var y = quantile( 0.9, 4.0 );\n* // returns 4.0\n*\n* @example\n* var y = quantile( 1.1, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( -0.2, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( NaN, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, NaN );\n* // returns NaN\n*/\nfunction quantile( p, mu ) {\n\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\treturn NaN;\n\t}\n\treturn mu;\n}\n\n\n// EXPORTS //\n\nexport default quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Raised cosine distribution quantile function.\n*\n* @module @stdlib/stats-base-dists-cosine-quantile\n*\n* @example\n* import quantile from '@stdlib/stats-base-dists-cosine-quantile' ;\n*\n* var y = quantile( 0.8, 0.0, 1.0 );\n* // returns ~0.327\n*\n* var myQuantile = quantile.factory( 10.0, 2.0 );\n* y = myQuantile( 0.5 );\n* // returns ~10.0\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport quantile from './quantile.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( quantile, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function' ;\nimport { factory as degenerate } from '@stdlib/stats-base-dists-degenerate-quantile' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport bisect from './bisect.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the quantile function for a raised cosine distribution.\n*\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Function} quantile function\n*\n* @example\n* var quantile = factory( 10.0, 2.0 );\n* var y = quantile( 0.5 );\n* // returns ~10.0\n*\n* y = quantile( 0.8 );\n* // returns ~10.655\n*/\nfunction factory( mu, s ) {\n\tif ( isnan( mu ) || isnan( s ) || s < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\treturn quantile;\n\n\t/**\n\t* Evaluates the quantile function for a raised cosine distribution.\n\t*\n\t* @private\n\t* @param {Probability} p - input value\n\t* @returns {number} evaluated quantile function\n\t*\n\t* @example\n\t* var y = quantile( 0.3 );\n\t* // returns <number>\n\t*/\n\tfunction quantile( p ) {\n\t\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn bisect( p, mu, s );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Raised cosine distributed pseudorandom numbers.\n*\n* @module @stdlib/random-base-cosine\n*\n* @example\n* import cosine from '@stdlib/random-base-cosine' ;\n*\n* var v = cosine( 0.5, 1.0 );\n* // returns <number>\n*\n* @example\n* import { factory as factory } from '@stdlib/random-base-cosine' ;\n* var cosine = factory( 3.0, 2.0, {\n*     'seed': 297\n* });\n*\n* var v = cosine();\n* // returns <number>\n*\n* @example\n* import { factory as factory } from '@stdlib/random-base-cosine' ;\n* var cosine = factory({\n*     'seed': 297\n* });\n*\n* var v = cosine( 3.0, 2.0 );\n* // returns <number>\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport cosine from './main.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( cosine, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default cosine;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\n/**\n* Returns pseudorandom number drawn from a raised cosine distribution.\n*\n* @name cosine\n* @type {PRNG}\n* @param {number} mu - mean\n* @param {PositiveNumber} s - scale parameter\n* @returns {number} pseudorandom number\n*\n* @example\n* var v = cosine( 0.0, 2.0 );\n* // returns <number>\n*\n* @example\n* var v = cosine( 0.0, -1.0 );\n* // returns NaN\n*/\nvar cosine = factory();\n\n\n// EXPORTS //\n\nexport default cosine;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function' ;\nimport Buffer from '@stdlib/buffer-ctor' ;\n\n\n// MAIN //\n\nvar bool = isFunction( Buffer.from );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport format from '@stdlib/string-format' ;\nimport Buffer from '@stdlib/buffer-ctor' ;\n\n\n// MAIN //\n\n/**\n* Allocates a buffer containing a provided string.\n*\n* @param {string} str - input string\n* @param {string} [encoding=\"utf8\"] - character encoding\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @throws {TypeError} second argument must be a valid encoding\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var buf = fromString( 'beep boop' );\n* // returns <Buffer>\n*/\nfunction fromString( str, encoding ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isString( encoding ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', encoding ) );\n\t\t}\n\t\treturn Buffer.from( str, encoding );\n\t}\n\treturn Buffer.from( str, 'utf8' );\n}\n\n\n// EXPORTS //\n\nexport default fromString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport format from '@stdlib/string-format' ;\nimport Buffer from '@stdlib/buffer-ctor' ;\n\n\n// MAIN //\n\n/**\n* Allocates a buffer containing a provided string.\n*\n* @param {string} str - input string\n* @param {string} [encoding=\"utf8\"] - character encoding\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @throws {TypeError} second argument must be a valid encoding\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var buf = fromString( 'beep boop' );\n* // returns <Buffer>\n*/\nfunction fromString( str, encoding ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isString( encoding ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', encoding ) );\n\t\t}\n\t\treturn new Buffer( str, encoding ); // eslint-disable-line no-buffer-constructor\n\t}\n\treturn new Buffer( str, 'utf8' ); // eslint-disable-line no-buffer-constructor\n}\n\n\n// EXPORTS //\n\nexport default fromString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Adds a callback to the \"next tick queue\".\n*\n* ## Notes\n*\n* -   The queue is fully drained after the current operation on the JavaScript stack runs to completion and before the event loop is allowed to continue.\n*\n* @param {Callback} clbk - callback\n* @param {...*} [args] - arguments to provide to the callback upon invocation\n*\n* @example\n* function beep() {\n*     console.log( 'boop' );\n* }\n*\n* nextTick( beep );\n*/\nfunction nextTick( clbk ) {\n\tvar args;\n\tvar i;\n\n\targs = [];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\tproc.nextTick( wrapper );\n\n\t/**\n\t* Callback wrapper.\n\t*\n\t* ## Notes\n\t*\n\t* -   The ability to provide additional arguments was added in Node.js v1.8.1. The wrapper provides support for earlier Node.js versions.\n\t*\n\t* @private\n\t*/\n\tfunction wrapper() {\n\t\tclbk.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default nextTick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Formats an error message for production.\n*\n* @param {string} code - error code\n* @param {*} ...args - error message arguments\n* @returns {string} formatted error message\n*\n* @example\n* var msg = fmtprodmsg( '3', 'wrong_type' );\n* // returns 'https://stdlib.io/e/3?&arg[]=wrong_type'\n*/\nfunction fmtprodmsg() {\n\tvar a = arguments;\n\tvar c = a[ 0 ];\n\tvar u = 'https://stdlib.io/e/'+c+'?';\n\tvar i;\n\tfor ( i = 1; i < a.length; i++ ) {\n\t\tu += '&arg[]=' + encodeURIComponent( a[ i ] );\n\t}\n\treturn u;\n}\n\n\n// EXPORTS //\n\nexport default fmtprodmsg;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative number value\n*\n* @example\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue >= 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from '@stdlib/assert-is-number' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative number value\n*\n* @example\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() >= 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative number\n*\n* @example\n* var bool = isNonNegativeNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeNumber( null );\n* // returns false\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean' ;\nimport { isPrimitive as isNonNegative } from '@stdlib/assert-is-nonnegative-number' ;\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer' ;\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.sep] - separator used to join streamed data\n* @param {boolean} [options.objectMode] - specifies whether a stream should operate in object mode\n* @param {(string|null)} [options.encoding] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the maximum number of bytes to store in the internal buffer before ceasing to generate additional pseudorandom numbers\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @param {PositiveInteger} [options.siter] - number of iterations after which to emit the PRNG state\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'objectMode': true\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '0QO2h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( '0QO2i', 'sep', opts.sep ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'objectMode' ) ) {\n\t\topts.objectMode = options.objectMode;\n\t\tif ( !isBoolean( opts.objectMode ) ) {\n\t\t\treturn new TypeError( format( '0QO30', 'objectMode', opts.objectMode ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'encoding' ) ) {\n\t\topts.encoding = options.encoding;\n\t\tif ( !isString( opts.encoding ) && opts.encoding !== null ) {\n\t\t\treturn new TypeError( format( '0QO84', 'encoding', opts.encoding ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'highWaterMark' ) ) {\n\t\topts.highWaterMark = options.highWaterMark;\n\t\tif ( !isNonNegative( opts.highWaterMark ) ) {\n\t\t\treturn new TypeError( format( '0QO4x', 'highWaterMark', opts.highWaterMark ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( opts.iter ) ) {\n\t\t\treturn new TypeError( format( '0QO35', 'iter', opts.iter ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'siter' ) ) {\n\t\topts.siter = options.siter;\n\t\tif ( !isPositiveInteger( opts.siter ) ) {\n\t\t\treturn new TypeError( format( '0QO3b', 'siter', opts.siter ) );\n\t\t}\n\t}\n\t// Pass through options...\n\tif ( hasOwnProp( options, 'prng' ) ) {\n\t\topts.prng = options.prng;\n\t}\n\tif ( hasOwnProp( options, 'seed' ) ) {\n\t\topts.seed = options.seed;\n\t}\n\tif ( hasOwnProp( options, 'state' ) ) {\n\t\topts.state = options.state;\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative number.\n*\n* @module @stdlib/assert-is-nonnegative-number\n*\n* @example\n* import isNonNegativeNumber from '@stdlib/assert-is-nonnegative-number' ;\n*\n* var bool = isNonNegativeNumber( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeNumber( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeNumber( 3.14 );\n* // returns true\n*\n* bool = isNonNegativeNumber( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeNumber( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNonNegativeNumber } from '@stdlib/assert-is-nonnegative-number' ;\n*\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNonNegativeNumber } from '@stdlib/assert-is-nonnegative-number' ;\n*\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isNonNegativeNumber from './main.js' ;\nimport isPrimitive from './primitive.js' ;\nimport isObject from './object.js' ;\n\n\n// MAIN //\n\nsetReadOnly( isNonNegativeNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonNegativeNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// MAIN //\n\nvar debug = logger( 'random:streams:cosine' );\n\n\n// EXPORTS //\n\nexport default debug;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Readable = require( 'readable-stream' ).Readable;\nimport { isPrimitive as isPositiveNumber } from '@stdlib/assert-is-positive-number' ;\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport isError from '@stdlib/assert-is-error' ;\nimport copy from '@stdlib/utils-copy' ;\nimport inherit from '@stdlib/utils-inherit' ;\nimport setNonEnumerable from '@stdlib/utils-define-nonenumerable-property' ;\nimport setNonEnumerableReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport setReadOnlyAccessor from '@stdlib/utils-define-read-only-accessor' ;\nimport setReadWriteAccessor from '@stdlib/utils-define-read-write-accessor' ;\nimport { factory as rcosine } from '@stdlib/random-base-cosine' ;\nimport string2buffer from '@stdlib/buffer-from-string' ;\nimport nextTick from '@stdlib/utils-next-tick' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\nimport DEFAULTS from './defaults.json' ;\nimport validate from './validate.js' ;\nimport debug from './debug.js' ;\n\n\n// FUNCTIONS //\n\n/**\n* Returns the PRNG seed.\n*\n* @private\n* @returns {(PRNGSeedMT19937|null)} seed\n*/\nfunction getSeed() {\n\treturn this._prng.seed; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Returns the PRNG seed length.\n*\n* @private\n* @returns {(PositiveInteger|null)} seed length\n*/\nfunction getSeedLength() {\n\treturn this._prng.seedLength; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Returns the PRNG state length.\n*\n* @private\n* @returns {(PositiveInteger|null)} state length\n*/\nfunction getStateLength() {\n\treturn this._prng.stateLength; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Returns the PRNG state size (in bytes).\n*\n* @private\n* @returns {(PositiveInteger|null)} state size (in bytes)\n*/\nfunction getStateSize() {\n\treturn this._prng.byteLength; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Returns the current PRNG state.\n*\n* @private\n* @returns {(PRNGStateMT19937|null)} current state\n*/\nfunction getState() {\n\treturn this._prng.state; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Sets the PRNG state.\n*\n* @private\n* @param {PRNGStateMT19937} s - generator state\n* @throws {Error} must provide a valid state\n*/\nfunction setState( s ) {\n\tthis._prng.state = s; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Implements the `_read` method.\n*\n* @private\n* @param {number} size - number (of bytes) to read\n* @returns {void}\n*/\nfunction read() {\n\t/* eslint-disable no-invalid-this */\n\tvar FLG;\n\tvar r;\n\n\tif ( this._destroyed ) {\n\t\treturn;\n\t}\n\tFLG = true;\n\twhile ( FLG ) {\n\t\tthis._i += 1;\n\t\tif ( this._i > this._iter ) {\n\t\t\tdebug( 'Finished generating pseudorandom numbers.' );\n\t\t\treturn this.push( null );\n\t\t}\n\t\tr = this._prng();\n\n\t\tdebug( 'Generated a new pseudorandom number. Value: %d. Iter: %d.', r, this._i );\n\n\t\tif ( this._objectMode === false ) {\n\t\t\tr = r.toString();\n\t\t\tif ( this._i === 1 ) {\n\t\t\t\tr = string2buffer( r );\n\t\t\t} else {\n\t\t\t\tr = string2buffer( this._sep+r );\n\t\t\t}\n\t\t}\n\t\tFLG = this.push( r );\n\t\tif ( this._i%this._siter === 0 ) {\n\t\t\tthis.emit( 'state', this.state );\n\t\t}\n\t}\n\n\t/* eslint-enable no-invalid-this */\n}\n\n/**\n* Gracefully destroys a stream, providing backward compatibility.\n*\n* @private\n* @param {(string|Object|Error)} [error] - error\n* @returns {RandomStream} Stream instance\n*/\nfunction destroy( error ) {\n\t/* eslint-disable no-invalid-this */\n\tvar self;\n\tif ( this._destroyed ) {\n\t\tdebug( 'Attempted to destroy an already destroyed stream.' );\n\t\treturn this;\n\t}\n\tself = this;\n\tthis._destroyed = true;\n\n\tnextTick( close );\n\n\treturn this;\n\n\t/**\n\t* Closes a stream.\n\t*\n\t* @private\n\t*/\n\tfunction close() {\n\t\tif ( error ) {\n\t\t\tdebug( 'Stream was destroyed due to an error. Error: %s.', ( isError( error ) ) ? error.message : JSON.stringify( error ) );\n\t\t\tself.emit( 'error', error );\n\t\t}\n\t\tdebug( 'Closing the stream...' );\n\t\tself.emit( 'close' );\n\t}\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// MAIN //\n\n/**\n* Stream constructor for generating a stream of pseudorandom numbers drawn from a raised cosine distribution.\n*\n* @constructor\n* @param {number} mu - location parameter\n* @param {PositiveNumber} s - scale parameter\n* @param {Options} [options] - stream options\n* @param {boolean} [options.objectMode=false] - specifies whether the stream should operate in object mode\n* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to strings\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the maximum number of bytes to store in an internal buffer before ceasing to generate additional pseudorandom numbers\n* @param {string} [options.sep='\\n'] - separator used to join streamed data\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @param {PositiveInteger} [options.siter] - number of iterations after which to emit the PRNG state\n* @throws {TypeError} `mu` must be a number\n* @throws {TypeError} `s` must be a positive number\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {RandomStream} Stream instance\n*\n* @example\n* import inspectStream from '@stdlib/streams-node-inspect-sink' ;\n*\n* function log( chunk ) {\n*    console.log( chunk.toString() );\n* }\n*\n* var opts = {\n*     'iter': 10\n* };\n*\n* var stream = new RandomStream( 2.0, 5.0, opts );\n*\n* stream.pipe( inspectStream( log )  );\n*/\nfunction RandomStream( mu, s, options ) {\n\tvar opts;\n\tvar err;\n\tif ( !( this instanceof RandomStream ) ) {\n\t\tif ( arguments.length > 2 ) {\n\t\t\treturn new RandomStream( mu, s, options );\n\t\t}\n\t\treturn new RandomStream( mu, s );\n\t}\n\tif ( !isNumber( mu ) || isnan( mu ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number and not NaN. Value: `%s`.', mu ) );\n\t}\n\tif ( !isPositiveNumber( s ) ) {\n\t\tthrow new TypeError( format( '0QO7T', s ) );\n\t}\n\topts = copy( DEFAULTS );\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Make the stream a readable stream:\n\tdebug( 'Creating a readable stream configured with the following options: %s.', JSON.stringify( opts ) );\n\tReadable.call( this, opts );\n\n\t// Destruction state:\n\tsetNonEnumerable( this, '_destroyed', false );\n\n\t// Cache whether the stream is operating in object mode:\n\tsetNonEnumerableReadOnly( this, '_objectMode', opts.objectMode );\n\n\t// Cache the separator:\n\tsetNonEnumerableReadOnly( this, '_sep', opts.sep );\n\n\t// Cache the total number of iterations:\n\tsetNonEnumerableReadOnly( this, '_iter', opts.iter );\n\n\t// Cache the number of iterations after which to emit the underlying PRNG state:\n\tsetNonEnumerableReadOnly( this, '_siter', opts.siter );\n\n\t// Initialize an iteration counter:\n\tsetNonEnumerable( this, '_i', 0 );\n\n\t// Create the underlying PRNG:\n\tsetNonEnumerableReadOnly( this, '_prng', rcosine( mu, s, opts ) );\n\tsetNonEnumerableReadOnly( this, 'PRNG', this._prng.PRNG );\n\n\treturn this;\n}\n\n/*\n* Inherit from the `Readable` prototype.\n*/\ninherit( RandomStream, Readable );\n\n/**\n* PRNG seed.\n*\n* @name seed\n* @memberof RandomStream.prototype\n* @type {(PRNGSeedMT19937|null)}\n*/\nsetReadOnlyAccessor( RandomStream.prototype, 'seed', getSeed );\n\n/**\n* PRNG seed length.\n*\n* @name seedLength\n* @memberof RandomStream.prototype\n* @type {(PositiveInteger|null)}\n*/\nsetReadOnlyAccessor( RandomStream.prototype, 'seedLength', getSeedLength );\n\n/**\n* PRNG state getter/setter.\n*\n* @name state\n* @memberof RandomStream.prototype\n* @type {(PRNGStateMT19937|null)}\n* @throws {Error} must provide a valid state\n*/\nsetReadWriteAccessor( RandomStream.prototype, 'state', getState, setState );\n\n/**\n* PRNG state length.\n*\n* @name stateLength\n* @memberof RandomStream.prototype\n* @type {(PositiveInteger|null)}\n*/\nsetReadOnlyAccessor( RandomStream.prototype, 'stateLength', getStateLength );\n\n/**\n* PRNG state size (in bytes).\n*\n* @name byteLength\n* @memberof RandomStream.prototype\n* @type {(PositiveInteger|null)}\n*/\nsetReadOnlyAccessor( RandomStream.prototype, 'byteLength', getStateSize );\n\n/**\n* Implements the `_read` method.\n*\n* @private\n* @name _read\n* @memberof RandomStream.prototype\n* @type {Function}\n* @param {number} size - number (of bytes) to read\n* @returns {void}\n*/\nsetNonEnumerableReadOnly( RandomStream.prototype, '_read', read );\n\n/**\n* Gracefully destroys a stream, providing backward compatibility.\n*\n* @name destroy\n* @memberof RandomStream.prototype\n* @type {Function}\n* @param {(string|Object|Error)} [error] - error\n* @returns {RandomStream} Stream instance\n*/\nsetNonEnumerableReadOnly( RandomStream.prototype, 'destroy', destroy );\n\n\n// EXPORTS //\n\nexport default RandomStream;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object' ;\nimport copy from '@stdlib/utils-copy' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\nimport RandomStream from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Returns an \"objectMode\" readable stream for generating pseudorandom numbers drawn from a raised cosine distribution.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} s - scale parameter\n* @param {Options} [options] - stream options\n* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the maximum number of objects to store in an internal buffer before ceasing to generate additional pseudorandom numbers\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @param {PositiveInteger} [options.siter] - number of iterations after which to emit the PRNG state\n* @throws {TypeError} `s` must be a positive number\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {RandomStream} Stream instance\n*\n* @example\n* import inspectStream from '@stdlib/streams-node-inspect-sink' ;\n*\n* function log( v ) {\n*    console.log( v );\n* }\n*\n* var opts = {\n*     'iter': 10\n* };\n*\n* var stream = objectMode( 2.0, 1.0, opts );\n*\n* stream.pipe( inspectStream.objectMode( log ) );\n*/\nfunction objectMode( mu, s, options ) {\n\tvar opts;\n\tif ( arguments.length > 2 ) {\n\t\topts = options;\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( '0QO2h', opts ) );\n\t\t}\n\t\topts = copy( options, 1 );\n\t} else {\n\t\topts = {};\n\t}\n\topts.objectMode = true;\n\treturn new RandomStream( mu, s, opts );\n}\n\n\n// EXPORTS //\n\nexport default objectMode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copy from '@stdlib/utils-copy' ;\nimport RandomStream from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a function for creating readable streams which generate pseudorandom numbers drawn from a raised cosine distribution.\n*\n* @param {number} [mu] - location parameter\n* @param {PositiveNumber} [s] - scale parameter\n* @param {Options} [options] - stream options\n* @param {boolean} [options.objectMode=false] - specifies whether a stream should operate in object mode\n* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the maximum number of bytes to store in an internal buffer before ceasing to generate additional pseudorandom numbers\n* @param {string} [options.sep='\\n'] - separator used to join streamed data\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @param {PositiveInteger} [options.siter] - number of iterations after which to emit the PRNG state\n* @returns {Function} stream factory\n*\n* @example\n* var opts = {\n*     'sep': ',',\n*     'objectMode': false,\n*     'encoding': 'utf8',\n*     'highWaterMark': 64\n* };\n*\n* var createStream = factory( opts );\n*\n* // Create 10 identically configured streams...\n* var streams = [];\n* var i;\n* for ( i = 0; i < 10; i++ ) {\n*     streams.push( createStream( 2.0, 5.0 ) );\n* }\n*/\nfunction factory( mu, s, options ) {\n\tvar nargs;\n\tvar opts;\n\tvar fcn;\n\n\tnargs = arguments.length;\n\tif ( nargs === 1 ) {\n\t\topts = copy( mu, 1 );\n\t} else if ( nargs > 2 ) {\n\t\topts = copy( options, 1 );\n\t} else {\n\t\topts = {};\n\t}\n\tif ( nargs < 2 ) {\n\t\tfcn = createStream1;\n\t} else {\n\t\tfcn = createStream2;\n\t}\n\treturn fcn;\n\n\t/**\n\t* Returns a readable stream for generating pseudorandom numbers drawn from a raised cosine distribution.\n\t*\n\t* @private\n\t* @param {number} mu - location parameter\n\t* @param {PositiveNumber} s - scale parameter\n\t* @throws {TypeError} `s` must be a positive number\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @throws {Error} must provide a valid state\n\t* @returns {RandomStream} Stream instance\n\t*/\n\tfunction createStream1( mu, s ) {\n\t\treturn new RandomStream( mu, s, opts );\n\t}\n\n\t/**\n\t* Returns a readable stream for generating pseudorandom numbers drawn from a raised cosine distribution.\n\t*\n\t* @private\n\t* @throws {TypeError} `s` must be a positive number\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @throws {Error} must provide a valid state\n\t* @returns {RandomStream} Stream instance\n\t*/\n\tfunction createStream2() {\n\t\treturn new RandomStream( mu, s, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property' ;\nimport validate from './validate.js' ;\nimport createObject from './detect.js' ;\n\n\n// MAIN //\n\n/**\n* Implements prototypical inheritance by replacing the prototype of one constructor with the prototype of another constructor.\n*\n* ## Notes\n*\n* -   This implementation is not designed to work with ES2015/ES6 classes. For ES2015/ES6 classes, use `class` with `extends`.\n* -   For reference, see [node#3455](https://github.com/nodejs/node/pull/3455), [node#4179](https://github.com/nodejs/node/issues/4179), [node#3452](https://github.com/nodejs/node/issues/3452), and [node commit](https://github.com/nodejs/node/commit/29da8cf8d7ab8f66b9091ab22664067d4468461e#diff-3deb3f32958bb937ae05c6f3e4abbdf5).\n*\n*\n* @param {(Object|Function)} ctor - constructor which will inherit\n* @param {(Object|Function)} superCtor - super (parent) constructor\n* @throws {TypeError} first argument must be either an object or a function which can inherit\n* @throws {TypeError} second argument must be either an object or a function from which a constructor can inherit\n* @throws {TypeError} second argument must have an inheritable prototype\n* @returns {(Object|Function)} child constructor\n*\n* @example\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.beep = function beep() {\n*     return 'boop';\n* };\n*\n* function Bar() {\n*     Foo.call( this );\n*     return this;\n* }\n* inherit( Bar, Foo );\n*\n* var bar = new Bar();\n* var v = bar.beep();\n* // returns 'boop'\n*/\nfunction inherit( ctor, superCtor ) {\n\tvar err = validate( ctor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\terr = validate( superCtor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tif ( typeof superCtor.prototype === 'undefined' ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must have a prototype from which another object can inherit. Value: `'+superCtor.prototype+'`.' );\n\t}\n\t// Create a prototype which inherits from the parent prototype:\n\tctor.prototype = createObject( superCtor.prototype );\n\n\t// Set the constructor to refer to the child constructor:\n\tdefineProperty( ctor.prototype, 'constructor', {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': ctor\n\t});\n\n\treturn ctor;\n}\n\n\n// EXPORTS //\n\nexport default inherit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property' ;\n\n\n// MAIN //\n\n/**\n* Defines a read-write accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - get accessor\n* @param {Function} setter - set accessor\n*\n* @example\n* function getter() {\n*     return name + ' foo';\n* }\n*\n* function setter( v ) {\n*     name = v;\n* }\n*\n* var name = 'bar';\n* var obj = {};\n*\n* setReadWriteAccessor( obj, 'foo', getter, setter );\n*\n* var v = obj.foo;\n* // returns 'bar foo'\n*\n* obj.foo = 'beep';\n*\n* v = obj.foo;\n* // returns 'beep foo'\n*/\nfunction setReadWriteAccessor( obj, prop, getter, setter ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': getter,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadWriteAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a readable stream for generating pseudorandom numbers drawn from a raised cosine distribution.\n*\n* @module @stdlib/random-streams-cosine\n*\n* @example\n* import inspectStream from '@stdlib/streams-node-inspect-sink' ;\n* import randomStream from '@stdlib/random-streams-cosine' ;\n*\n* function log( chunk ) {\n*    console.log( chunk.toString() );\n* }\n*\n* var opts = {\n*     'iter': 10\n* };\n*\n* var stream = randomStream( 2.0, 4.0, opts );\n*\n* stream.pipe( inspectStream( log ) );\n*\n* @example\n* import randomStream from '@stdlib/random-streams-cosine' ;\n*\n* var opts = {\n*     'sep': ',',\n*     'objectMode': false,\n*     'encoding': 'utf8',\n*     'highWaterMark': 64\n* };\n*\n* var createStream = randomStream.factory( opts );\n*\n* // Create 10 identically configured streams...\n* var streams = [];\n* var i;\n* for ( i = 0; i < 10; i++ ) {\n*     streams.push( createStream( 2.0, 4.0 ) );\n* }\n*\n* @example\n* import inspectStream from '@stdlib/streams-node-inspect-sink' ;\n* import randomStream from '@stdlib/random-streams-cosine' ;\n*\n* function log( v ) {\n*    console.log( v );\n* }\n*\n* var opts = {\n*     'iter': 10\n* };\n*\n* var stream = randomStream.objectMode( 2.0, 4.0, opts );\n*\n* stream.pipe( inspectStream.objectMode( log ) );\n*/\n\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport objectMode from './object_mode.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'objectMode', objectMode );\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["main","Object","defineProperty","objectProtoype","prototype","toStr","toString","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","err","hasDefinePropertySupport","builtin","obj","prop","descriptor","hasValue","hasGet","hasSet","call","TypeError","__proto__","value","Error","get","set","defineProperty$1","setNonEnumerableReadOnly","configurable","enumerable","writable","primordials","ArrayIsArray","self","Array","isArray","ArrayPrototypeIncludes","el","includes","ArrayPrototypeIndexOf","indexOf","ArrayPrototypeJoin","sep","join","ArrayPrototypeMap","fn","map","ArrayPrototypePop","pop","ArrayPrototypePush","push","ArrayPrototypeSlice","start","end","slice","FunctionPrototypeCall","thisArgs","args","FunctionPrototypeSymbolHasInstance","instance","Function","Symbol","hasInstance","MathFloor","Math","floor","Number","NumberIsInteger","isInteger","NumberIsNaN","isNaN","NumberMAX_SAFE_INTEGER","MAX_SAFE_INTEGER","NumberMIN_SAFE_INTEGER","MIN_SAFE_INTEGER","NumberParseInt","parseInt","ObjectDefineProperties","props","defineProperties","ObjectDefineProperty","name","ObjectGetOwnPropertyDescriptor","getOwnPropertyDescriptor","ObjectKeys","keys","ObjectSetPrototypeOf","target","proto","setPrototypeOf","Promise","PromisePrototypeCatch","catch","PromisePrototypeThen","thenFn","catchFn","then","PromiseReject","reject","ReflectApply","Reflect","apply","RegExpPrototypeTest","test","SafeSet","Set","String","StringPrototypeSlice","StringPrototypeToLowerCase","toLowerCase","StringPrototypeToUpperCase","toUpperCase","StringPrototypeTrim","trim","SymbolAsyncIterator","asyncIterator","SymbolHasInstance","SymbolIterator","iterator","TypedArrayPrototypeSet","buf","len","Uint8Array","bufferModule","require$$0","AsyncFunction","getPrototypeOf","async","constructor","Blob","globalThis","isBlob","b","AggregateError","errors","message","i","length","stack","super","this","module","exports","kEmptyObject","freeze","once","callback","called","createDeferredPromise","resolve","promise","res","rej","promisify","debuglog","format","replace","_unused","type","replacement","shift","toFixed","JSON","stringify","inspect","is","types","isAsyncFunction","isArrayBufferView","arr","ArrayBuffer","isView","custom","for","privateData","WeakMap","wrappers","pd","event","retv","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","key","defineRedirectDescriptor","defineCallDescriptor","arguments","getWrapper","wrapper","BaseEvent","CustomEvent","create","isFunc","defineWrapper","isStopped","setPassiveListener","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","listenersMap","isObject","x","getListeners","listeners","defineEventAttribute","eventTargetPrototype","eventName","node","listenerType","listener","next","prev","delete","newNode","passive","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","handleEvent","setEventPhase","setCurrentTarget","AbortSignal","aborted","abortedFlags","toStringTag","AbortController","signals","signal","createAbortSignal","getSignal","abort","controller","CustomAggregateError","kIsNodeError","kTypes","classRegExp","codes","ERR_INTERNAL_ASSERTION","addNumericalSeparator","val","E","code","Base","NodeError","msg","expectedLength","match","getMessage","hideStackFrames","hidden","AbortError","ERR_INVALID_ARG_TYPE","expected","actual","endsWith","instances","other","pos","splice","last","_actual$constructor","depth","inspected","colors","reason","input","_value$constructor","a","str","range","received","abs","RangeError","aggregateTwoErrors","innerError","outerError","ObjectPrototypeHasOwnProperty","RegExpPrototypeExec","ERR_SOCKET_BAD_PORT","ERR_INVALID_ARG_VALUE","ERR_OUT_OF_RANGE","ERR_UNKNOWN_SIGNAL","require$$1","normalizeEncoding","require$$2","octalReg","validateInteger","min","max","validateInt32","validateUint32","positive","validateString","validateOneOf","oneOf","allowed","v","getOwnPropertyValueOrDefault","defaultValue","validateObject","allowArray","allowFunction","validateArray","minLength","validateBuffer","buffer","validateAbortSignal","validateFunction","validatePlainFunction","validateUndefined","validators","isInt32","isUint32","parseFileMode","def","validateBoolean","validateEncoding","encoding","normalizedEncoding","validateNumber","validatePort","port","allowZero","validateSignalName","validateUnion","union","kDestroyed","kIsErrored","kIsReadable","kIsDisturbed","isReadableNodeStream","strict","_obj$_readableState","pipe","on","pause","resume","_writableState","_readableState","readable","isWritableNodeStream","_obj$_writableState","write","isNodeStream","isDestroyed","stream","wState","rState","state","destroyed","isWritableEnded","writableEnded","errored","ended","isReadableFinished","endEmitted","isReadable","isWritable","isOutgoingMessage","_closed","_defaultKeepAlive","_removedConnection","_removedContLen","isServerResponse","_sent100","utils","isDisturbed","_stream$kIsDisturbed","readableDidRead","readableAborted","isErrored","_ref","_ref2","_ref3","_ref4","_ref5","_stream$kIsErrored","_stream$_readableStat3","_stream$_writableStat3","_stream$_readableStat4","_stream$_writableStat4","readableErrored","writableErrored","errorEmitted","isClosed","closed","isDuplexNodeStream","isFinished","opts","isIterable","isAsync","isReadableEnded","readableEnded","isReadableErrored","_stream$_readableStat","_stream$_readableStat2","isWritableFinished","writableFinished","finished","isWritableErrored","_stream$_writableStat","_stream$_writableStat2","isServerRequest","_stream$req","_consuming","_dumped","req","upgradeOrConnect","willEmitClose","autoDestroy","emitClose","process","ERR_STREAM_PREMATURE_CLOSE","require$$3","require$$4","_willEmitClose","require$$5","isRequest","setHeader","nop","eos","_options$readable","_options$writable","onlegacyfinish","onfinish","readableFinished","onend","onerror","onclose","onrequest","nextTick","cleanup","removeListener","endCallback","cause","originalCallback","endOfStreamModule","endOfStream","ERR_MULTIPLE_CALLBACK","kDestroy","kConstruct","checkError","w","r","_destroy","cb","onDestroy","emitErrorCloseNT","emitCloseNT","emitErrorNT","closeEmitted","emit","errorOrDestroy","sync","destroy","constructNT","onConstruct","s","constructed","emitConstructNT","_construct","emitCloseLegacy","emitErrorCloseLegacy","destroy_1","construct","listenerCount","destroyer","socket","close","er","undestroy","reading","finalCalled","prefinished","ending","EventEmitter","EE","Stream","prependListener","emitter","_events","unshift","dest","source","ondata","chunk","ondrain","_isStdio","didOnEnd","legacy","addAbortSignal","addAbortSignalNoValidate","onAbort","Buffer","buffer_list","head","tail","entry","ret","clear","p","concat","n","alloc","allocUnsafe","consume","hasStrings","_getString","_getBuffer","first","c","retLen","byteOffset","_","customInspect","getDefaultHighWaterMark","objectMode","getHighWaterMark","duplexKey","isDuplex","hwm","highWaterMark","highWaterMarkFrom","ERR_STREAM_NULL_VALUES","from_1","Readable","iterable","read","_read","done","hadError","hasThrow","throw","return","e","ReadableState","require$$6","debug","require$$7","BufferList","require$$8","destroyImpl","require$$9","require$$10","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","require$$11","require$$12","kPaused","StringDecoder","require$$13","from","require$$14","require$$15","readableObjectMode","pipes","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrainWriters","multiAwaitDrain","readingMore","dataEmitted","decoder","maybeReadMore","readableAddChunk","addToFront","_isUint8Array","_uint8ArrayToBuffer","emitReadable","emitReadable_","onEofChunk","addChunk","_undestroy","captureRejectionSymbol","isPaused","setEncoding","enc","content","howMuchToRead","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","streamToAsyncIterator","wrap","iter","destroyOnReturn","off","createAsyncIterator","fromList","endReadable","endReadableNT","allowHalfOpen","endWritableNT","webStreamsAdapters","lazyWebStreams","NaN","nOrig","computeNewHighWaterMark","doRead","pipeOpts","src","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanedUp","needDrain","size","add","pipeOnDrain","writableNeedDrain","dests","index","ev","addListener","removeAllListeners","paused","streamKeys","j","bind","readableHighWaterMark","readableBuffer","readableFlowing","readableLength","readableEncoding","pipesCount","_fromList","fromWeb","readableStream","newStreamReadableFromReadableStream","toWeb","streamReadable","newReadableStreamFromStreamReadable","_src$readableObjectMo","Writable","WritableState","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_ALREADY_FINISHED","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","kOnFinished","writableObjectMode","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","writelen","afterWriteTickInfo","resetBuffer","pendingcb","buffered","bufferedIndex","allBuffers","allNoop","_write","writev","_writev","final","_final","clearBuffer","finishMaybe","isEncoding","writeOrBuffer","doWrite","onwriteError","errorBuffer","count","afterWriteTick","afterWrite","_state$errored","onfinishCallbacks","_state$errored2","bufferedLength","chunks","needFinish","prefinish","onFinish","finish","callFinal","getBuffer","object","cork","uncork","setDefaultEncoding","writableBuffer","writableHighWaterMark","writableCorked","writableLength","writableAborted","writableStream","newStreamWritableFromWritableStream","streamWritable","newWritableStreamFromStreamWritable","ERR_INVALID_RETURN_VALUE","Duplex","Duplexify","_duplexify","pair","onreadable","d","onfinished","duplexify","body","ac","_promise","_resolve","fromAsyncGen","arrayBuffer","duplex","method","newStreamDuplexFromReadableWritablePair","newReadableWritablePairFromDuplex","transform","Transform","kCallback","_transform","flush","_flush","passthrough","PassThrough","ERR_MISSING_ARGS","makeAsyncIterable","fromReadable","pump","onresolve","wait","pipelineImpl","streams","outerSignal","lastStreamCleanup","finishImpl","destroys","finishCount","forEach","isLastStream","onError","_ret","pt","dst","pipeline_1","pipeline","popCallback","compose","orgStreams","idx","pl","promises","lastArg","env","READABLE_STREAM","CustomStream","customPromisify","streamReturningOperators","promiseReturningOperators","kWeakHandler","kEmpty","kEof","concurrency","_options$signal","_options$signal2","queue","signalOpt","onDone","_val","_options$signal3","some","unused","filter","ReduceAwareErrMissingArgs","toIntegerOrInfinity","number","operators","asIndexedPairs","_options$signal4","drop","_options$signal8","_options$signal9","flatMap","values","take","_options$signal10","_options$signal11","every","reduce","reducer","initialValue","_options$signal5","hasInitialValue","gotAnyItemFromStream","_options$signal6","toArray","result","_options$signal7","find","ERR_ILLEGAL_CONSTRUCTOR","streamModule","op","require$$16","require$$17","byteLength","originalDestroy","default","isNumber","FLG","hasToStringTagSupport","has","hasOwnProperty","hasOwnProp","property","nativeClass","toStrTag","hasToStringTag","isOwn","tag","out","nativeClass$1","Number$1","isPrimitive","isPositiveNumber","valueOf","isnan","setReadOnly","RE","isBoolean","getGlobal","global","root","codegen","getThis","Self","Win","Global","nodeList","document","childNodes","typedarray","Int8Array","reFunctionName","RE_FUNCTION_NAME","REGEXP","isArray$2","isObjectLike","isBuffer","_isBuffer","constructorName","ctor","exec","predicate","arrayfun","ctorName","isFunction","typeOf","getProto","getProto$1","isError","FLOAT64_PINF","POSITIVE_INFINITY","FLOAT64_NINF","NEGATIVE_INFINITY","PINF","NINF","isInt","isNonNegativeInteger","isString","reRegExp","zeros","zeroPad","width","right","negative","pad","startsWithMinus","substr","lowercase","uppercase","formatInteger","token","base","specifier","arg","isFinite","precision","padRight","sign","alternate","charAt","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","formatDouble","digits","f","parseFloat","toExponential","toPrecision","spaces","spacePad","fromCharCode","initialize","flags","mapping","formatInterpolate","tokens","hasPeriod","flag","num","padZeros","maxWidth","substring","parse","formatTokenize","lastIndex","tokenize","interpolate","isNan","isCollection","searchElement","fromIndex","bool","isArguments","hasArgumentsClass","detect","isEnumerableProperty","propertyIsEnumerable","hasStringEnumBug","isEnum","isArguments$1","noop","isConstructorPrototype","hasAutomationEqualityBug","k","win","EXCLUDED_KEYS","check","keys$1","HAS_BUILTIN","skipConstructor","skipPrototype","isFcn","HAS_ENUM_PROTO_BUG","HAS_NON_ENUM_PROPS_BUG","HAS_WINDOW","NON_ENUMERABLE","getOwnPropertyNames","propertyNames","propertyDescriptor","desc","GlobalBuffer","hasNodeBufferSupport","copyBuffer","copyBuffer$1","hasInt8Array","GlobalInt8Array","INT8_MAX","hasInt8ArraySupport","Int8Array$1","hasUint8Array","GlobalUint8Array","UINT8_MAX","hasUint8ArraySupport","Uint8Array$1","hasUint8ClampedArray","Uint8ClampedArray","GlobalUint8ClampedArray","hasUint8ClampedArraySupport","Uint8ClampedArray$1","hasInt16Array","Int16Array","GlobalInt16Array","INT16_MAX","hasInt16ArraySupport","Int16Array$1","hasUint16Array","Uint16Array","GlobalUint16Array","UINT16_MAX","hasUint16ArraySupport","Uint16Array$1","hasInt32Array","Int32Array","GlobalInt32Array","INT32_MAX","hasInt32ArraySupport","Int32Array$1","hasUint32Array","Uint32Array","isUint32Array","GlobalUint32Array","UINT32_MAX","hasUint32ArraySupport","Uint32Array$1","hasFloat32Array","Float32Array","GlobalFloat32Array","hasFloat32ArraySupport","Float32Array$1","hasFloat64Array","Float64Array","hasFloat64ArraySupport","GlobalFloat64Array","Float64Array$1","int8array","uint8array","uint8clampedarray","int16array","uint16array","int32array","uint32array","float32array","float64array","typedArrays","deepCopy","copy","cache","refs","level","parent","ref","tmp","errno","syscall","objectKeys","copyError","RegExp","regexp","names","isExtensible","preventExtensions","isSealed","seal","isFrozen","cloneInstance","validate","Ctor","createObject$1","setNonEnumerableProperty","setReadOnlyAccessor","getter","setNonEnumerableReadOnlyAccessor","setNonEnumerableReadWriteAccessor","setter","objectPrototype","isPlainObject","isPrototypeOf","ownProps","isPositiveInteger","isPositiveZero","umul","la","lb","arraylike2object","accessors","getAccessor","getIndexed","setAccessor","setIndexed","gcopy","N","strideX","offsetX","y","strideY","offsetY","xbuf","ybuf","ix","iy","ox","oy","m","foo","isFunctionNameSupported","CTORS","TypedArray","Dummy","fcn","fcnName","isArrayLikeObject","hasArrayBuffer","isArrayBuffer","Complex128","real","imag","re","im","fround","FLOAT32_VIEW","float64ToFloat32$1","Complex64","float64ToFloat32","isComplexLike","isEven","hasIteratorSymbolSupport","IteratorSymbol","realf","z","imagf","reinterpret","offset","BYTES_PER_ELEMENT","fromIterator","it","fromIteratorMap","clbk","thisArg","fromArray","HAS_ITERATOR_SYMBOL","isComplexArray","Complex64Array","_length","_buffer","isComplexArrayConstructor","isComplex64Array","isComplex128Array","nargs","reinterpret64","reinterpret128","ITERATOR_SYMBOL","flg","copyWithin","entries","sbuf","Complex128Array","instanceOf","typeName","toJSON","NAMES","isTypedArray","isComplexTypedArray","randuint32","random","MAG01","MATRIX_A","verifyState","s1","STATE_FIXED_LENGTH","createState","initState","seed","M","twist","factory","STATE","slen","OTHER_SECTION_OFFSET","ndarray","SEED_SECTION_OFFSET","mt19937","getSeed","getSeedLength","setReadWriteAccessor","getState","setState","getStateLength","getStateSize","normalized","NAME","FLOAT64_MAX_SAFE_INTEGER","typedarray2json","params","mu","isPositive","isInfinite","uint16view","ctors","uint16","uint8","IS_LITTLE_ENDIAN","HIGH$5","isLittleEndian","FLOAT64_VIEW","UINT32_VIEW","getHighWord","HIGH","kernelCos","hz","polyval13","polyval46","S1","kernelSin","LOW","LOW$5","indices$3","indices","fromWords","high","low","indices$1","toWords","WORDS","copysign","hx","hy","normalize","stride","assign","FRAC","ldexp","frac","exp","floatExp","filled","IPIO2","PIO2","TWON24","F","Q","FQ","IQ","compute","jz","q","q0","jk","jv","jx","carry","fw","ih","jp","kernelRempio2","e0","nx","round","rempio2Medium","t","PIO2_1","PIO2_1T","TWO_PIO2_1T","FOUR_PIO2_1T","TX","TY","rempio2","getLowWord","rempio2Kernel","cos","Y","sin","PI","sinpi","ar","cdf","constantFunction","degenerate","string2buffer","bisect","cosineCDF","quantile","sample","rand","prng","randu","cosine2","cosine1","seedLength","stateLength","cosine0","string2buffer$1","proc","fmtprodmsg","u","encodeURIComponent","isNonNegativeNumber","isNonNegative","siter","logger","RandomStream","DEFAULTS","setNonEnumerable","rcosine","_prng","PRNG","createStream1","createStream2","superCtor","createObject","inherit","_destroyed","_i","_iter","_objectMode","_sep","_siter"],"mappings":"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"}