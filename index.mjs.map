{"version":3,"file":"index.mjs","sources":["../node_modules/process-nextick-args/index.js","../node_modules/isarray/index.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/safe-buffer/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/util-deprecate/browser.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/readable-browser.js","../lib/validate.js","../lib/debug.js","../lib/main.js","../lib/object_mode.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('buffer').Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean' ;\nimport { isPrimitive as isNonNegative } from '@stdlib/assert-is-nonnegative-number' ;\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer' ;\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.sep] - separator used to join streamed data\n* @param {boolean} [options.objectMode] - specifies whether a stream should operate in object mode\n* @param {(string|null)} [options.encoding] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the maximum number of bytes to store in the internal buffer before ceasing to generate additional pseudorandom numbers\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @param {PositiveInteger} [options.siter] - number of iterations after which to emit the PRNG state\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'objectMode': true\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '0QO2h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( '0QO2i', 'sep', opts.sep ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'objectMode' ) ) {\n\t\topts.objectMode = options.objectMode;\n\t\tif ( !isBoolean( opts.objectMode ) ) {\n\t\t\treturn new TypeError( format( '0QO30', 'objectMode', opts.objectMode ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'encoding' ) ) {\n\t\topts.encoding = options.encoding;\n\t\tif ( !isString( opts.encoding ) && opts.encoding !== null ) {\n\t\t\treturn new TypeError( format( '0QO84', 'encoding', opts.encoding ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'highWaterMark' ) ) {\n\t\topts.highWaterMark = options.highWaterMark;\n\t\tif ( !isNonNegative( opts.highWaterMark ) ) {\n\t\t\treturn new TypeError( format( '0QO4x', 'highWaterMark', opts.highWaterMark ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( opts.iter ) ) {\n\t\t\treturn new TypeError( format( '0QO35', 'iter', opts.iter ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'siter' ) ) {\n\t\topts.siter = options.siter;\n\t\tif ( !isPositiveInteger( opts.siter ) ) {\n\t\t\treturn new TypeError( format( '0QO3b', 'siter', opts.siter ) );\n\t\t}\n\t}\n\t// Pass through options...\n\tif ( hasOwnProp( options, 'prng' ) ) {\n\t\topts.prng = options.prng;\n\t}\n\tif ( hasOwnProp( options, 'seed' ) ) {\n\t\topts.seed = options.seed;\n\t}\n\tif ( hasOwnProp( options, 'state' ) ) {\n\t\topts.state = options.state;\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// MAIN //\n\nvar debug = logger( 'random:streams:cosine' );\n\n\n// EXPORTS //\n\nexport default debug;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Readable = require( 'readable-stream' ).Readable;\nimport { isPrimitive as isPositiveNumber } from '@stdlib/assert-is-positive-number' ;\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport isError from '@stdlib/assert-is-error' ;\nimport copy from '@stdlib/utils-copy' ;\nimport inherit from '@stdlib/utils-inherit' ;\nimport setNonEnumerable from '@stdlib/utils-define-nonenumerable-property' ;\nimport setNonEnumerableReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport setReadOnlyAccessor from '@stdlib/utils-define-read-only-accessor' ;\nimport setReadWriteAccessor from '@stdlib/utils-define-read-write-accessor' ;\nimport { factory as rcosine } from '@stdlib/random-base-cosine' ;\nimport string2buffer from '@stdlib/buffer-from-string' ;\nimport nextTick from '@stdlib/utils-next-tick' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\nimport DEFAULTS from './defaults.json' ;\nimport validate from './validate.js' ;\nimport debug from './debug.js' ;\n\n\n// FUNCTIONS //\n\n/**\n* Returns the PRNG seed.\n*\n* @private\n* @returns {(PRNGSeedMT19937|null)} seed\n*/\nfunction getSeed() {\n\treturn this._prng.seed; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Returns the PRNG seed length.\n*\n* @private\n* @returns {(PositiveInteger|null)} seed length\n*/\nfunction getSeedLength() {\n\treturn this._prng.seedLength; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Returns the PRNG state length.\n*\n* @private\n* @returns {(PositiveInteger|null)} state length\n*/\nfunction getStateLength() {\n\treturn this._prng.stateLength; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Returns the PRNG state size (in bytes).\n*\n* @private\n* @returns {(PositiveInteger|null)} state size (in bytes)\n*/\nfunction getStateSize() {\n\treturn this._prng.byteLength; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Returns the current PRNG state.\n*\n* @private\n* @returns {(PRNGStateMT19937|null)} current state\n*/\nfunction getState() {\n\treturn this._prng.state; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Sets the PRNG state.\n*\n* @private\n* @param {PRNGStateMT19937} s - generator state\n* @throws {Error} must provide a valid state\n*/\nfunction setState( s ) {\n\tthis._prng.state = s; // eslint-disable-line no-invalid-this\n}\n\n/**\n* Implements the `_read` method.\n*\n* @private\n* @param {number} size - number (of bytes) to read\n* @returns {void}\n*/\nfunction read() {\n\t/* eslint-disable no-invalid-this */\n\tvar FLG;\n\tvar r;\n\n\tif ( this._destroyed ) {\n\t\treturn;\n\t}\n\tFLG = true;\n\twhile ( FLG ) {\n\t\tthis._i += 1;\n\t\tif ( this._i > this._iter ) {\n\t\t\tdebug( 'Finished generating pseudorandom numbers.' );\n\t\t\treturn this.push( null );\n\t\t}\n\t\tr = this._prng();\n\n\t\tdebug( 'Generated a new pseudorandom number. Value: %d. Iter: %d.', r, this._i );\n\n\t\tif ( this._objectMode === false ) {\n\t\t\tr = r.toString();\n\t\t\tif ( this._i === 1 ) {\n\t\t\t\tr = string2buffer( r );\n\t\t\t} else {\n\t\t\t\tr = string2buffer( this._sep+r );\n\t\t\t}\n\t\t}\n\t\tFLG = this.push( r );\n\t\tif ( this._i%this._siter === 0 ) {\n\t\t\tthis.emit( 'state', this.state );\n\t\t}\n\t}\n\n\t/* eslint-enable no-invalid-this */\n}\n\n/**\n* Gracefully destroys a stream, providing backward compatibility.\n*\n* @private\n* @param {(string|Object|Error)} [error] - error\n* @returns {RandomStream} Stream instance\n*/\nfunction destroy( error ) {\n\t/* eslint-disable no-invalid-this */\n\tvar self;\n\tif ( this._destroyed ) {\n\t\tdebug( 'Attempted to destroy an already destroyed stream.' );\n\t\treturn this;\n\t}\n\tself = this;\n\tthis._destroyed = true;\n\n\tnextTick( close );\n\n\treturn this;\n\n\t/**\n\t* Closes a stream.\n\t*\n\t* @private\n\t*/\n\tfunction close() {\n\t\tif ( error ) {\n\t\t\tdebug( 'Stream was destroyed due to an error. Error: %s.', ( isError( error ) ) ? error.message : JSON.stringify( error ) );\n\t\t\tself.emit( 'error', error );\n\t\t}\n\t\tdebug( 'Closing the stream...' );\n\t\tself.emit( 'close' );\n\t}\n\n\t/* eslint-enable no-invalid-this */\n}\n\n\n// MAIN //\n\n/**\n* Stream constructor for generating a stream of pseudorandom numbers drawn from a raised cosine distribution.\n*\n* @constructor\n* @param {number} mu - location parameter\n* @param {PositiveNumber} s - scale parameter\n* @param {Options} [options] - stream options\n* @param {boolean} [options.objectMode=false] - specifies whether the stream should operate in object mode\n* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to strings\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the maximum number of bytes to store in an internal buffer before ceasing to generate additional pseudorandom numbers\n* @param {string} [options.sep='\\n'] - separator used to join streamed data\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @param {PositiveInteger} [options.siter] - number of iterations after which to emit the PRNG state\n* @throws {TypeError} `mu` must be a number\n* @throws {TypeError} `s` must be a positive number\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {RandomStream} Stream instance\n*\n* @example\n* import inspectStream from '@stdlib/streams-node-inspect-sink' ;\n*\n* function log( chunk ) {\n*    console.log( chunk.toString() );\n* }\n*\n* var opts = {\n*     'iter': 10\n* };\n*\n* var stream = new RandomStream( 2.0, 5.0, opts );\n*\n* stream.pipe( inspectStream( log )  );\n*/\nfunction RandomStream( mu, s, options ) {\n\tvar opts;\n\tvar err;\n\tif ( !( this instanceof RandomStream ) ) {\n\t\tif ( arguments.length > 2 ) {\n\t\t\treturn new RandomStream( mu, s, options );\n\t\t}\n\t\treturn new RandomStream( mu, s );\n\t}\n\tif ( !isNumber( mu ) || isnan( mu ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a number and not NaN. Value: `%s`.', mu ) );\n\t}\n\tif ( !isPositiveNumber( s ) ) {\n\t\tthrow new TypeError( format( '0QO7T', s ) );\n\t}\n\topts = copy( DEFAULTS );\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Make the stream a readable stream:\n\tdebug( 'Creating a readable stream configured with the following options: %s.', JSON.stringify( opts ) );\n\tReadable.call( this, opts );\n\n\t// Destruction state:\n\tsetNonEnumerable( this, '_destroyed', false );\n\n\t// Cache whether the stream is operating in object mode:\n\tsetNonEnumerableReadOnly( this, '_objectMode', opts.objectMode );\n\n\t// Cache the separator:\n\tsetNonEnumerableReadOnly( this, '_sep', opts.sep );\n\n\t// Cache the total number of iterations:\n\tsetNonEnumerableReadOnly( this, '_iter', opts.iter );\n\n\t// Cache the number of iterations after which to emit the underlying PRNG state:\n\tsetNonEnumerableReadOnly( this, '_siter', opts.siter );\n\n\t// Initialize an iteration counter:\n\tsetNonEnumerable( this, '_i', 0 );\n\n\t// Create the underlying PRNG:\n\tsetNonEnumerableReadOnly( this, '_prng', rcosine( mu, s, opts ) );\n\tsetNonEnumerableReadOnly( this, 'PRNG', this._prng.PRNG );\n\n\treturn this;\n}\n\n/*\n* Inherit from the `Readable` prototype.\n*/\ninherit( RandomStream, Readable );\n\n/**\n* PRNG seed.\n*\n* @name seed\n* @memberof RandomStream.prototype\n* @type {(PRNGSeedMT19937|null)}\n*/\nsetReadOnlyAccessor( RandomStream.prototype, 'seed', getSeed );\n\n/**\n* PRNG seed length.\n*\n* @name seedLength\n* @memberof RandomStream.prototype\n* @type {(PositiveInteger|null)}\n*/\nsetReadOnlyAccessor( RandomStream.prototype, 'seedLength', getSeedLength );\n\n/**\n* PRNG state getter/setter.\n*\n* @name state\n* @memberof RandomStream.prototype\n* @type {(PRNGStateMT19937|null)}\n* @throws {Error} must provide a valid state\n*/\nsetReadWriteAccessor( RandomStream.prototype, 'state', getState, setState );\n\n/**\n* PRNG state length.\n*\n* @name stateLength\n* @memberof RandomStream.prototype\n* @type {(PositiveInteger|null)}\n*/\nsetReadOnlyAccessor( RandomStream.prototype, 'stateLength', getStateLength );\n\n/**\n* PRNG state size (in bytes).\n*\n* @name byteLength\n* @memberof RandomStream.prototype\n* @type {(PositiveInteger|null)}\n*/\nsetReadOnlyAccessor( RandomStream.prototype, 'byteLength', getStateSize );\n\n/**\n* Implements the `_read` method.\n*\n* @private\n* @name _read\n* @memberof RandomStream.prototype\n* @type {Function}\n* @param {number} size - number (of bytes) to read\n* @returns {void}\n*/\nsetNonEnumerableReadOnly( RandomStream.prototype, '_read', read );\n\n/**\n* Gracefully destroys a stream, providing backward compatibility.\n*\n* @name destroy\n* @memberof RandomStream.prototype\n* @type {Function}\n* @param {(string|Object|Error)} [error] - error\n* @returns {RandomStream} Stream instance\n*/\nsetNonEnumerableReadOnly( RandomStream.prototype, 'destroy', destroy );\n\n\n// EXPORTS //\n\nexport default RandomStream;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object' ;\nimport copy from '@stdlib/utils-copy' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\nimport RandomStream from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Returns an \"objectMode\" readable stream for generating pseudorandom numbers drawn from a raised cosine distribution.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} s - scale parameter\n* @param {Options} [options] - stream options\n* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the maximum number of objects to store in an internal buffer before ceasing to generate additional pseudorandom numbers\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @param {PositiveInteger} [options.siter] - number of iterations after which to emit the PRNG state\n* @throws {TypeError} `s` must be a positive number\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {RandomStream} Stream instance\n*\n* @example\n* import inspectStream from '@stdlib/streams-node-inspect-sink' ;\n*\n* function log( v ) {\n*    console.log( v );\n* }\n*\n* var opts = {\n*     'iter': 10\n* };\n*\n* var stream = objectMode( 2.0, 1.0, opts );\n*\n* stream.pipe( inspectStream.objectMode( log ) );\n*/\nfunction objectMode( mu, s, options ) {\n\tvar opts;\n\tif ( arguments.length > 2 ) {\n\t\topts = options;\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( '0QO2h', opts ) );\n\t\t}\n\t\topts = copy( options, 1 );\n\t} else {\n\t\topts = {};\n\t}\n\topts.objectMode = true;\n\treturn new RandomStream( mu, s, opts );\n}\n\n\n// EXPORTS //\n\nexport default objectMode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copy from '@stdlib/utils-copy' ;\nimport RandomStream from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a function for creating readable streams which generate pseudorandom numbers drawn from a raised cosine distribution.\n*\n* @param {number} [mu] - location parameter\n* @param {PositiveNumber} [s] - scale parameter\n* @param {Options} [options] - stream options\n* @param {boolean} [options.objectMode=false] - specifies whether a stream should operate in object mode\n* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the maximum number of bytes to store in an internal buffer before ceasing to generate additional pseudorandom numbers\n* @param {string} [options.sep='\\n'] - separator used to join streamed data\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @param {PositiveInteger} [options.siter] - number of iterations after which to emit the PRNG state\n* @returns {Function} stream factory\n*\n* @example\n* var opts = {\n*     'sep': ',',\n*     'objectMode': false,\n*     'encoding': 'utf8',\n*     'highWaterMark': 64\n* };\n*\n* var createStream = factory( opts );\n*\n* // Create 10 identically configured streams...\n* var streams = [];\n* var i;\n* for ( i = 0; i < 10; i++ ) {\n*     streams.push( createStream( 2.0, 5.0 ) );\n* }\n*/\nfunction factory( mu, s, options ) {\n\tvar nargs;\n\tvar opts;\n\tvar fcn;\n\n\tnargs = arguments.length;\n\tif ( nargs === 1 ) {\n\t\topts = copy( mu, 1 );\n\t} else if ( nargs > 2 ) {\n\t\topts = copy( options, 1 );\n\t} else {\n\t\topts = {};\n\t}\n\tif ( nargs < 2 ) {\n\t\tfcn = createStream1;\n\t} else {\n\t\tfcn = createStream2;\n\t}\n\treturn fcn;\n\n\t/**\n\t* Returns a readable stream for generating pseudorandom numbers drawn from a raised cosine distribution.\n\t*\n\t* @private\n\t* @param {number} mu - location parameter\n\t* @param {PositiveNumber} s - scale parameter\n\t* @throws {TypeError} `s` must be a positive number\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @throws {Error} must provide a valid state\n\t* @returns {RandomStream} Stream instance\n\t*/\n\tfunction createStream1( mu, s ) {\n\t\treturn new RandomStream( mu, s, opts );\n\t}\n\n\t/**\n\t* Returns a readable stream for generating pseudorandom numbers drawn from a raised cosine distribution.\n\t*\n\t* @private\n\t* @throws {TypeError} `s` must be a positive number\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @throws {Error} must provide a valid state\n\t* @returns {RandomStream} Stream instance\n\t*/\n\tfunction createStream2() {\n\t\treturn new RandomStream( mu, s, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a readable stream for generating pseudorandom numbers drawn from a raised cosine distribution.\n*\n* @module @stdlib/random-streams-cosine\n*\n* @example\n* import inspectStream from '@stdlib/streams-node-inspect-sink' ;\n* import randomStream from '@stdlib/random-streams-cosine' ;\n*\n* function log( chunk ) {\n*    console.log( chunk.toString() );\n* }\n*\n* var opts = {\n*     'iter': 10\n* };\n*\n* var stream = randomStream( 2.0, 4.0, opts );\n*\n* stream.pipe( inspectStream( log ) );\n*\n* @example\n* import randomStream from '@stdlib/random-streams-cosine' ;\n*\n* var opts = {\n*     'sep': ',',\n*     'objectMode': false,\n*     'encoding': 'utf8',\n*     'highWaterMark': 64\n* };\n*\n* var createStream = randomStream.factory( opts );\n*\n* // Create 10 identically configured streams...\n* var streams = [];\n* var i;\n* for ( i = 0; i < 10; i++ ) {\n*     streams.push( createStream( 2.0, 4.0 ) );\n* }\n*\n* @example\n* import inspectStream from '@stdlib/streams-node-inspect-sink' ;\n* import randomStream from '@stdlib/random-streams-cosine' ;\n*\n* function log( v ) {\n*    console.log( v );\n* }\n*\n* var opts = {\n*     'iter': 10\n* };\n*\n* var stream = randomStream.objectMode( 2.0, 4.0, opts );\n*\n* stream.pipe( inspectStream.objectMode( log ) );\n*/\n\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport objectMode from './object_mode.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'objectMode', objectMode );\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["process","version","indexOf","module","nextTick","fn","arg1","arg2","arg3","TypeError","args","i","len","arguments","length","call","Array","apply","toString","isarray","isArray","arr","streamBrowser","require$$0","EventEmitter","buffer","Buffer","copyProps","src","dst","key","SafeBuffer","arg","encodingOrOffset","from","alloc","allocUnsafe","allocUnsafeSlow","exports","size","fill","encoding","buf","undefined","SlowBuffer","objectToString","o","Object","prototype","util","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","d","isError","e","Error","isFunction","isPrimitive","isBuffer","pna","emitErrorNT","self","err","emit","destroy_1","destroy","cb","_this","this","readableDestroyed","_readableState","destroyed","writableDestroyed","_writableState","errorEmitted","_destroy","undestroy","reading","ended","endEmitted","ending","finished","config","name","global","localStorage","_","val","String","toLowerCase","msg","warned","console","trace","warn","CorkedRequest","state","next","entry","finish","corkReq","callback","pendingcb","corkedRequestsFree","onCorkedFinish","Writable","Duplex","asyncWrite","browser","slice","setImmediate","WritableState","create","require$$1","inherits","require$$2","internalUtil","deprecate","require$$3","Stream","require$$4","require$$5","OurUint8Array","Uint8Array","realHasInstance","destroyImpl","require$$6","nop","options","stream","require$$7","isDuplex","objectMode","writableObjectMode","hwm","highWaterMark","writableHwm","writableHighWaterMark","defaultHwm","Math","floor","finalCalled","needDrain","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","er","writecb","writelen","onwriteStateUpdate","finishMaybe","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writable","write","_write","writev","_writev","final","_final","doWrite","chunk","onwriteDrain","l","holder","count","allBuffers","isBuf","callFinal","need","prefinish","getBuffer","current","out","push","defineProperty","get","Symbol","hasInstance","Function","value","object","pipe","obj","ret","_uint8ArrayToBuffer","writeAfterEnd","valid","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","enumerable","end","once","endWritable","set","_undestroy","objectKeys","keys","_stream_duplex","Readable","v","method","readable","allowHalfOpen","onend","onEndNT","ReadableState","EElistenerCount","emitter","type","listeners","debugUtil","debug","debuglog","StringDecoder","BufferList","instance","Constructor","_classCallCheck","head","tail","data","unshift","shift","clear","join","s","p","concat","n","target","offset","copy","inspect","custom","constructor","require$$9","kProxyEvents","require$$10","readableObjectMode","readableHwm","readableHighWaterMark","pipes","pipesCount","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","decoder","require$$11","read","_read","readableAddChunk","addToFront","skipChunkCheck","emitReadable","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","needMoreData","isPaused","setEncoding","enc","howMuchToRead","computeNewHighWaterMark","emitReadable_","flow","maybeReadMore_","nReadingNextTick","resume_","fromList","list","hasStrings","c","str","nb","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","x","parseInt","nOrig","doRead","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","on","pipeOnDrain","increasedAwaitDrain","pause","event","prependListener","_events","resume","dests","index","splice","ev","res","addListener","wrap","paused","bind","_fromList","_stream_transform","Transform","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","done","_this2","err2","_stream_passthrough","PassThrough","validate","opts","hasOwnProp","sep","format","isNonNegative","iter","isNonNegativeInteger","siter","isPositiveInteger","prng","seed","logger","RandomStream","mu","isnan","isPositiveNumber","DEFAULTS","JSON","stringify","setNonEnumerable","setNonEnumerableReadOnly","rcosine","_prng","PRNG","factory","nargs","createStream1","createStream2","inherit","setReadOnlyAccessor","seedLength","setReadWriteAccessor","stateLength","byteLength","FLG","r","_destroyed","_i","_iter","_objectMode","string2buffer","_sep","_siter","error","message","setReadOnly","main"],"mappings":"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"}